// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package wikijs

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

type AuthenticationStrategyInput struct {
	Key              string              `json:"key"`
	StrategyKey      string              `json:"strategyKey"`
	Config           []KeyValuePairInput `json:"config"`
	DisplayName      string              `json:"displayName"`
	Order            int                 `json:"order"`
	IsEnabled        bool                `json:"isEnabled"`
	SelfRegistration bool                `json:"selfRegistration"`
	DomainWhitelist  []string            `json:"domainWhitelist"`
	AutoEnrollGroups []int               `json:"autoEnrollGroups"`
}

// GetKey returns AuthenticationStrategyInput.Key, and is useful for accessing the field via an interface.
func (v *AuthenticationStrategyInput) GetKey() string { return v.Key }

// GetStrategyKey returns AuthenticationStrategyInput.StrategyKey, and is useful for accessing the field via an interface.
func (v *AuthenticationStrategyInput) GetStrategyKey() string { return v.StrategyKey }

// GetConfig returns AuthenticationStrategyInput.Config, and is useful for accessing the field via an interface.
func (v *AuthenticationStrategyInput) GetConfig() []KeyValuePairInput { return v.Config }

// GetDisplayName returns AuthenticationStrategyInput.DisplayName, and is useful for accessing the field via an interface.
func (v *AuthenticationStrategyInput) GetDisplayName() string { return v.DisplayName }

// GetOrder returns AuthenticationStrategyInput.Order, and is useful for accessing the field via an interface.
func (v *AuthenticationStrategyInput) GetOrder() int { return v.Order }

// GetIsEnabled returns AuthenticationStrategyInput.IsEnabled, and is useful for accessing the field via an interface.
func (v *AuthenticationStrategyInput) GetIsEnabled() bool { return v.IsEnabled }

// GetSelfRegistration returns AuthenticationStrategyInput.SelfRegistration, and is useful for accessing the field via an interface.
func (v *AuthenticationStrategyInput) GetSelfRegistration() bool { return v.SelfRegistration }

// GetDomainWhitelist returns AuthenticationStrategyInput.DomainWhitelist, and is useful for accessing the field via an interface.
func (v *AuthenticationStrategyInput) GetDomainWhitelist() []string { return v.DomainWhitelist }

// GetAutoEnrollGroups returns AuthenticationStrategyInput.AutoEnrollGroups, and is useful for accessing the field via an interface.
func (v *AuthenticationStrategyInput) GetAutoEnrollGroups() []int { return v.AutoEnrollGroups }

// CreateApiKeyAuthenticationAuthenticationMutation includes the requested fields of the GraphQL type AuthenticationMutation.
type CreateApiKeyAuthenticationAuthenticationMutation struct {
	CreateApiKey CreateApiKeyAuthenticationAuthenticationMutationCreateApiKeyAuthenticationCreateApiKeyResponse `json:"createApiKey"`
}

// GetCreateApiKey returns CreateApiKeyAuthenticationAuthenticationMutation.CreateApiKey, and is useful for accessing the field via an interface.
func (v *CreateApiKeyAuthenticationAuthenticationMutation) GetCreateApiKey() CreateApiKeyAuthenticationAuthenticationMutationCreateApiKeyAuthenticationCreateApiKeyResponse {
	return v.CreateApiKey
}

// CreateApiKeyAuthenticationAuthenticationMutationCreateApiKeyAuthenticationCreateApiKeyResponse includes the requested fields of the GraphQL type AuthenticationCreateApiKeyResponse.
type CreateApiKeyAuthenticationAuthenticationMutationCreateApiKeyAuthenticationCreateApiKeyResponse struct {
	ResponseResult CreateApiKeyAuthenticationAuthenticationMutationCreateApiKeyAuthenticationCreateApiKeyResponseResponseResultResponseStatus `json:"responseResult"`
	Key            string                                                                                                                     `json:"key"`
}

// GetResponseResult returns CreateApiKeyAuthenticationAuthenticationMutationCreateApiKeyAuthenticationCreateApiKeyResponse.ResponseResult, and is useful for accessing the field via an interface.
func (v *CreateApiKeyAuthenticationAuthenticationMutationCreateApiKeyAuthenticationCreateApiKeyResponse) GetResponseResult() CreateApiKeyAuthenticationAuthenticationMutationCreateApiKeyAuthenticationCreateApiKeyResponseResponseResultResponseStatus {
	return v.ResponseResult
}

// GetKey returns CreateApiKeyAuthenticationAuthenticationMutationCreateApiKeyAuthenticationCreateApiKeyResponse.Key, and is useful for accessing the field via an interface.
func (v *CreateApiKeyAuthenticationAuthenticationMutationCreateApiKeyAuthenticationCreateApiKeyResponse) GetKey() string {
	return v.Key
}

// CreateApiKeyAuthenticationAuthenticationMutationCreateApiKeyAuthenticationCreateApiKeyResponseResponseResultResponseStatus includes the requested fields of the GraphQL type ResponseStatus.
type CreateApiKeyAuthenticationAuthenticationMutationCreateApiKeyAuthenticationCreateApiKeyResponseResponseResultResponseStatus struct {
	Succeeded bool   `json:"succeeded"`
	ErrorCode int    `json:"errorCode"`
	Slug      string `json:"slug"`
	Message   string `json:"message"`
}

// GetSucceeded returns CreateApiKeyAuthenticationAuthenticationMutationCreateApiKeyAuthenticationCreateApiKeyResponseResponseResultResponseStatus.Succeeded, and is useful for accessing the field via an interface.
func (v *CreateApiKeyAuthenticationAuthenticationMutationCreateApiKeyAuthenticationCreateApiKeyResponseResponseResultResponseStatus) GetSucceeded() bool {
	return v.Succeeded
}

// GetErrorCode returns CreateApiKeyAuthenticationAuthenticationMutationCreateApiKeyAuthenticationCreateApiKeyResponseResponseResultResponseStatus.ErrorCode, and is useful for accessing the field via an interface.
func (v *CreateApiKeyAuthenticationAuthenticationMutationCreateApiKeyAuthenticationCreateApiKeyResponseResponseResultResponseStatus) GetErrorCode() int {
	return v.ErrorCode
}

// GetSlug returns CreateApiKeyAuthenticationAuthenticationMutationCreateApiKeyAuthenticationCreateApiKeyResponseResponseResultResponseStatus.Slug, and is useful for accessing the field via an interface.
func (v *CreateApiKeyAuthenticationAuthenticationMutationCreateApiKeyAuthenticationCreateApiKeyResponseResponseResultResponseStatus) GetSlug() string {
	return v.Slug
}

// GetMessage returns CreateApiKeyAuthenticationAuthenticationMutationCreateApiKeyAuthenticationCreateApiKeyResponseResponseResultResponseStatus.Message, and is useful for accessing the field via an interface.
func (v *CreateApiKeyAuthenticationAuthenticationMutationCreateApiKeyAuthenticationCreateApiKeyResponseResponseResultResponseStatus) GetMessage() string {
	return v.Message
}

// CreateApiKeyResponse is returned by CreateApiKey on success.
type CreateApiKeyResponse struct {
	Authentication CreateApiKeyAuthenticationAuthenticationMutation `json:"authentication"`
}

// GetAuthentication returns CreateApiKeyResponse.Authentication, and is useful for accessing the field via an interface.
func (v *CreateApiKeyResponse) GetAuthentication() CreateApiKeyAuthenticationAuthenticationMutation {
	return v.Authentication
}

// CreateGroupGroupsGroupMutation includes the requested fields of the GraphQL type GroupMutation.
type CreateGroupGroupsGroupMutation struct {
	Create CreateGroupGroupsGroupMutationCreateGroupResponse `json:"create"`
}

// GetCreate returns CreateGroupGroupsGroupMutation.Create, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutation) GetCreate() CreateGroupGroupsGroupMutationCreateGroupResponse {
	return v.Create
}

// CreateGroupGroupsGroupMutationCreateGroupResponse includes the requested fields of the GraphQL type GroupResponse.
type CreateGroupGroupsGroupMutationCreateGroupResponse struct {
	ResponseResult CreateGroupGroupsGroupMutationCreateGroupResponseResponseResultResponseStatus `json:"responseResult"`
	Group          CreateGroupGroupsGroupMutationCreateGroupResponseGroup                        `json:"group"`
}

// GetResponseResult returns CreateGroupGroupsGroupMutationCreateGroupResponse.ResponseResult, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponse) GetResponseResult() CreateGroupGroupsGroupMutationCreateGroupResponseResponseResultResponseStatus {
	return v.ResponseResult
}

// GetGroup returns CreateGroupGroupsGroupMutationCreateGroupResponse.Group, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponse) GetGroup() CreateGroupGroupsGroupMutationCreateGroupResponseGroup {
	return v.Group
}

// CreateGroupGroupsGroupMutationCreateGroupResponseGroup includes the requested fields of the GraphQL type Group.
type CreateGroupGroupsGroupMutationCreateGroupResponseGroup struct {
	Id              int                                                                       `json:"id"`
	Name            string                                                                    `json:"name"`
	IsSystem        bool                                                                      `json:"isSystem"`
	RedirectOnLogin string                                                                    `json:"redirectOnLogin"`
	Permissions     []string                                                                  `json:"permissions"`
	PageRules       []CreateGroupGroupsGroupMutationCreateGroupResponseGroupPageRulesPageRule `json:"pageRules"`
	Users           []CreateGroupGroupsGroupMutationCreateGroupResponseGroupUsersUserMinimal  `json:"users"`
	CreatedAt       string                                                                    `json:"createdAt"`
	UpdatedAt       string                                                                    `json:"updatedAt"`
}

// GetId returns CreateGroupGroupsGroupMutationCreateGroupResponseGroup.Id, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponseGroup) GetId() int { return v.Id }

// GetName returns CreateGroupGroupsGroupMutationCreateGroupResponseGroup.Name, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponseGroup) GetName() string { return v.Name }

// GetIsSystem returns CreateGroupGroupsGroupMutationCreateGroupResponseGroup.IsSystem, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponseGroup) GetIsSystem() bool {
	return v.IsSystem
}

// GetRedirectOnLogin returns CreateGroupGroupsGroupMutationCreateGroupResponseGroup.RedirectOnLogin, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponseGroup) GetRedirectOnLogin() string {
	return v.RedirectOnLogin
}

// GetPermissions returns CreateGroupGroupsGroupMutationCreateGroupResponseGroup.Permissions, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponseGroup) GetPermissions() []string {
	return v.Permissions
}

// GetPageRules returns CreateGroupGroupsGroupMutationCreateGroupResponseGroup.PageRules, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponseGroup) GetPageRules() []CreateGroupGroupsGroupMutationCreateGroupResponseGroupPageRulesPageRule {
	return v.PageRules
}

// GetUsers returns CreateGroupGroupsGroupMutationCreateGroupResponseGroup.Users, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponseGroup) GetUsers() []CreateGroupGroupsGroupMutationCreateGroupResponseGroupUsersUserMinimal {
	return v.Users
}

// GetCreatedAt returns CreateGroupGroupsGroupMutationCreateGroupResponseGroup.CreatedAt, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponseGroup) GetCreatedAt() string {
	return v.CreatedAt
}

// GetUpdatedAt returns CreateGroupGroupsGroupMutationCreateGroupResponseGroup.UpdatedAt, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponseGroup) GetUpdatedAt() string {
	return v.UpdatedAt
}

// CreateGroupGroupsGroupMutationCreateGroupResponseGroupPageRulesPageRule includes the requested fields of the GraphQL type PageRule.
type CreateGroupGroupsGroupMutationCreateGroupResponseGroupPageRulesPageRule struct {
	Id      string        `json:"id"`
	Deny    bool          `json:"deny"`
	Match   PageRuleMatch `json:"match"`
	Roles   []string      `json:"roles"`
	Path    string        `json:"path"`
	Locales []string      `json:"locales"`
}

// GetId returns CreateGroupGroupsGroupMutationCreateGroupResponseGroupPageRulesPageRule.Id, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponseGroupPageRulesPageRule) GetId() string {
	return v.Id
}

// GetDeny returns CreateGroupGroupsGroupMutationCreateGroupResponseGroupPageRulesPageRule.Deny, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponseGroupPageRulesPageRule) GetDeny() bool {
	return v.Deny
}

// GetMatch returns CreateGroupGroupsGroupMutationCreateGroupResponseGroupPageRulesPageRule.Match, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponseGroupPageRulesPageRule) GetMatch() PageRuleMatch {
	return v.Match
}

// GetRoles returns CreateGroupGroupsGroupMutationCreateGroupResponseGroupPageRulesPageRule.Roles, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponseGroupPageRulesPageRule) GetRoles() []string {
	return v.Roles
}

// GetPath returns CreateGroupGroupsGroupMutationCreateGroupResponseGroupPageRulesPageRule.Path, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponseGroupPageRulesPageRule) GetPath() string {
	return v.Path
}

// GetLocales returns CreateGroupGroupsGroupMutationCreateGroupResponseGroupPageRulesPageRule.Locales, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponseGroupPageRulesPageRule) GetLocales() []string {
	return v.Locales
}

// CreateGroupGroupsGroupMutationCreateGroupResponseGroupUsersUserMinimal includes the requested fields of the GraphQL type UserMinimal.
type CreateGroupGroupsGroupMutationCreateGroupResponseGroupUsersUserMinimal struct {
	Id          int    `json:"id"`
	Name        string `json:"name"`
	Email       string `json:"email"`
	ProviderKey string `json:"providerKey"`
	IsSystem    bool   `json:"isSystem"`
	IsActive    bool   `json:"isActive"`
	CreatedAt   string `json:"createdAt"`
	LastLoginAt string `json:"lastLoginAt"`
}

// GetId returns CreateGroupGroupsGroupMutationCreateGroupResponseGroupUsersUserMinimal.Id, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponseGroupUsersUserMinimal) GetId() int {
	return v.Id
}

// GetName returns CreateGroupGroupsGroupMutationCreateGroupResponseGroupUsersUserMinimal.Name, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponseGroupUsersUserMinimal) GetName() string {
	return v.Name
}

// GetEmail returns CreateGroupGroupsGroupMutationCreateGroupResponseGroupUsersUserMinimal.Email, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponseGroupUsersUserMinimal) GetEmail() string {
	return v.Email
}

// GetProviderKey returns CreateGroupGroupsGroupMutationCreateGroupResponseGroupUsersUserMinimal.ProviderKey, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponseGroupUsersUserMinimal) GetProviderKey() string {
	return v.ProviderKey
}

// GetIsSystem returns CreateGroupGroupsGroupMutationCreateGroupResponseGroupUsersUserMinimal.IsSystem, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponseGroupUsersUserMinimal) GetIsSystem() bool {
	return v.IsSystem
}

// GetIsActive returns CreateGroupGroupsGroupMutationCreateGroupResponseGroupUsersUserMinimal.IsActive, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponseGroupUsersUserMinimal) GetIsActive() bool {
	return v.IsActive
}

// GetCreatedAt returns CreateGroupGroupsGroupMutationCreateGroupResponseGroupUsersUserMinimal.CreatedAt, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponseGroupUsersUserMinimal) GetCreatedAt() string {
	return v.CreatedAt
}

// GetLastLoginAt returns CreateGroupGroupsGroupMutationCreateGroupResponseGroupUsersUserMinimal.LastLoginAt, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponseGroupUsersUserMinimal) GetLastLoginAt() string {
	return v.LastLoginAt
}

// CreateGroupGroupsGroupMutationCreateGroupResponseResponseResultResponseStatus includes the requested fields of the GraphQL type ResponseStatus.
type CreateGroupGroupsGroupMutationCreateGroupResponseResponseResultResponseStatus struct {
	Succeeded bool   `json:"succeeded"`
	ErrorCode int    `json:"errorCode"`
	Slug      string `json:"slug"`
	Message   string `json:"message"`
}

// GetSucceeded returns CreateGroupGroupsGroupMutationCreateGroupResponseResponseResultResponseStatus.Succeeded, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponseResponseResultResponseStatus) GetSucceeded() bool {
	return v.Succeeded
}

// GetErrorCode returns CreateGroupGroupsGroupMutationCreateGroupResponseResponseResultResponseStatus.ErrorCode, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponseResponseResultResponseStatus) GetErrorCode() int {
	return v.ErrorCode
}

// GetSlug returns CreateGroupGroupsGroupMutationCreateGroupResponseResponseResultResponseStatus.Slug, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponseResponseResultResponseStatus) GetSlug() string {
	return v.Slug
}

// GetMessage returns CreateGroupGroupsGroupMutationCreateGroupResponseResponseResultResponseStatus.Message, and is useful for accessing the field via an interface.
func (v *CreateGroupGroupsGroupMutationCreateGroupResponseResponseResultResponseStatus) GetMessage() string {
	return v.Message
}

// CreateGroupResponse is returned by CreateGroup on success.
type CreateGroupResponse struct {
	Groups CreateGroupGroupsGroupMutation `json:"groups"`
}

// GetGroups returns CreateGroupResponse.Groups, and is useful for accessing the field via an interface.
func (v *CreateGroupResponse) GetGroups() CreateGroupGroupsGroupMutation { return v.Groups }

// CreatePagePagesPageMutation includes the requested fields of the GraphQL type PageMutation.
type CreatePagePagesPageMutation struct {
	Create CreatePagePagesPageMutationCreatePageResponse `json:"create"`
}

// GetCreate returns CreatePagePagesPageMutation.Create, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutation) GetCreate() CreatePagePagesPageMutationCreatePageResponse {
	return v.Create
}

// CreatePagePagesPageMutationCreatePageResponse includes the requested fields of the GraphQL type PageResponse.
type CreatePagePagesPageMutationCreatePageResponse struct {
	ResponseResult CreatePagePagesPageMutationCreatePageResponseResponseResultResponseStatus `json:"responseResult"`
	Page           CreatePagePagesPageMutationCreatePageResponsePage                         `json:"page"`
}

// GetResponseResult returns CreatePagePagesPageMutationCreatePageResponse.ResponseResult, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponse) GetResponseResult() CreatePagePagesPageMutationCreatePageResponseResponseResultResponseStatus {
	return v.ResponseResult
}

// GetPage returns CreatePagePagesPageMutationCreatePageResponse.Page, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponse) GetPage() CreatePagePagesPageMutationCreatePageResponsePage {
	return v.Page
}

// CreatePagePagesPageMutationCreatePageResponsePage includes the requested fields of the GraphQL type Page.
type CreatePagePagesPageMutationCreatePageResponsePage struct {
	Id               int                                                            `json:"id"`
	Path             string                                                         `json:"path"`
	Hash             string                                                         `json:"hash"`
	Title            string                                                         `json:"title"`
	Description      string                                                         `json:"description"`
	IsPrivate        bool                                                           `json:"isPrivate"`
	IsPublished      bool                                                           `json:"isPublished"`
	PrivateNS        string                                                         `json:"privateNS"`
	PublishStartDate string                                                         `json:"publishStartDate"`
	PublishEndDate   string                                                         `json:"publishEndDate"`
	Tags             []CreatePagePagesPageMutationCreatePageResponsePageTagsPageTag `json:"tags"`
	Content          string                                                         `json:"content"`
	Render           string                                                         `json:"render"`
	ContentType      string                                                         `json:"contentType"`
	CreatedAt        string                                                         `json:"createdAt"`
	UpdatedAt        string                                                         `json:"updatedAt"`
	ScriptCss        string                                                         `json:"scriptCss"`
	ScriptJs         string                                                         `json:"scriptJs"`
	AuthorId         int                                                            `json:"authorId"`
	AuthorName       string                                                         `json:"authorName"`
	AuthorEmail      string                                                         `json:"authorEmail"`
	CreatorId        int                                                            `json:"creatorId"`
	CreatorName      string                                                         `json:"creatorName"`
	CreatorEmail     string                                                         `json:"creatorEmail"`
}

// GetId returns CreatePagePagesPageMutationCreatePageResponsePage.Id, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePage) GetId() int { return v.Id }

// GetPath returns CreatePagePagesPageMutationCreatePageResponsePage.Path, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePage) GetPath() string { return v.Path }

// GetHash returns CreatePagePagesPageMutationCreatePageResponsePage.Hash, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePage) GetHash() string { return v.Hash }

// GetTitle returns CreatePagePagesPageMutationCreatePageResponsePage.Title, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePage) GetTitle() string { return v.Title }

// GetDescription returns CreatePagePagesPageMutationCreatePageResponsePage.Description, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePage) GetDescription() string {
	return v.Description
}

// GetIsPrivate returns CreatePagePagesPageMutationCreatePageResponsePage.IsPrivate, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePage) GetIsPrivate() bool { return v.IsPrivate }

// GetIsPublished returns CreatePagePagesPageMutationCreatePageResponsePage.IsPublished, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePage) GetIsPublished() bool {
	return v.IsPublished
}

// GetPrivateNS returns CreatePagePagesPageMutationCreatePageResponsePage.PrivateNS, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePage) GetPrivateNS() string { return v.PrivateNS }

// GetPublishStartDate returns CreatePagePagesPageMutationCreatePageResponsePage.PublishStartDate, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePage) GetPublishStartDate() string {
	return v.PublishStartDate
}

// GetPublishEndDate returns CreatePagePagesPageMutationCreatePageResponsePage.PublishEndDate, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePage) GetPublishEndDate() string {
	return v.PublishEndDate
}

// GetTags returns CreatePagePagesPageMutationCreatePageResponsePage.Tags, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePage) GetTags() []CreatePagePagesPageMutationCreatePageResponsePageTagsPageTag {
	return v.Tags
}

// GetContent returns CreatePagePagesPageMutationCreatePageResponsePage.Content, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePage) GetContent() string { return v.Content }

// GetRender returns CreatePagePagesPageMutationCreatePageResponsePage.Render, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePage) GetRender() string { return v.Render }

// GetContentType returns CreatePagePagesPageMutationCreatePageResponsePage.ContentType, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePage) GetContentType() string {
	return v.ContentType
}

// GetCreatedAt returns CreatePagePagesPageMutationCreatePageResponsePage.CreatedAt, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePage) GetCreatedAt() string { return v.CreatedAt }

// GetUpdatedAt returns CreatePagePagesPageMutationCreatePageResponsePage.UpdatedAt, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePage) GetUpdatedAt() string { return v.UpdatedAt }

// GetScriptCss returns CreatePagePagesPageMutationCreatePageResponsePage.ScriptCss, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePage) GetScriptCss() string { return v.ScriptCss }

// GetScriptJs returns CreatePagePagesPageMutationCreatePageResponsePage.ScriptJs, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePage) GetScriptJs() string { return v.ScriptJs }

// GetAuthorId returns CreatePagePagesPageMutationCreatePageResponsePage.AuthorId, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePage) GetAuthorId() int { return v.AuthorId }

// GetAuthorName returns CreatePagePagesPageMutationCreatePageResponsePage.AuthorName, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePage) GetAuthorName() string {
	return v.AuthorName
}

// GetAuthorEmail returns CreatePagePagesPageMutationCreatePageResponsePage.AuthorEmail, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePage) GetAuthorEmail() string {
	return v.AuthorEmail
}

// GetCreatorId returns CreatePagePagesPageMutationCreatePageResponsePage.CreatorId, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePage) GetCreatorId() int { return v.CreatorId }

// GetCreatorName returns CreatePagePagesPageMutationCreatePageResponsePage.CreatorName, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePage) GetCreatorName() string {
	return v.CreatorName
}

// GetCreatorEmail returns CreatePagePagesPageMutationCreatePageResponsePage.CreatorEmail, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePage) GetCreatorEmail() string {
	return v.CreatorEmail
}

// CreatePagePagesPageMutationCreatePageResponsePageTagsPageTag includes the requested fields of the GraphQL type PageTag.
type CreatePagePagesPageMutationCreatePageResponsePageTagsPageTag struct {
	Id        int    `json:"id"`
	Tag       string `json:"tag"`
	Title     string `json:"title"`
	CreatedAt string `json:"createdAt"`
	UpdatedAt string `json:"updatedAt"`
}

// GetId returns CreatePagePagesPageMutationCreatePageResponsePageTagsPageTag.Id, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePageTagsPageTag) GetId() int { return v.Id }

// GetTag returns CreatePagePagesPageMutationCreatePageResponsePageTagsPageTag.Tag, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePageTagsPageTag) GetTag() string { return v.Tag }

// GetTitle returns CreatePagePagesPageMutationCreatePageResponsePageTagsPageTag.Title, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePageTagsPageTag) GetTitle() string {
	return v.Title
}

// GetCreatedAt returns CreatePagePagesPageMutationCreatePageResponsePageTagsPageTag.CreatedAt, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePageTagsPageTag) GetCreatedAt() string {
	return v.CreatedAt
}

// GetUpdatedAt returns CreatePagePagesPageMutationCreatePageResponsePageTagsPageTag.UpdatedAt, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponsePageTagsPageTag) GetUpdatedAt() string {
	return v.UpdatedAt
}

// CreatePagePagesPageMutationCreatePageResponseResponseResultResponseStatus includes the requested fields of the GraphQL type ResponseStatus.
type CreatePagePagesPageMutationCreatePageResponseResponseResultResponseStatus struct {
	Succeeded bool   `json:"succeeded"`
	ErrorCode int    `json:"errorCode"`
	Slug      string `json:"slug"`
	Message   string `json:"message"`
}

// GetSucceeded returns CreatePagePagesPageMutationCreatePageResponseResponseResultResponseStatus.Succeeded, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponseResponseResultResponseStatus) GetSucceeded() bool {
	return v.Succeeded
}

// GetErrorCode returns CreatePagePagesPageMutationCreatePageResponseResponseResultResponseStatus.ErrorCode, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponseResponseResultResponseStatus) GetErrorCode() int {
	return v.ErrorCode
}

// GetSlug returns CreatePagePagesPageMutationCreatePageResponseResponseResultResponseStatus.Slug, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponseResponseResultResponseStatus) GetSlug() string {
	return v.Slug
}

// GetMessage returns CreatePagePagesPageMutationCreatePageResponseResponseResultResponseStatus.Message, and is useful for accessing the field via an interface.
func (v *CreatePagePagesPageMutationCreatePageResponseResponseResultResponseStatus) GetMessage() string {
	return v.Message
}

// CreatePageResponse is returned by CreatePage on success.
type CreatePageResponse struct {
	Pages CreatePagePagesPageMutation `json:"pages"`
}

// GetPages returns CreatePageResponse.Pages, and is useful for accessing the field via an interface.
func (v *CreatePageResponse) GetPages() CreatePagePagesPageMutation { return v.Pages }

// DeleteGroupGroupsGroupMutation includes the requested fields of the GraphQL type GroupMutation.
type DeleteGroupGroupsGroupMutation struct {
	Delete DeleteGroupGroupsGroupMutationDeleteDefaultResponse `json:"delete"`
}

// GetDelete returns DeleteGroupGroupsGroupMutation.Delete, and is useful for accessing the field via an interface.
func (v *DeleteGroupGroupsGroupMutation) GetDelete() DeleteGroupGroupsGroupMutationDeleteDefaultResponse {
	return v.Delete
}

// DeleteGroupGroupsGroupMutationDeleteDefaultResponse includes the requested fields of the GraphQL type DefaultResponse.
type DeleteGroupGroupsGroupMutationDeleteDefaultResponse struct {
	ResponseResult DeleteGroupGroupsGroupMutationDeleteDefaultResponseResponseResultResponseStatus `json:"responseResult"`
}

// GetResponseResult returns DeleteGroupGroupsGroupMutationDeleteDefaultResponse.ResponseResult, and is useful for accessing the field via an interface.
func (v *DeleteGroupGroupsGroupMutationDeleteDefaultResponse) GetResponseResult() DeleteGroupGroupsGroupMutationDeleteDefaultResponseResponseResultResponseStatus {
	return v.ResponseResult
}

// DeleteGroupGroupsGroupMutationDeleteDefaultResponseResponseResultResponseStatus includes the requested fields of the GraphQL type ResponseStatus.
type DeleteGroupGroupsGroupMutationDeleteDefaultResponseResponseResultResponseStatus struct {
	Succeeded bool   `json:"succeeded"`
	ErrorCode int    `json:"errorCode"`
	Slug      string `json:"slug"`
	Message   string `json:"message"`
}

// GetSucceeded returns DeleteGroupGroupsGroupMutationDeleteDefaultResponseResponseResultResponseStatus.Succeeded, and is useful for accessing the field via an interface.
func (v *DeleteGroupGroupsGroupMutationDeleteDefaultResponseResponseResultResponseStatus) GetSucceeded() bool {
	return v.Succeeded
}

// GetErrorCode returns DeleteGroupGroupsGroupMutationDeleteDefaultResponseResponseResultResponseStatus.ErrorCode, and is useful for accessing the field via an interface.
func (v *DeleteGroupGroupsGroupMutationDeleteDefaultResponseResponseResultResponseStatus) GetErrorCode() int {
	return v.ErrorCode
}

// GetSlug returns DeleteGroupGroupsGroupMutationDeleteDefaultResponseResponseResultResponseStatus.Slug, and is useful for accessing the field via an interface.
func (v *DeleteGroupGroupsGroupMutationDeleteDefaultResponseResponseResultResponseStatus) GetSlug() string {
	return v.Slug
}

// GetMessage returns DeleteGroupGroupsGroupMutationDeleteDefaultResponseResponseResultResponseStatus.Message, and is useful for accessing the field via an interface.
func (v *DeleteGroupGroupsGroupMutationDeleteDefaultResponseResponseResultResponseStatus) GetMessage() string {
	return v.Message
}

// DeleteGroupResponse is returned by DeleteGroup on success.
type DeleteGroupResponse struct {
	Groups DeleteGroupGroupsGroupMutation `json:"groups"`
}

// GetGroups returns DeleteGroupResponse.Groups, and is useful for accessing the field via an interface.
func (v *DeleteGroupResponse) GetGroups() DeleteGroupGroupsGroupMutation { return v.Groups }

// DeletePagePagesPageMutation includes the requested fields of the GraphQL type PageMutation.
type DeletePagePagesPageMutation struct {
	Delete DeletePagePagesPageMutationDeleteDefaultResponse `json:"delete"`
}

// GetDelete returns DeletePagePagesPageMutation.Delete, and is useful for accessing the field via an interface.
func (v *DeletePagePagesPageMutation) GetDelete() DeletePagePagesPageMutationDeleteDefaultResponse {
	return v.Delete
}

// DeletePagePagesPageMutationDeleteDefaultResponse includes the requested fields of the GraphQL type DefaultResponse.
type DeletePagePagesPageMutationDeleteDefaultResponse struct {
	ResponseResult DeletePagePagesPageMutationDeleteDefaultResponseResponseResultResponseStatus `json:"responseResult"`
}

// GetResponseResult returns DeletePagePagesPageMutationDeleteDefaultResponse.ResponseResult, and is useful for accessing the field via an interface.
func (v *DeletePagePagesPageMutationDeleteDefaultResponse) GetResponseResult() DeletePagePagesPageMutationDeleteDefaultResponseResponseResultResponseStatus {
	return v.ResponseResult
}

// DeletePagePagesPageMutationDeleteDefaultResponseResponseResultResponseStatus includes the requested fields of the GraphQL type ResponseStatus.
type DeletePagePagesPageMutationDeleteDefaultResponseResponseResultResponseStatus struct {
	Succeeded bool   `json:"succeeded"`
	ErrorCode int    `json:"errorCode"`
	Slug      string `json:"slug"`
	Message   string `json:"message"`
}

// GetSucceeded returns DeletePagePagesPageMutationDeleteDefaultResponseResponseResultResponseStatus.Succeeded, and is useful for accessing the field via an interface.
func (v *DeletePagePagesPageMutationDeleteDefaultResponseResponseResultResponseStatus) GetSucceeded() bool {
	return v.Succeeded
}

// GetErrorCode returns DeletePagePagesPageMutationDeleteDefaultResponseResponseResultResponseStatus.ErrorCode, and is useful for accessing the field via an interface.
func (v *DeletePagePagesPageMutationDeleteDefaultResponseResponseResultResponseStatus) GetErrorCode() int {
	return v.ErrorCode
}

// GetSlug returns DeletePagePagesPageMutationDeleteDefaultResponseResponseResultResponseStatus.Slug, and is useful for accessing the field via an interface.
func (v *DeletePagePagesPageMutationDeleteDefaultResponseResponseResultResponseStatus) GetSlug() string {
	return v.Slug
}

// GetMessage returns DeletePagePagesPageMutationDeleteDefaultResponseResponseResultResponseStatus.Message, and is useful for accessing the field via an interface.
func (v *DeletePagePagesPageMutationDeleteDefaultResponseResponseResultResponseStatus) GetMessage() string {
	return v.Message
}

// DeletePageResponse is returned by DeletePage on success.
type DeletePageResponse struct {
	Pages DeletePagePagesPageMutation `json:"pages"`
}

// GetPages returns DeletePageResponse.Pages, and is useful for accessing the field via an interface.
func (v *DeletePageResponse) GetPages() DeletePagePagesPageMutation { return v.Pages }

// DownloadLocaleLocalizationLocalizationMutation includes the requested fields of the GraphQL type LocalizationMutation.
type DownloadLocaleLocalizationLocalizationMutation struct {
	DownloadLocale DownloadLocaleLocalizationLocalizationMutationDownloadLocaleDefaultResponse `json:"downloadLocale"`
}

// GetDownloadLocale returns DownloadLocaleLocalizationLocalizationMutation.DownloadLocale, and is useful for accessing the field via an interface.
func (v *DownloadLocaleLocalizationLocalizationMutation) GetDownloadLocale() DownloadLocaleLocalizationLocalizationMutationDownloadLocaleDefaultResponse {
	return v.DownloadLocale
}

// DownloadLocaleLocalizationLocalizationMutationDownloadLocaleDefaultResponse includes the requested fields of the GraphQL type DefaultResponse.
type DownloadLocaleLocalizationLocalizationMutationDownloadLocaleDefaultResponse struct {
	ResponseResult DownloadLocaleLocalizationLocalizationMutationDownloadLocaleDefaultResponseResponseResultResponseStatus `json:"responseResult"`
}

// GetResponseResult returns DownloadLocaleLocalizationLocalizationMutationDownloadLocaleDefaultResponse.ResponseResult, and is useful for accessing the field via an interface.
func (v *DownloadLocaleLocalizationLocalizationMutationDownloadLocaleDefaultResponse) GetResponseResult() DownloadLocaleLocalizationLocalizationMutationDownloadLocaleDefaultResponseResponseResultResponseStatus {
	return v.ResponseResult
}

// DownloadLocaleLocalizationLocalizationMutationDownloadLocaleDefaultResponseResponseResultResponseStatus includes the requested fields of the GraphQL type ResponseStatus.
type DownloadLocaleLocalizationLocalizationMutationDownloadLocaleDefaultResponseResponseResultResponseStatus struct {
	Succeeded bool   `json:"succeeded"`
	ErrorCode int    `json:"errorCode"`
	Slug      string `json:"slug"`
	Message   string `json:"message"`
}

// GetSucceeded returns DownloadLocaleLocalizationLocalizationMutationDownloadLocaleDefaultResponseResponseResultResponseStatus.Succeeded, and is useful for accessing the field via an interface.
func (v *DownloadLocaleLocalizationLocalizationMutationDownloadLocaleDefaultResponseResponseResultResponseStatus) GetSucceeded() bool {
	return v.Succeeded
}

// GetErrorCode returns DownloadLocaleLocalizationLocalizationMutationDownloadLocaleDefaultResponseResponseResultResponseStatus.ErrorCode, and is useful for accessing the field via an interface.
func (v *DownloadLocaleLocalizationLocalizationMutationDownloadLocaleDefaultResponseResponseResultResponseStatus) GetErrorCode() int {
	return v.ErrorCode
}

// GetSlug returns DownloadLocaleLocalizationLocalizationMutationDownloadLocaleDefaultResponseResponseResultResponseStatus.Slug, and is useful for accessing the field via an interface.
func (v *DownloadLocaleLocalizationLocalizationMutationDownloadLocaleDefaultResponseResponseResultResponseStatus) GetSlug() string {
	return v.Slug
}

// GetMessage returns DownloadLocaleLocalizationLocalizationMutationDownloadLocaleDefaultResponseResponseResultResponseStatus.Message, and is useful for accessing the field via an interface.
func (v *DownloadLocaleLocalizationLocalizationMutationDownloadLocaleDefaultResponseResponseResultResponseStatus) GetMessage() string {
	return v.Message
}

// DownloadLocaleResponse is returned by DownloadLocale on success.
type DownloadLocaleResponse struct {
	Localization DownloadLocaleLocalizationLocalizationMutation `json:"localization"`
}

// GetLocalization returns DownloadLocaleResponse.Localization, and is useful for accessing the field via an interface.
func (v *DownloadLocaleResponse) GetLocalization() DownloadLocaleLocalizationLocalizationMutation {
	return v.Localization
}

// FlushPageCachePagesPageMutation includes the requested fields of the GraphQL type PageMutation.
type FlushPageCachePagesPageMutation struct {
	FlushCache FlushPageCachePagesPageMutationFlushCacheDefaultResponse `json:"flushCache"`
}

// GetFlushCache returns FlushPageCachePagesPageMutation.FlushCache, and is useful for accessing the field via an interface.
func (v *FlushPageCachePagesPageMutation) GetFlushCache() FlushPageCachePagesPageMutationFlushCacheDefaultResponse {
	return v.FlushCache
}

// FlushPageCachePagesPageMutationFlushCacheDefaultResponse includes the requested fields of the GraphQL type DefaultResponse.
type FlushPageCachePagesPageMutationFlushCacheDefaultResponse struct {
	ResponseResult FlushPageCachePagesPageMutationFlushCacheDefaultResponseResponseResultResponseStatus `json:"responseResult"`
}

// GetResponseResult returns FlushPageCachePagesPageMutationFlushCacheDefaultResponse.ResponseResult, and is useful for accessing the field via an interface.
func (v *FlushPageCachePagesPageMutationFlushCacheDefaultResponse) GetResponseResult() FlushPageCachePagesPageMutationFlushCacheDefaultResponseResponseResultResponseStatus {
	return v.ResponseResult
}

// FlushPageCachePagesPageMutationFlushCacheDefaultResponseResponseResultResponseStatus includes the requested fields of the GraphQL type ResponseStatus.
type FlushPageCachePagesPageMutationFlushCacheDefaultResponseResponseResultResponseStatus struct {
	Succeeded bool   `json:"succeeded"`
	ErrorCode int    `json:"errorCode"`
	Slug      string `json:"slug"`
	Message   string `json:"message"`
}

// GetSucceeded returns FlushPageCachePagesPageMutationFlushCacheDefaultResponseResponseResultResponseStatus.Succeeded, and is useful for accessing the field via an interface.
func (v *FlushPageCachePagesPageMutationFlushCacheDefaultResponseResponseResultResponseStatus) GetSucceeded() bool {
	return v.Succeeded
}

// GetErrorCode returns FlushPageCachePagesPageMutationFlushCacheDefaultResponseResponseResultResponseStatus.ErrorCode, and is useful for accessing the field via an interface.
func (v *FlushPageCachePagesPageMutationFlushCacheDefaultResponseResponseResultResponseStatus) GetErrorCode() int {
	return v.ErrorCode
}

// GetSlug returns FlushPageCachePagesPageMutationFlushCacheDefaultResponseResponseResultResponseStatus.Slug, and is useful for accessing the field via an interface.
func (v *FlushPageCachePagesPageMutationFlushCacheDefaultResponseResponseResultResponseStatus) GetSlug() string {
	return v.Slug
}

// GetMessage returns FlushPageCachePagesPageMutationFlushCacheDefaultResponseResponseResultResponseStatus.Message, and is useful for accessing the field via an interface.
func (v *FlushPageCachePagesPageMutationFlushCacheDefaultResponseResponseResultResponseStatus) GetMessage() string {
	return v.Message
}

// FlushPageCacheResponse is returned by FlushPageCache on success.
type FlushPageCacheResponse struct {
	Pages FlushPageCachePagesPageMutation `json:"pages"`
}

// GetPages returns FlushPageCacheResponse.Pages, and is useful for accessing the field via an interface.
func (v *FlushPageCacheResponse) GetPages() FlushPageCachePagesPageMutation { return v.Pages }

// GetApiKeysAuthenticationAuthenticationQuery includes the requested fields of the GraphQL type AuthenticationQuery.
type GetApiKeysAuthenticationAuthenticationQuery struct {
	ApiKeys []GetApiKeysAuthenticationAuthenticationQueryApiKeysAuthenticationApiKey `json:"apiKeys"`
}

// GetApiKeys returns GetApiKeysAuthenticationAuthenticationQuery.ApiKeys, and is useful for accessing the field via an interface.
func (v *GetApiKeysAuthenticationAuthenticationQuery) GetApiKeys() []GetApiKeysAuthenticationAuthenticationQueryApiKeysAuthenticationApiKey {
	return v.ApiKeys
}

// GetApiKeysAuthenticationAuthenticationQueryApiKeysAuthenticationApiKey includes the requested fields of the GraphQL type AuthenticationApiKey.
type GetApiKeysAuthenticationAuthenticationQueryApiKeysAuthenticationApiKey struct {
	Id         int    `json:"id"`
	Name       string `json:"name"`
	KeyShort   string `json:"keyShort"`
	Expiration string `json:"expiration"`
	CreatedAt  string `json:"createdAt"`
	UpdatedAt  string `json:"updatedAt"`
	IsRevoked  bool   `json:"isRevoked"`
}

// GetId returns GetApiKeysAuthenticationAuthenticationQueryApiKeysAuthenticationApiKey.Id, and is useful for accessing the field via an interface.
func (v *GetApiKeysAuthenticationAuthenticationQueryApiKeysAuthenticationApiKey) GetId() int {
	return v.Id
}

// GetName returns GetApiKeysAuthenticationAuthenticationQueryApiKeysAuthenticationApiKey.Name, and is useful for accessing the field via an interface.
func (v *GetApiKeysAuthenticationAuthenticationQueryApiKeysAuthenticationApiKey) GetName() string {
	return v.Name
}

// GetKeyShort returns GetApiKeysAuthenticationAuthenticationQueryApiKeysAuthenticationApiKey.KeyShort, and is useful for accessing the field via an interface.
func (v *GetApiKeysAuthenticationAuthenticationQueryApiKeysAuthenticationApiKey) GetKeyShort() string {
	return v.KeyShort
}

// GetExpiration returns GetApiKeysAuthenticationAuthenticationQueryApiKeysAuthenticationApiKey.Expiration, and is useful for accessing the field via an interface.
func (v *GetApiKeysAuthenticationAuthenticationQueryApiKeysAuthenticationApiKey) GetExpiration() string {
	return v.Expiration
}

// GetCreatedAt returns GetApiKeysAuthenticationAuthenticationQueryApiKeysAuthenticationApiKey.CreatedAt, and is useful for accessing the field via an interface.
func (v *GetApiKeysAuthenticationAuthenticationQueryApiKeysAuthenticationApiKey) GetCreatedAt() string {
	return v.CreatedAt
}

// GetUpdatedAt returns GetApiKeysAuthenticationAuthenticationQueryApiKeysAuthenticationApiKey.UpdatedAt, and is useful for accessing the field via an interface.
func (v *GetApiKeysAuthenticationAuthenticationQueryApiKeysAuthenticationApiKey) GetUpdatedAt() string {
	return v.UpdatedAt
}

// GetIsRevoked returns GetApiKeysAuthenticationAuthenticationQueryApiKeysAuthenticationApiKey.IsRevoked, and is useful for accessing the field via an interface.
func (v *GetApiKeysAuthenticationAuthenticationQueryApiKeysAuthenticationApiKey) GetIsRevoked() bool {
	return v.IsRevoked
}

// GetApiKeysResponse is returned by GetApiKeys on success.
type GetApiKeysResponse struct {
	Authentication GetApiKeysAuthenticationAuthenticationQuery `json:"authentication"`
}

// GetAuthentication returns GetApiKeysResponse.Authentication, and is useful for accessing the field via an interface.
func (v *GetApiKeysResponse) GetAuthentication() GetApiKeysAuthenticationAuthenticationQuery {
	return v.Authentication
}

// GetApiStateAuthenticationAuthenticationQuery includes the requested fields of the GraphQL type AuthenticationQuery.
type GetApiStateAuthenticationAuthenticationQuery struct {
	ApiState bool `json:"apiState"`
}

// GetApiState returns GetApiStateAuthenticationAuthenticationQuery.ApiState, and is useful for accessing the field via an interface.
func (v *GetApiStateAuthenticationAuthenticationQuery) GetApiState() bool { return v.ApiState }

// GetApiStateResponse is returned by GetApiState on success.
type GetApiStateResponse struct {
	Authentication GetApiStateAuthenticationAuthenticationQuery `json:"authentication"`
}

// GetAuthentication returns GetApiStateResponse.Authentication, and is useful for accessing the field via an interface.
func (v *GetApiStateResponse) GetAuthentication() GetApiStateAuthenticationAuthenticationQuery {
	return v.Authentication
}

// GetAuthStrategiesAuthenticationAuthenticationQuery includes the requested fields of the GraphQL type AuthenticationQuery.
type GetAuthStrategiesAuthenticationAuthenticationQuery struct {
	ActiveStrategies []GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategy `json:"activeStrategies"`
}

// GetActiveStrategies returns GetAuthStrategiesAuthenticationAuthenticationQuery.ActiveStrategies, and is useful for accessing the field via an interface.
func (v *GetAuthStrategiesAuthenticationAuthenticationQuery) GetActiveStrategies() []GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategy {
	return v.ActiveStrategies
}

// GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategy includes the requested fields of the GraphQL type AuthenticationActiveStrategy.
type GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategy struct {
	Key              string                                                                                                                       `json:"key"`
	Strategy         GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyStrategyAuthenticationStrategy `json:"strategy"`
	DisplayName      string                                                                                                                       `json:"displayName"`
	Order            int                                                                                                                          `json:"order"`
	IsEnabled        bool                                                                                                                         `json:"isEnabled"`
	Config           []GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyConfigKeyValuePair           `json:"config"`
	SelfRegistration bool                                                                                                                         `json:"selfRegistration"`
	DomainWhitelist  []string                                                                                                                     `json:"domainWhitelist"`
	AutoEnrollGroups []int                                                                                                                        `json:"autoEnrollGroups"`
}

// GetKey returns GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategy.Key, and is useful for accessing the field via an interface.
func (v *GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategy) GetKey() string {
	return v.Key
}

// GetStrategy returns GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategy.Strategy, and is useful for accessing the field via an interface.
func (v *GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategy) GetStrategy() GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyStrategyAuthenticationStrategy {
	return v.Strategy
}

// GetDisplayName returns GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategy.DisplayName, and is useful for accessing the field via an interface.
func (v *GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategy) GetDisplayName() string {
	return v.DisplayName
}

// GetOrder returns GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategy.Order, and is useful for accessing the field via an interface.
func (v *GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategy) GetOrder() int {
	return v.Order
}

// GetIsEnabled returns GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategy.IsEnabled, and is useful for accessing the field via an interface.
func (v *GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategy) GetIsEnabled() bool {
	return v.IsEnabled
}

// GetConfig returns GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategy.Config, and is useful for accessing the field via an interface.
func (v *GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategy) GetConfig() []GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyConfigKeyValuePair {
	return v.Config
}

// GetSelfRegistration returns GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategy.SelfRegistration, and is useful for accessing the field via an interface.
func (v *GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategy) GetSelfRegistration() bool {
	return v.SelfRegistration
}

// GetDomainWhitelist returns GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategy.DomainWhitelist, and is useful for accessing the field via an interface.
func (v *GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategy) GetDomainWhitelist() []string {
	return v.DomainWhitelist
}

// GetAutoEnrollGroups returns GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategy.AutoEnrollGroups, and is useful for accessing the field via an interface.
func (v *GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategy) GetAutoEnrollGroups() []int {
	return v.AutoEnrollGroups
}

// GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyConfigKeyValuePair includes the requested fields of the GraphQL type KeyValuePair.
type GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyConfigKeyValuePair struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

// GetKey returns GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyConfigKeyValuePair.Key, and is useful for accessing the field via an interface.
func (v *GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyConfigKeyValuePair) GetKey() string {
	return v.Key
}

// GetValue returns GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyConfigKeyValuePair.Value, and is useful for accessing the field via an interface.
func (v *GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyConfigKeyValuePair) GetValue() string {
	return v.Value
}

// GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyStrategyAuthenticationStrategy includes the requested fields of the GraphQL type AuthenticationStrategy.
type GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyStrategyAuthenticationStrategy struct {
	Key          string `json:"key"`
	Title        string `json:"title"`
	Description  string `json:"description"`
	IsAvailable  bool   `json:"isAvailable"`
	UseForm      bool   `json:"useForm"`
	UsernameType string `json:"usernameType"`
	Logo         string `json:"logo"`
	Color        string `json:"color"`
	Website      string `json:"website"`
	Icon         string `json:"icon"`
}

// GetKey returns GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyStrategyAuthenticationStrategy.Key, and is useful for accessing the field via an interface.
func (v *GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyStrategyAuthenticationStrategy) GetKey() string {
	return v.Key
}

// GetTitle returns GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyStrategyAuthenticationStrategy.Title, and is useful for accessing the field via an interface.
func (v *GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyStrategyAuthenticationStrategy) GetTitle() string {
	return v.Title
}

// GetDescription returns GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyStrategyAuthenticationStrategy.Description, and is useful for accessing the field via an interface.
func (v *GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyStrategyAuthenticationStrategy) GetDescription() string {
	return v.Description
}

// GetIsAvailable returns GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyStrategyAuthenticationStrategy.IsAvailable, and is useful for accessing the field via an interface.
func (v *GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyStrategyAuthenticationStrategy) GetIsAvailable() bool {
	return v.IsAvailable
}

// GetUseForm returns GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyStrategyAuthenticationStrategy.UseForm, and is useful for accessing the field via an interface.
func (v *GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyStrategyAuthenticationStrategy) GetUseForm() bool {
	return v.UseForm
}

// GetUsernameType returns GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyStrategyAuthenticationStrategy.UsernameType, and is useful for accessing the field via an interface.
func (v *GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyStrategyAuthenticationStrategy) GetUsernameType() string {
	return v.UsernameType
}

// GetLogo returns GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyStrategyAuthenticationStrategy.Logo, and is useful for accessing the field via an interface.
func (v *GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyStrategyAuthenticationStrategy) GetLogo() string {
	return v.Logo
}

// GetColor returns GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyStrategyAuthenticationStrategy.Color, and is useful for accessing the field via an interface.
func (v *GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyStrategyAuthenticationStrategy) GetColor() string {
	return v.Color
}

// GetWebsite returns GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyStrategyAuthenticationStrategy.Website, and is useful for accessing the field via an interface.
func (v *GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyStrategyAuthenticationStrategy) GetWebsite() string {
	return v.Website
}

// GetIcon returns GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyStrategyAuthenticationStrategy.Icon, and is useful for accessing the field via an interface.
func (v *GetAuthStrategiesAuthenticationAuthenticationQueryActiveStrategiesAuthenticationActiveStrategyStrategyAuthenticationStrategy) GetIcon() string {
	return v.Icon
}

// GetAuthStrategiesResponse is returned by GetAuthStrategies on success.
type GetAuthStrategiesResponse struct {
	Authentication GetAuthStrategiesAuthenticationAuthenticationQuery `json:"authentication"`
}

// GetAuthentication returns GetAuthStrategiesResponse.Authentication, and is useful for accessing the field via an interface.
func (v *GetAuthStrategiesResponse) GetAuthentication() GetAuthStrategiesAuthenticationAuthenticationQuery {
	return v.Authentication
}

// GetGroupGroupsGroupQuery includes the requested fields of the GraphQL type GroupQuery.
type GetGroupGroupsGroupQuery struct {
	Single GetGroupGroupsGroupQuerySingleGroup `json:"single"`
}

// GetSingle returns GetGroupGroupsGroupQuery.Single, and is useful for accessing the field via an interface.
func (v *GetGroupGroupsGroupQuery) GetSingle() GetGroupGroupsGroupQuerySingleGroup { return v.Single }

// GetGroupGroupsGroupQuerySingleGroup includes the requested fields of the GraphQL type Group.
type GetGroupGroupsGroupQuerySingleGroup struct {
	Id              int                                                    `json:"id"`
	Name            string                                                 `json:"name"`
	IsSystem        bool                                                   `json:"isSystem"`
	RedirectOnLogin string                                                 `json:"redirectOnLogin"`
	Permissions     []string                                               `json:"permissions"`
	PageRules       []GetGroupGroupsGroupQuerySingleGroupPageRulesPageRule `json:"pageRules"`
	Users           []GetGroupGroupsGroupQuerySingleGroupUsersUserMinimal  `json:"users"`
	CreatedAt       string                                                 `json:"createdAt"`
	UpdatedAt       string                                                 `json:"updatedAt"`
}

// GetId returns GetGroupGroupsGroupQuerySingleGroup.Id, and is useful for accessing the field via an interface.
func (v *GetGroupGroupsGroupQuerySingleGroup) GetId() int { return v.Id }

// GetName returns GetGroupGroupsGroupQuerySingleGroup.Name, and is useful for accessing the field via an interface.
func (v *GetGroupGroupsGroupQuerySingleGroup) GetName() string { return v.Name }

// GetIsSystem returns GetGroupGroupsGroupQuerySingleGroup.IsSystem, and is useful for accessing the field via an interface.
func (v *GetGroupGroupsGroupQuerySingleGroup) GetIsSystem() bool { return v.IsSystem }

// GetRedirectOnLogin returns GetGroupGroupsGroupQuerySingleGroup.RedirectOnLogin, and is useful for accessing the field via an interface.
func (v *GetGroupGroupsGroupQuerySingleGroup) GetRedirectOnLogin() string { return v.RedirectOnLogin }

// GetPermissions returns GetGroupGroupsGroupQuerySingleGroup.Permissions, and is useful for accessing the field via an interface.
func (v *GetGroupGroupsGroupQuerySingleGroup) GetPermissions() []string { return v.Permissions }

// GetPageRules returns GetGroupGroupsGroupQuerySingleGroup.PageRules, and is useful for accessing the field via an interface.
func (v *GetGroupGroupsGroupQuerySingleGroup) GetPageRules() []GetGroupGroupsGroupQuerySingleGroupPageRulesPageRule {
	return v.PageRules
}

// GetUsers returns GetGroupGroupsGroupQuerySingleGroup.Users, and is useful for accessing the field via an interface.
func (v *GetGroupGroupsGroupQuerySingleGroup) GetUsers() []GetGroupGroupsGroupQuerySingleGroupUsersUserMinimal {
	return v.Users
}

// GetCreatedAt returns GetGroupGroupsGroupQuerySingleGroup.CreatedAt, and is useful for accessing the field via an interface.
func (v *GetGroupGroupsGroupQuerySingleGroup) GetCreatedAt() string { return v.CreatedAt }

// GetUpdatedAt returns GetGroupGroupsGroupQuerySingleGroup.UpdatedAt, and is useful for accessing the field via an interface.
func (v *GetGroupGroupsGroupQuerySingleGroup) GetUpdatedAt() string { return v.UpdatedAt }

// GetGroupGroupsGroupQuerySingleGroupPageRulesPageRule includes the requested fields of the GraphQL type PageRule.
type GetGroupGroupsGroupQuerySingleGroupPageRulesPageRule struct {
	Id      string        `json:"id"`
	Deny    bool          `json:"deny"`
	Match   PageRuleMatch `json:"match"`
	Roles   []string      `json:"roles"`
	Path    string        `json:"path"`
	Locales []string      `json:"locales"`
}

// GetId returns GetGroupGroupsGroupQuerySingleGroupPageRulesPageRule.Id, and is useful for accessing the field via an interface.
func (v *GetGroupGroupsGroupQuerySingleGroupPageRulesPageRule) GetId() string { return v.Id }

// GetDeny returns GetGroupGroupsGroupQuerySingleGroupPageRulesPageRule.Deny, and is useful for accessing the field via an interface.
func (v *GetGroupGroupsGroupQuerySingleGroupPageRulesPageRule) GetDeny() bool { return v.Deny }

// GetMatch returns GetGroupGroupsGroupQuerySingleGroupPageRulesPageRule.Match, and is useful for accessing the field via an interface.
func (v *GetGroupGroupsGroupQuerySingleGroupPageRulesPageRule) GetMatch() PageRuleMatch {
	return v.Match
}

// GetRoles returns GetGroupGroupsGroupQuerySingleGroupPageRulesPageRule.Roles, and is useful for accessing the field via an interface.
func (v *GetGroupGroupsGroupQuerySingleGroupPageRulesPageRule) GetRoles() []string { return v.Roles }

// GetPath returns GetGroupGroupsGroupQuerySingleGroupPageRulesPageRule.Path, and is useful for accessing the field via an interface.
func (v *GetGroupGroupsGroupQuerySingleGroupPageRulesPageRule) GetPath() string { return v.Path }

// GetLocales returns GetGroupGroupsGroupQuerySingleGroupPageRulesPageRule.Locales, and is useful for accessing the field via an interface.
func (v *GetGroupGroupsGroupQuerySingleGroupPageRulesPageRule) GetLocales() []string {
	return v.Locales
}

// GetGroupGroupsGroupQuerySingleGroupUsersUserMinimal includes the requested fields of the GraphQL type UserMinimal.
type GetGroupGroupsGroupQuerySingleGroupUsersUserMinimal struct {
	Id          int    `json:"id"`
	Name        string `json:"name"`
	Email       string `json:"email"`
	ProviderKey string `json:"providerKey"`
	IsSystem    bool   `json:"isSystem"`
	IsActive    bool   `json:"isActive"`
	CreatedAt   string `json:"createdAt"`
	LastLoginAt string `json:"lastLoginAt"`
}

// GetId returns GetGroupGroupsGroupQuerySingleGroupUsersUserMinimal.Id, and is useful for accessing the field via an interface.
func (v *GetGroupGroupsGroupQuerySingleGroupUsersUserMinimal) GetId() int { return v.Id }

// GetName returns GetGroupGroupsGroupQuerySingleGroupUsersUserMinimal.Name, and is useful for accessing the field via an interface.
func (v *GetGroupGroupsGroupQuerySingleGroupUsersUserMinimal) GetName() string { return v.Name }

// GetEmail returns GetGroupGroupsGroupQuerySingleGroupUsersUserMinimal.Email, and is useful for accessing the field via an interface.
func (v *GetGroupGroupsGroupQuerySingleGroupUsersUserMinimal) GetEmail() string { return v.Email }

// GetProviderKey returns GetGroupGroupsGroupQuerySingleGroupUsersUserMinimal.ProviderKey, and is useful for accessing the field via an interface.
func (v *GetGroupGroupsGroupQuerySingleGroupUsersUserMinimal) GetProviderKey() string {
	return v.ProviderKey
}

// GetIsSystem returns GetGroupGroupsGroupQuerySingleGroupUsersUserMinimal.IsSystem, and is useful for accessing the field via an interface.
func (v *GetGroupGroupsGroupQuerySingleGroupUsersUserMinimal) GetIsSystem() bool { return v.IsSystem }

// GetIsActive returns GetGroupGroupsGroupQuerySingleGroupUsersUserMinimal.IsActive, and is useful for accessing the field via an interface.
func (v *GetGroupGroupsGroupQuerySingleGroupUsersUserMinimal) GetIsActive() bool { return v.IsActive }

// GetCreatedAt returns GetGroupGroupsGroupQuerySingleGroupUsersUserMinimal.CreatedAt, and is useful for accessing the field via an interface.
func (v *GetGroupGroupsGroupQuerySingleGroupUsersUserMinimal) GetCreatedAt() string {
	return v.CreatedAt
}

// GetLastLoginAt returns GetGroupGroupsGroupQuerySingleGroupUsersUserMinimal.LastLoginAt, and is useful for accessing the field via an interface.
func (v *GetGroupGroupsGroupQuerySingleGroupUsersUserMinimal) GetLastLoginAt() string {
	return v.LastLoginAt
}

// GetGroupResponse is returned by GetGroup on success.
type GetGroupResponse struct {
	Groups GetGroupGroupsGroupQuery `json:"groups"`
}

// GetGroups returns GetGroupResponse.Groups, and is useful for accessing the field via an interface.
func (v *GetGroupResponse) GetGroups() GetGroupGroupsGroupQuery { return v.Groups }

// GetGroupsGroupsGroupQuery includes the requested fields of the GraphQL type GroupQuery.
type GetGroupsGroupsGroupQuery struct {
	List []GetGroupsGroupsGroupQueryListGroupMinimal `json:"list"`
}

// GetList returns GetGroupsGroupsGroupQuery.List, and is useful for accessing the field via an interface.
func (v *GetGroupsGroupsGroupQuery) GetList() []GetGroupsGroupsGroupQueryListGroupMinimal {
	return v.List
}

// GetGroupsGroupsGroupQueryListGroupMinimal includes the requested fields of the GraphQL type GroupMinimal.
type GetGroupsGroupsGroupQueryListGroupMinimal struct {
	Id        int    `json:"id"`
	Name      string `json:"name"`
	IsSystem  bool   `json:"isSystem"`
	UserCount int    `json:"userCount"`
	CreatedAt string `json:"createdAt"`
	UpdatedAt string `json:"updatedAt"`
}

// GetId returns GetGroupsGroupsGroupQueryListGroupMinimal.Id, and is useful for accessing the field via an interface.
func (v *GetGroupsGroupsGroupQueryListGroupMinimal) GetId() int { return v.Id }

// GetName returns GetGroupsGroupsGroupQueryListGroupMinimal.Name, and is useful for accessing the field via an interface.
func (v *GetGroupsGroupsGroupQueryListGroupMinimal) GetName() string { return v.Name }

// GetIsSystem returns GetGroupsGroupsGroupQueryListGroupMinimal.IsSystem, and is useful for accessing the field via an interface.
func (v *GetGroupsGroupsGroupQueryListGroupMinimal) GetIsSystem() bool { return v.IsSystem }

// GetUserCount returns GetGroupsGroupsGroupQueryListGroupMinimal.UserCount, and is useful for accessing the field via an interface.
func (v *GetGroupsGroupsGroupQueryListGroupMinimal) GetUserCount() int { return v.UserCount }

// GetCreatedAt returns GetGroupsGroupsGroupQueryListGroupMinimal.CreatedAt, and is useful for accessing the field via an interface.
func (v *GetGroupsGroupsGroupQueryListGroupMinimal) GetCreatedAt() string { return v.CreatedAt }

// GetUpdatedAt returns GetGroupsGroupsGroupQueryListGroupMinimal.UpdatedAt, and is useful for accessing the field via an interface.
func (v *GetGroupsGroupsGroupQueryListGroupMinimal) GetUpdatedAt() string { return v.UpdatedAt }

// GetGroupsResponse is returned by GetGroups on success.
type GetGroupsResponse struct {
	Groups GetGroupsGroupsGroupQuery `json:"groups"`
}

// GetGroups returns GetGroupsResponse.Groups, and is useful for accessing the field via an interface.
func (v *GetGroupsResponse) GetGroups() GetGroupsGroupsGroupQuery { return v.Groups }

// GetLocalesLocalizationLocalizationQuery includes the requested fields of the GraphQL type LocalizationQuery.
type GetLocalesLocalizationLocalizationQuery struct {
	Locales []GetLocalesLocalizationLocalizationQueryLocalesLocalizationLocale `json:"locales"`
}

// GetLocales returns GetLocalesLocalizationLocalizationQuery.Locales, and is useful for accessing the field via an interface.
func (v *GetLocalesLocalizationLocalizationQuery) GetLocales() []GetLocalesLocalizationLocalizationQueryLocalesLocalizationLocale {
	return v.Locales
}

// GetLocalesLocalizationLocalizationQueryLocalesLocalizationLocale includes the requested fields of the GraphQL type LocalizationLocale.
type GetLocalesLocalizationLocalizationQueryLocalesLocalizationLocale struct {
	Availability int    `json:"availability"`
	Code         string `json:"code"`
	CreatedAt    string `json:"createdAt"`
	InstallDate  string `json:"installDate"`
	IsInstalled  bool   `json:"isInstalled"`
	IsRTL        bool   `json:"isRTL"`
	Name         string `json:"name"`
	NativeName   string `json:"nativeName"`
	UpdatedAt    string `json:"updatedAt"`
}

// GetAvailability returns GetLocalesLocalizationLocalizationQueryLocalesLocalizationLocale.Availability, and is useful for accessing the field via an interface.
func (v *GetLocalesLocalizationLocalizationQueryLocalesLocalizationLocale) GetAvailability() int {
	return v.Availability
}

// GetCode returns GetLocalesLocalizationLocalizationQueryLocalesLocalizationLocale.Code, and is useful for accessing the field via an interface.
func (v *GetLocalesLocalizationLocalizationQueryLocalesLocalizationLocale) GetCode() string {
	return v.Code
}

// GetCreatedAt returns GetLocalesLocalizationLocalizationQueryLocalesLocalizationLocale.CreatedAt, and is useful for accessing the field via an interface.
func (v *GetLocalesLocalizationLocalizationQueryLocalesLocalizationLocale) GetCreatedAt() string {
	return v.CreatedAt
}

// GetInstallDate returns GetLocalesLocalizationLocalizationQueryLocalesLocalizationLocale.InstallDate, and is useful for accessing the field via an interface.
func (v *GetLocalesLocalizationLocalizationQueryLocalesLocalizationLocale) GetInstallDate() string {
	return v.InstallDate
}

// GetIsInstalled returns GetLocalesLocalizationLocalizationQueryLocalesLocalizationLocale.IsInstalled, and is useful for accessing the field via an interface.
func (v *GetLocalesLocalizationLocalizationQueryLocalesLocalizationLocale) GetIsInstalled() bool {
	return v.IsInstalled
}

// GetIsRTL returns GetLocalesLocalizationLocalizationQueryLocalesLocalizationLocale.IsRTL, and is useful for accessing the field via an interface.
func (v *GetLocalesLocalizationLocalizationQueryLocalesLocalizationLocale) GetIsRTL() bool {
	return v.IsRTL
}

// GetName returns GetLocalesLocalizationLocalizationQueryLocalesLocalizationLocale.Name, and is useful for accessing the field via an interface.
func (v *GetLocalesLocalizationLocalizationQueryLocalesLocalizationLocale) GetName() string {
	return v.Name
}

// GetNativeName returns GetLocalesLocalizationLocalizationQueryLocalesLocalizationLocale.NativeName, and is useful for accessing the field via an interface.
func (v *GetLocalesLocalizationLocalizationQueryLocalesLocalizationLocale) GetNativeName() string {
	return v.NativeName
}

// GetUpdatedAt returns GetLocalesLocalizationLocalizationQueryLocalesLocalizationLocale.UpdatedAt, and is useful for accessing the field via an interface.
func (v *GetLocalesLocalizationLocalizationQueryLocalesLocalizationLocale) GetUpdatedAt() string {
	return v.UpdatedAt
}

// GetLocalesResponse is returned by GetLocales on success.
type GetLocalesResponse struct {
	Localization GetLocalesLocalizationLocalizationQuery `json:"localization"`
}

// GetLocalization returns GetLocalesResponse.Localization, and is useful for accessing the field via an interface.
func (v *GetLocalesResponse) GetLocalization() GetLocalesLocalizationLocalizationQuery {
	return v.Localization
}

// GetLocalizationLocalizationLocalizationQuery includes the requested fields of the GraphQL type LocalizationQuery.
type GetLocalizationLocalizationLocalizationQuery struct {
	Config GetLocalizationLocalizationLocalizationQueryConfigLocalizationConfig `json:"config"`
}

// GetConfig returns GetLocalizationLocalizationLocalizationQuery.Config, and is useful for accessing the field via an interface.
func (v *GetLocalizationLocalizationLocalizationQuery) GetConfig() GetLocalizationLocalizationLocalizationQueryConfigLocalizationConfig {
	return v.Config
}

// GetLocalizationLocalizationLocalizationQueryConfigLocalizationConfig includes the requested fields of the GraphQL type LocalizationConfig.
type GetLocalizationLocalizationLocalizationQueryConfigLocalizationConfig struct {
	Locale      string   `json:"locale"`
	AutoUpdate  bool     `json:"autoUpdate"`
	Namespacing bool     `json:"namespacing"`
	Namespaces  []string `json:"namespaces"`
}

// GetLocale returns GetLocalizationLocalizationLocalizationQueryConfigLocalizationConfig.Locale, and is useful for accessing the field via an interface.
func (v *GetLocalizationLocalizationLocalizationQueryConfigLocalizationConfig) GetLocale() string {
	return v.Locale
}

// GetAutoUpdate returns GetLocalizationLocalizationLocalizationQueryConfigLocalizationConfig.AutoUpdate, and is useful for accessing the field via an interface.
func (v *GetLocalizationLocalizationLocalizationQueryConfigLocalizationConfig) GetAutoUpdate() bool {
	return v.AutoUpdate
}

// GetNamespacing returns GetLocalizationLocalizationLocalizationQueryConfigLocalizationConfig.Namespacing, and is useful for accessing the field via an interface.
func (v *GetLocalizationLocalizationLocalizationQueryConfigLocalizationConfig) GetNamespacing() bool {
	return v.Namespacing
}

// GetNamespaces returns GetLocalizationLocalizationLocalizationQueryConfigLocalizationConfig.Namespaces, and is useful for accessing the field via an interface.
func (v *GetLocalizationLocalizationLocalizationQueryConfigLocalizationConfig) GetNamespaces() []string {
	return v.Namespaces
}

// GetLocalizationResponse is returned by GetLocalization on success.
type GetLocalizationResponse struct {
	Localization GetLocalizationLocalizationLocalizationQuery `json:"localization"`
}

// GetLocalization returns GetLocalizationResponse.Localization, and is useful for accessing the field via an interface.
func (v *GetLocalizationResponse) GetLocalization() GetLocalizationLocalizationLocalizationQuery {
	return v.Localization
}

// GetPageByPathPagesPageQuery includes the requested fields of the GraphQL type PageQuery.
type GetPageByPathPagesPageQuery struct {
	SingleByPath GetPageByPathPagesPageQuerySingleByPathPage `json:"singleByPath"`
}

// GetSingleByPath returns GetPageByPathPagesPageQuery.SingleByPath, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuery) GetSingleByPath() GetPageByPathPagesPageQuerySingleByPathPage {
	return v.SingleByPath
}

// GetPageByPathPagesPageQuerySingleByPathPage includes the requested fields of the GraphQL type Page.
type GetPageByPathPagesPageQuerySingleByPathPage struct {
	Id               int                                                      `json:"id"`
	Path             string                                                   `json:"path"`
	Hash             string                                                   `json:"hash"`
	Title            string                                                   `json:"title"`
	Description      string                                                   `json:"description"`
	IsPrivate        bool                                                     `json:"isPrivate"`
	IsPublished      bool                                                     `json:"isPublished"`
	PrivateNS        string                                                   `json:"privateNS"`
	PublishStartDate string                                                   `json:"publishStartDate"`
	PublishEndDate   string                                                   `json:"publishEndDate"`
	Tags             []GetPageByPathPagesPageQuerySingleByPathPageTagsPageTag `json:"tags"`
	Content          string                                                   `json:"content"`
	Render           string                                                   `json:"render"`
	ContentType      string                                                   `json:"contentType"`
	CreatedAt        string                                                   `json:"createdAt"`
	UpdatedAt        string                                                   `json:"updatedAt"`
	Editor           string                                                   `json:"editor"`
	Locale           string                                                   `json:"locale"`
	ScriptCss        string                                                   `json:"scriptCss"`
	ScriptJs         string                                                   `json:"scriptJs"`
	AuthorId         int                                                      `json:"authorId"`
	AuthorName       string                                                   `json:"authorName"`
	AuthorEmail      string                                                   `json:"authorEmail"`
	CreatorId        int                                                      `json:"creatorId"`
	CreatorName      string                                                   `json:"creatorName"`
	CreatorEmail     string                                                   `json:"creatorEmail"`
}

// GetId returns GetPageByPathPagesPageQuerySingleByPathPage.Id, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPage) GetId() int { return v.Id }

// GetPath returns GetPageByPathPagesPageQuerySingleByPathPage.Path, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPage) GetPath() string { return v.Path }

// GetHash returns GetPageByPathPagesPageQuerySingleByPathPage.Hash, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPage) GetHash() string { return v.Hash }

// GetTitle returns GetPageByPathPagesPageQuerySingleByPathPage.Title, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPage) GetTitle() string { return v.Title }

// GetDescription returns GetPageByPathPagesPageQuerySingleByPathPage.Description, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPage) GetDescription() string { return v.Description }

// GetIsPrivate returns GetPageByPathPagesPageQuerySingleByPathPage.IsPrivate, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPage) GetIsPrivate() bool { return v.IsPrivate }

// GetIsPublished returns GetPageByPathPagesPageQuerySingleByPathPage.IsPublished, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPage) GetIsPublished() bool { return v.IsPublished }

// GetPrivateNS returns GetPageByPathPagesPageQuerySingleByPathPage.PrivateNS, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPage) GetPrivateNS() string { return v.PrivateNS }

// GetPublishStartDate returns GetPageByPathPagesPageQuerySingleByPathPage.PublishStartDate, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPage) GetPublishStartDate() string {
	return v.PublishStartDate
}

// GetPublishEndDate returns GetPageByPathPagesPageQuerySingleByPathPage.PublishEndDate, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPage) GetPublishEndDate() string {
	return v.PublishEndDate
}

// GetTags returns GetPageByPathPagesPageQuerySingleByPathPage.Tags, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPage) GetTags() []GetPageByPathPagesPageQuerySingleByPathPageTagsPageTag {
	return v.Tags
}

// GetContent returns GetPageByPathPagesPageQuerySingleByPathPage.Content, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPage) GetContent() string { return v.Content }

// GetRender returns GetPageByPathPagesPageQuerySingleByPathPage.Render, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPage) GetRender() string { return v.Render }

// GetContentType returns GetPageByPathPagesPageQuerySingleByPathPage.ContentType, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPage) GetContentType() string { return v.ContentType }

// GetCreatedAt returns GetPageByPathPagesPageQuerySingleByPathPage.CreatedAt, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPage) GetCreatedAt() string { return v.CreatedAt }

// GetUpdatedAt returns GetPageByPathPagesPageQuerySingleByPathPage.UpdatedAt, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPage) GetUpdatedAt() string { return v.UpdatedAt }

// GetEditor returns GetPageByPathPagesPageQuerySingleByPathPage.Editor, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPage) GetEditor() string { return v.Editor }

// GetLocale returns GetPageByPathPagesPageQuerySingleByPathPage.Locale, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPage) GetLocale() string { return v.Locale }

// GetScriptCss returns GetPageByPathPagesPageQuerySingleByPathPage.ScriptCss, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPage) GetScriptCss() string { return v.ScriptCss }

// GetScriptJs returns GetPageByPathPagesPageQuerySingleByPathPage.ScriptJs, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPage) GetScriptJs() string { return v.ScriptJs }

// GetAuthorId returns GetPageByPathPagesPageQuerySingleByPathPage.AuthorId, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPage) GetAuthorId() int { return v.AuthorId }

// GetAuthorName returns GetPageByPathPagesPageQuerySingleByPathPage.AuthorName, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPage) GetAuthorName() string { return v.AuthorName }

// GetAuthorEmail returns GetPageByPathPagesPageQuerySingleByPathPage.AuthorEmail, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPage) GetAuthorEmail() string { return v.AuthorEmail }

// GetCreatorId returns GetPageByPathPagesPageQuerySingleByPathPage.CreatorId, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPage) GetCreatorId() int { return v.CreatorId }

// GetCreatorName returns GetPageByPathPagesPageQuerySingleByPathPage.CreatorName, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPage) GetCreatorName() string { return v.CreatorName }

// GetCreatorEmail returns GetPageByPathPagesPageQuerySingleByPathPage.CreatorEmail, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPage) GetCreatorEmail() string { return v.CreatorEmail }

// GetPageByPathPagesPageQuerySingleByPathPageTagsPageTag includes the requested fields of the GraphQL type PageTag.
type GetPageByPathPagesPageQuerySingleByPathPageTagsPageTag struct {
	Id        int    `json:"id"`
	Tag       string `json:"tag"`
	Title     string `json:"title"`
	CreatedAt string `json:"createdAt"`
	UpdatedAt string `json:"updatedAt"`
}

// GetId returns GetPageByPathPagesPageQuerySingleByPathPageTagsPageTag.Id, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPageTagsPageTag) GetId() int { return v.Id }

// GetTag returns GetPageByPathPagesPageQuerySingleByPathPageTagsPageTag.Tag, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPageTagsPageTag) GetTag() string { return v.Tag }

// GetTitle returns GetPageByPathPagesPageQuerySingleByPathPageTagsPageTag.Title, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPageTagsPageTag) GetTitle() string { return v.Title }

// GetCreatedAt returns GetPageByPathPagesPageQuerySingleByPathPageTagsPageTag.CreatedAt, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPageTagsPageTag) GetCreatedAt() string {
	return v.CreatedAt
}

// GetUpdatedAt returns GetPageByPathPagesPageQuerySingleByPathPageTagsPageTag.UpdatedAt, and is useful for accessing the field via an interface.
func (v *GetPageByPathPagesPageQuerySingleByPathPageTagsPageTag) GetUpdatedAt() string {
	return v.UpdatedAt
}

// GetPageByPathResponse is returned by GetPageByPath on success.
type GetPageByPathResponse struct {
	Pages GetPageByPathPagesPageQuery `json:"pages"`
}

// GetPages returns GetPageByPathResponse.Pages, and is useful for accessing the field via an interface.
func (v *GetPageByPathResponse) GetPages() GetPageByPathPagesPageQuery { return v.Pages }

// GetPagePagesPageQuery includes the requested fields of the GraphQL type PageQuery.
type GetPagePagesPageQuery struct {
	Single GetPagePagesPageQuerySinglePage `json:"single"`
}

// GetSingle returns GetPagePagesPageQuery.Single, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuery) GetSingle() GetPagePagesPageQuerySinglePage { return v.Single }

// GetPagePagesPageQuerySinglePage includes the requested fields of the GraphQL type Page.
type GetPagePagesPageQuerySinglePage struct {
	Id               int                                          `json:"id"`
	Path             string                                       `json:"path"`
	Hash             string                                       `json:"hash"`
	Title            string                                       `json:"title"`
	Description      string                                       `json:"description"`
	IsPrivate        bool                                         `json:"isPrivate"`
	IsPublished      bool                                         `json:"isPublished"`
	PrivateNS        string                                       `json:"privateNS"`
	PublishStartDate string                                       `json:"publishStartDate"`
	PublishEndDate   string                                       `json:"publishEndDate"`
	Tags             []GetPagePagesPageQuerySinglePageTagsPageTag `json:"tags"`
	Content          string                                       `json:"content"`
	Render           string                                       `json:"render"`
	ContentType      string                                       `json:"contentType"`
	CreatedAt        string                                       `json:"createdAt"`
	UpdatedAt        string                                       `json:"updatedAt"`
	Editor           string                                       `json:"editor"`
	Locale           string                                       `json:"locale"`
	ScriptCss        string                                       `json:"scriptCss"`
	ScriptJs         string                                       `json:"scriptJs"`
	AuthorId         int                                          `json:"authorId"`
	AuthorName       string                                       `json:"authorName"`
	AuthorEmail      string                                       `json:"authorEmail"`
	CreatorId        int                                          `json:"creatorId"`
	CreatorName      string                                       `json:"creatorName"`
	CreatorEmail     string                                       `json:"creatorEmail"`
}

// GetId returns GetPagePagesPageQuerySinglePage.Id, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePage) GetId() int { return v.Id }

// GetPath returns GetPagePagesPageQuerySinglePage.Path, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePage) GetPath() string { return v.Path }

// GetHash returns GetPagePagesPageQuerySinglePage.Hash, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePage) GetHash() string { return v.Hash }

// GetTitle returns GetPagePagesPageQuerySinglePage.Title, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePage) GetTitle() string { return v.Title }

// GetDescription returns GetPagePagesPageQuerySinglePage.Description, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePage) GetDescription() string { return v.Description }

// GetIsPrivate returns GetPagePagesPageQuerySinglePage.IsPrivate, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePage) GetIsPrivate() bool { return v.IsPrivate }

// GetIsPublished returns GetPagePagesPageQuerySinglePage.IsPublished, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePage) GetIsPublished() bool { return v.IsPublished }

// GetPrivateNS returns GetPagePagesPageQuerySinglePage.PrivateNS, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePage) GetPrivateNS() string { return v.PrivateNS }

// GetPublishStartDate returns GetPagePagesPageQuerySinglePage.PublishStartDate, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePage) GetPublishStartDate() string { return v.PublishStartDate }

// GetPublishEndDate returns GetPagePagesPageQuerySinglePage.PublishEndDate, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePage) GetPublishEndDate() string { return v.PublishEndDate }

// GetTags returns GetPagePagesPageQuerySinglePage.Tags, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePage) GetTags() []GetPagePagesPageQuerySinglePageTagsPageTag {
	return v.Tags
}

// GetContent returns GetPagePagesPageQuerySinglePage.Content, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePage) GetContent() string { return v.Content }

// GetRender returns GetPagePagesPageQuerySinglePage.Render, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePage) GetRender() string { return v.Render }

// GetContentType returns GetPagePagesPageQuerySinglePage.ContentType, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePage) GetContentType() string { return v.ContentType }

// GetCreatedAt returns GetPagePagesPageQuerySinglePage.CreatedAt, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePage) GetCreatedAt() string { return v.CreatedAt }

// GetUpdatedAt returns GetPagePagesPageQuerySinglePage.UpdatedAt, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePage) GetUpdatedAt() string { return v.UpdatedAt }

// GetEditor returns GetPagePagesPageQuerySinglePage.Editor, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePage) GetEditor() string { return v.Editor }

// GetLocale returns GetPagePagesPageQuerySinglePage.Locale, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePage) GetLocale() string { return v.Locale }

// GetScriptCss returns GetPagePagesPageQuerySinglePage.ScriptCss, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePage) GetScriptCss() string { return v.ScriptCss }

// GetScriptJs returns GetPagePagesPageQuerySinglePage.ScriptJs, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePage) GetScriptJs() string { return v.ScriptJs }

// GetAuthorId returns GetPagePagesPageQuerySinglePage.AuthorId, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePage) GetAuthorId() int { return v.AuthorId }

// GetAuthorName returns GetPagePagesPageQuerySinglePage.AuthorName, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePage) GetAuthorName() string { return v.AuthorName }

// GetAuthorEmail returns GetPagePagesPageQuerySinglePage.AuthorEmail, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePage) GetAuthorEmail() string { return v.AuthorEmail }

// GetCreatorId returns GetPagePagesPageQuerySinglePage.CreatorId, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePage) GetCreatorId() int { return v.CreatorId }

// GetCreatorName returns GetPagePagesPageQuerySinglePage.CreatorName, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePage) GetCreatorName() string { return v.CreatorName }

// GetCreatorEmail returns GetPagePagesPageQuerySinglePage.CreatorEmail, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePage) GetCreatorEmail() string { return v.CreatorEmail }

// GetPagePagesPageQuerySinglePageTagsPageTag includes the requested fields of the GraphQL type PageTag.
type GetPagePagesPageQuerySinglePageTagsPageTag struct {
	Id        int    `json:"id"`
	Tag       string `json:"tag"`
	Title     string `json:"title"`
	CreatedAt string `json:"createdAt"`
	UpdatedAt string `json:"updatedAt"`
}

// GetId returns GetPagePagesPageQuerySinglePageTagsPageTag.Id, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePageTagsPageTag) GetId() int { return v.Id }

// GetTag returns GetPagePagesPageQuerySinglePageTagsPageTag.Tag, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePageTagsPageTag) GetTag() string { return v.Tag }

// GetTitle returns GetPagePagesPageQuerySinglePageTagsPageTag.Title, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePageTagsPageTag) GetTitle() string { return v.Title }

// GetCreatedAt returns GetPagePagesPageQuerySinglePageTagsPageTag.CreatedAt, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePageTagsPageTag) GetCreatedAt() string { return v.CreatedAt }

// GetUpdatedAt returns GetPagePagesPageQuerySinglePageTagsPageTag.UpdatedAt, and is useful for accessing the field via an interface.
func (v *GetPagePagesPageQuerySinglePageTagsPageTag) GetUpdatedAt() string { return v.UpdatedAt }

// GetPageResponse is returned by GetPage on success.
type GetPageResponse struct {
	Pages GetPagePagesPageQuery `json:"pages"`
}

// GetPages returns GetPageResponse.Pages, and is useful for accessing the field via an interface.
func (v *GetPageResponse) GetPages() GetPagePagesPageQuery { return v.Pages }

// GetRenderersRenderingRenderingQuery includes the requested fields of the GraphQL type RenderingQuery.
type GetRenderersRenderingRenderingQuery struct {
	Renderers []GetRenderersRenderingRenderingQueryRenderersRenderer `json:"renderers"`
}

// GetRenderers returns GetRenderersRenderingRenderingQuery.Renderers, and is useful for accessing the field via an interface.
func (v *GetRenderersRenderingRenderingQuery) GetRenderers() []GetRenderersRenderingRenderingQueryRenderersRenderer {
	return v.Renderers
}

// GetRenderersRenderingRenderingQueryRenderersRenderer includes the requested fields of the GraphQL type Renderer.
type GetRenderersRenderingRenderingQueryRenderersRenderer struct {
	IsEnabled   bool                                                                     `json:"isEnabled"`
	Key         string                                                                   `json:"key"`
	Title       string                                                                   `json:"title"`
	Description string                                                                   `json:"description"`
	Icon        string                                                                   `json:"icon"`
	DependsOn   string                                                                   `json:"dependsOn"`
	Input       string                                                                   `json:"input"`
	Output      string                                                                   `json:"output"`
	Config      []GetRenderersRenderingRenderingQueryRenderersRendererConfigKeyValuePair `json:"config"`
}

// GetIsEnabled returns GetRenderersRenderingRenderingQueryRenderersRenderer.IsEnabled, and is useful for accessing the field via an interface.
func (v *GetRenderersRenderingRenderingQueryRenderersRenderer) GetIsEnabled() bool {
	return v.IsEnabled
}

// GetKey returns GetRenderersRenderingRenderingQueryRenderersRenderer.Key, and is useful for accessing the field via an interface.
func (v *GetRenderersRenderingRenderingQueryRenderersRenderer) GetKey() string { return v.Key }

// GetTitle returns GetRenderersRenderingRenderingQueryRenderersRenderer.Title, and is useful for accessing the field via an interface.
func (v *GetRenderersRenderingRenderingQueryRenderersRenderer) GetTitle() string { return v.Title }

// GetDescription returns GetRenderersRenderingRenderingQueryRenderersRenderer.Description, and is useful for accessing the field via an interface.
func (v *GetRenderersRenderingRenderingQueryRenderersRenderer) GetDescription() string {
	return v.Description
}

// GetIcon returns GetRenderersRenderingRenderingQueryRenderersRenderer.Icon, and is useful for accessing the field via an interface.
func (v *GetRenderersRenderingRenderingQueryRenderersRenderer) GetIcon() string { return v.Icon }

// GetDependsOn returns GetRenderersRenderingRenderingQueryRenderersRenderer.DependsOn, and is useful for accessing the field via an interface.
func (v *GetRenderersRenderingRenderingQueryRenderersRenderer) GetDependsOn() string {
	return v.DependsOn
}

// GetInput returns GetRenderersRenderingRenderingQueryRenderersRenderer.Input, and is useful for accessing the field via an interface.
func (v *GetRenderersRenderingRenderingQueryRenderersRenderer) GetInput() string { return v.Input }

// GetOutput returns GetRenderersRenderingRenderingQueryRenderersRenderer.Output, and is useful for accessing the field via an interface.
func (v *GetRenderersRenderingRenderingQueryRenderersRenderer) GetOutput() string { return v.Output }

// GetConfig returns GetRenderersRenderingRenderingQueryRenderersRenderer.Config, and is useful for accessing the field via an interface.
func (v *GetRenderersRenderingRenderingQueryRenderersRenderer) GetConfig() []GetRenderersRenderingRenderingQueryRenderersRendererConfigKeyValuePair {
	return v.Config
}

// GetRenderersRenderingRenderingQueryRenderersRendererConfigKeyValuePair includes the requested fields of the GraphQL type KeyValuePair.
type GetRenderersRenderingRenderingQueryRenderersRendererConfigKeyValuePair struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

// GetKey returns GetRenderersRenderingRenderingQueryRenderersRendererConfigKeyValuePair.Key, and is useful for accessing the field via an interface.
func (v *GetRenderersRenderingRenderingQueryRenderersRendererConfigKeyValuePair) GetKey() string {
	return v.Key
}

// GetValue returns GetRenderersRenderingRenderingQueryRenderersRendererConfigKeyValuePair.Value, and is useful for accessing the field via an interface.
func (v *GetRenderersRenderingRenderingQueryRenderersRendererConfigKeyValuePair) GetValue() string {
	return v.Value
}

// GetRenderersResponse is returned by GetRenderers on success.
type GetRenderersResponse struct {
	Rendering GetRenderersRenderingRenderingQuery `json:"rendering"`
}

// GetRendering returns GetRenderersResponse.Rendering, and is useful for accessing the field via an interface.
func (v *GetRenderersResponse) GetRendering() GetRenderersRenderingRenderingQuery { return v.Rendering }

// GetSearchEnginesResponse is returned by GetSearchEngines on success.
type GetSearchEnginesResponse struct {
	Search GetSearchEnginesSearchSearchQuery `json:"search"`
}

// GetSearch returns GetSearchEnginesResponse.Search, and is useful for accessing the field via an interface.
func (v *GetSearchEnginesResponse) GetSearch() GetSearchEnginesSearchSearchQuery { return v.Search }

// GetSearchEnginesSearchSearchQuery includes the requested fields of the GraphQL type SearchQuery.
type GetSearchEnginesSearchSearchQuery struct {
	SearchEngines []GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngine `json:"searchEngines"`
}

// GetSearchEngines returns GetSearchEnginesSearchSearchQuery.SearchEngines, and is useful for accessing the field via an interface.
func (v *GetSearchEnginesSearchSearchQuery) GetSearchEngines() []GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngine {
	return v.SearchEngines
}

// GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngine includes the requested fields of the GraphQL type SearchEngine.
type GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngine struct {
	IsEnabled   bool                                                                           `json:"isEnabled"`
	Key         string                                                                         `json:"key"`
	Title       string                                                                         `json:"title"`
	Description string                                                                         `json:"description"`
	Logo        string                                                                         `json:"logo"`
	Website     string                                                                         `json:"website"`
	IsAvailable bool                                                                           `json:"isAvailable"`
	Config      []GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngineConfigKeyValuePair `json:"config"`
}

// GetIsEnabled returns GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngine.IsEnabled, and is useful for accessing the field via an interface.
func (v *GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngine) GetIsEnabled() bool {
	return v.IsEnabled
}

// GetKey returns GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngine.Key, and is useful for accessing the field via an interface.
func (v *GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngine) GetKey() string { return v.Key }

// GetTitle returns GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngine.Title, and is useful for accessing the field via an interface.
func (v *GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngine) GetTitle() string {
	return v.Title
}

// GetDescription returns GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngine.Description, and is useful for accessing the field via an interface.
func (v *GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngine) GetDescription() string {
	return v.Description
}

// GetLogo returns GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngine.Logo, and is useful for accessing the field via an interface.
func (v *GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngine) GetLogo() string { return v.Logo }

// GetWebsite returns GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngine.Website, and is useful for accessing the field via an interface.
func (v *GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngine) GetWebsite() string {
	return v.Website
}

// GetIsAvailable returns GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngine.IsAvailable, and is useful for accessing the field via an interface.
func (v *GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngine) GetIsAvailable() bool {
	return v.IsAvailable
}

// GetConfig returns GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngine.Config, and is useful for accessing the field via an interface.
func (v *GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngine) GetConfig() []GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngineConfigKeyValuePair {
	return v.Config
}

// GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngineConfigKeyValuePair includes the requested fields of the GraphQL type KeyValuePair.
type GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngineConfigKeyValuePair struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

// GetKey returns GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngineConfigKeyValuePair.Key, and is useful for accessing the field via an interface.
func (v *GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngineConfigKeyValuePair) GetKey() string {
	return v.Key
}

// GetValue returns GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngineConfigKeyValuePair.Value, and is useful for accessing the field via an interface.
func (v *GetSearchEnginesSearchSearchQuerySearchEnginesSearchEngineConfigKeyValuePair) GetValue() string {
	return v.Value
}

// GetSiteConfigResponse is returned by GetSiteConfig on success.
type GetSiteConfigResponse struct {
	Site GetSiteConfigSiteSiteQuery `json:"site"`
}

// GetSite returns GetSiteConfigResponse.Site, and is useful for accessing the field via an interface.
func (v *GetSiteConfigResponse) GetSite() GetSiteConfigSiteSiteQuery { return v.Site }

// GetSiteConfigSiteSiteQuery includes the requested fields of the GraphQL type SiteQuery.
type GetSiteConfigSiteSiteQuery struct {
	Config GetSiteConfigSiteSiteQueryConfigSiteConfig `json:"config"`
}

// GetConfig returns GetSiteConfigSiteSiteQuery.Config, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQuery) GetConfig() GetSiteConfigSiteSiteQueryConfigSiteConfig {
	return v.Config
}

// GetSiteConfigSiteSiteQueryConfigSiteConfig includes the requested fields of the GraphQL type SiteConfig.
type GetSiteConfigSiteSiteQueryConfigSiteConfig struct {
	Host                   string   `json:"host"`
	Title                  string   `json:"title"`
	Description            string   `json:"description"`
	Robots                 []string `json:"robots"`
	AnalyticsService       string   `json:"analyticsService"`
	AnalyticsId            string   `json:"analyticsId"`
	Company                string   `json:"company"`
	ContentLicense         string   `json:"contentLicense"`
	FooterOverride         string   `json:"footerOverride"`
	LogoUrl                string   `json:"logoUrl"`
	PageExtensions         string   `json:"pageExtensions"`
	AuthAutoLogin          bool     `json:"authAutoLogin"`
	AuthEnforce2FA         bool     `json:"authEnforce2FA"`
	AuthHideLocal          bool     `json:"authHideLocal"`
	AuthLoginBgUrl         string   `json:"authLoginBgUrl"`
	AuthJwtAudience        string   `json:"authJwtAudience"`
	AuthJwtExpiration      string   `json:"authJwtExpiration"`
	AuthJwtRenewablePeriod string   `json:"authJwtRenewablePeriod"`
	EditFab                bool     `json:"editFab"`
	EditMenuBar            bool     `json:"editMenuBar"`
	EditMenuBtn            bool     `json:"editMenuBtn"`
	EditMenuExternalBtn    bool     `json:"editMenuExternalBtn"`
	EditMenuExternalName   string   `json:"editMenuExternalName"`
	EditMenuExternalIcon   string   `json:"editMenuExternalIcon"`
	EditMenuExternalUrl    string   `json:"editMenuExternalUrl"`
	FeaturePageRatings     bool     `json:"featurePageRatings"`
	FeaturePageComments    bool     `json:"featurePageComments"`
	FeaturePersonalWikis   bool     `json:"featurePersonalWikis"`
	SecurityOpenRedirect   bool     `json:"securityOpenRedirect"`
	SecurityIframe         bool     `json:"securityIframe"`
	SecurityReferrerPolicy bool     `json:"securityReferrerPolicy"`
	SecurityTrustProxy     bool     `json:"securityTrustProxy"`
	SecuritySRI            bool     `json:"securitySRI"`
	SecurityHSTS           bool     `json:"securityHSTS"`
	SecurityHSTSDuration   int      `json:"securityHSTSDuration"`
	SecurityCSP            bool     `json:"securityCSP"`
	SecurityCSPDirectives  string   `json:"securityCSPDirectives"`
	UploadMaxFileSize      int      `json:"uploadMaxFileSize"`
	UploadMaxFiles         int      `json:"uploadMaxFiles"`
	UploadScanSVG          bool     `json:"uploadScanSVG"`
	UploadForceDownload    bool     `json:"uploadForceDownload"`
}

// GetHost returns GetSiteConfigSiteSiteQueryConfigSiteConfig.Host, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetHost() string { return v.Host }

// GetTitle returns GetSiteConfigSiteSiteQueryConfigSiteConfig.Title, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetTitle() string { return v.Title }

// GetDescription returns GetSiteConfigSiteSiteQueryConfigSiteConfig.Description, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetDescription() string { return v.Description }

// GetRobots returns GetSiteConfigSiteSiteQueryConfigSiteConfig.Robots, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetRobots() []string { return v.Robots }

// GetAnalyticsService returns GetSiteConfigSiteSiteQueryConfigSiteConfig.AnalyticsService, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetAnalyticsService() string {
	return v.AnalyticsService
}

// GetAnalyticsId returns GetSiteConfigSiteSiteQueryConfigSiteConfig.AnalyticsId, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetAnalyticsId() string { return v.AnalyticsId }

// GetCompany returns GetSiteConfigSiteSiteQueryConfigSiteConfig.Company, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetCompany() string { return v.Company }

// GetContentLicense returns GetSiteConfigSiteSiteQueryConfigSiteConfig.ContentLicense, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetContentLicense() string {
	return v.ContentLicense
}

// GetFooterOverride returns GetSiteConfigSiteSiteQueryConfigSiteConfig.FooterOverride, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetFooterOverride() string {
	return v.FooterOverride
}

// GetLogoUrl returns GetSiteConfigSiteSiteQueryConfigSiteConfig.LogoUrl, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetLogoUrl() string { return v.LogoUrl }

// GetPageExtensions returns GetSiteConfigSiteSiteQueryConfigSiteConfig.PageExtensions, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetPageExtensions() string {
	return v.PageExtensions
}

// GetAuthAutoLogin returns GetSiteConfigSiteSiteQueryConfigSiteConfig.AuthAutoLogin, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetAuthAutoLogin() bool { return v.AuthAutoLogin }

// GetAuthEnforce2FA returns GetSiteConfigSiteSiteQueryConfigSiteConfig.AuthEnforce2FA, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetAuthEnforce2FA() bool {
	return v.AuthEnforce2FA
}

// GetAuthHideLocal returns GetSiteConfigSiteSiteQueryConfigSiteConfig.AuthHideLocal, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetAuthHideLocal() bool { return v.AuthHideLocal }

// GetAuthLoginBgUrl returns GetSiteConfigSiteSiteQueryConfigSiteConfig.AuthLoginBgUrl, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetAuthLoginBgUrl() string {
	return v.AuthLoginBgUrl
}

// GetAuthJwtAudience returns GetSiteConfigSiteSiteQueryConfigSiteConfig.AuthJwtAudience, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetAuthJwtAudience() string {
	return v.AuthJwtAudience
}

// GetAuthJwtExpiration returns GetSiteConfigSiteSiteQueryConfigSiteConfig.AuthJwtExpiration, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetAuthJwtExpiration() string {
	return v.AuthJwtExpiration
}

// GetAuthJwtRenewablePeriod returns GetSiteConfigSiteSiteQueryConfigSiteConfig.AuthJwtRenewablePeriod, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetAuthJwtRenewablePeriod() string {
	return v.AuthJwtRenewablePeriod
}

// GetEditFab returns GetSiteConfigSiteSiteQueryConfigSiteConfig.EditFab, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetEditFab() bool { return v.EditFab }

// GetEditMenuBar returns GetSiteConfigSiteSiteQueryConfigSiteConfig.EditMenuBar, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetEditMenuBar() bool { return v.EditMenuBar }

// GetEditMenuBtn returns GetSiteConfigSiteSiteQueryConfigSiteConfig.EditMenuBtn, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetEditMenuBtn() bool { return v.EditMenuBtn }

// GetEditMenuExternalBtn returns GetSiteConfigSiteSiteQueryConfigSiteConfig.EditMenuExternalBtn, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetEditMenuExternalBtn() bool {
	return v.EditMenuExternalBtn
}

// GetEditMenuExternalName returns GetSiteConfigSiteSiteQueryConfigSiteConfig.EditMenuExternalName, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetEditMenuExternalName() string {
	return v.EditMenuExternalName
}

// GetEditMenuExternalIcon returns GetSiteConfigSiteSiteQueryConfigSiteConfig.EditMenuExternalIcon, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetEditMenuExternalIcon() string {
	return v.EditMenuExternalIcon
}

// GetEditMenuExternalUrl returns GetSiteConfigSiteSiteQueryConfigSiteConfig.EditMenuExternalUrl, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetEditMenuExternalUrl() string {
	return v.EditMenuExternalUrl
}

// GetFeaturePageRatings returns GetSiteConfigSiteSiteQueryConfigSiteConfig.FeaturePageRatings, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetFeaturePageRatings() bool {
	return v.FeaturePageRatings
}

// GetFeaturePageComments returns GetSiteConfigSiteSiteQueryConfigSiteConfig.FeaturePageComments, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetFeaturePageComments() bool {
	return v.FeaturePageComments
}

// GetFeaturePersonalWikis returns GetSiteConfigSiteSiteQueryConfigSiteConfig.FeaturePersonalWikis, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetFeaturePersonalWikis() bool {
	return v.FeaturePersonalWikis
}

// GetSecurityOpenRedirect returns GetSiteConfigSiteSiteQueryConfigSiteConfig.SecurityOpenRedirect, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetSecurityOpenRedirect() bool {
	return v.SecurityOpenRedirect
}

// GetSecurityIframe returns GetSiteConfigSiteSiteQueryConfigSiteConfig.SecurityIframe, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetSecurityIframe() bool {
	return v.SecurityIframe
}

// GetSecurityReferrerPolicy returns GetSiteConfigSiteSiteQueryConfigSiteConfig.SecurityReferrerPolicy, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetSecurityReferrerPolicy() bool {
	return v.SecurityReferrerPolicy
}

// GetSecurityTrustProxy returns GetSiteConfigSiteSiteQueryConfigSiteConfig.SecurityTrustProxy, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetSecurityTrustProxy() bool {
	return v.SecurityTrustProxy
}

// GetSecuritySRI returns GetSiteConfigSiteSiteQueryConfigSiteConfig.SecuritySRI, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetSecuritySRI() bool { return v.SecuritySRI }

// GetSecurityHSTS returns GetSiteConfigSiteSiteQueryConfigSiteConfig.SecurityHSTS, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetSecurityHSTS() bool { return v.SecurityHSTS }

// GetSecurityHSTSDuration returns GetSiteConfigSiteSiteQueryConfigSiteConfig.SecurityHSTSDuration, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetSecurityHSTSDuration() int {
	return v.SecurityHSTSDuration
}

// GetSecurityCSP returns GetSiteConfigSiteSiteQueryConfigSiteConfig.SecurityCSP, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetSecurityCSP() bool { return v.SecurityCSP }

// GetSecurityCSPDirectives returns GetSiteConfigSiteSiteQueryConfigSiteConfig.SecurityCSPDirectives, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetSecurityCSPDirectives() string {
	return v.SecurityCSPDirectives
}

// GetUploadMaxFileSize returns GetSiteConfigSiteSiteQueryConfigSiteConfig.UploadMaxFileSize, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetUploadMaxFileSize() int {
	return v.UploadMaxFileSize
}

// GetUploadMaxFiles returns GetSiteConfigSiteSiteQueryConfigSiteConfig.UploadMaxFiles, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetUploadMaxFiles() int { return v.UploadMaxFiles }

// GetUploadScanSVG returns GetSiteConfigSiteSiteQueryConfigSiteConfig.UploadScanSVG, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetUploadScanSVG() bool { return v.UploadScanSVG }

// GetUploadForceDownload returns GetSiteConfigSiteSiteQueryConfigSiteConfig.UploadForceDownload, and is useful for accessing the field via an interface.
func (v *GetSiteConfigSiteSiteQueryConfigSiteConfig) GetUploadForceDownload() bool {
	return v.UploadForceDownload
}

// GetThemeConfigResponse is returned by GetThemeConfig on success.
type GetThemeConfigResponse struct {
	Theming GetThemeConfigThemingThemingQuery `json:"theming"`
}

// GetTheming returns GetThemeConfigResponse.Theming, and is useful for accessing the field via an interface.
func (v *GetThemeConfigResponse) GetTheming() GetThemeConfigThemingThemingQuery { return v.Theming }

// GetThemeConfigThemingThemingQuery includes the requested fields of the GraphQL type ThemingQuery.
type GetThemeConfigThemingThemingQuery struct {
	Config GetThemeConfigThemingThemingQueryConfigThemingConfig `json:"config"`
}

// GetConfig returns GetThemeConfigThemingThemingQuery.Config, and is useful for accessing the field via an interface.
func (v *GetThemeConfigThemingThemingQuery) GetConfig() GetThemeConfigThemingThemingQueryConfigThemingConfig {
	return v.Config
}

// GetThemeConfigThemingThemingQueryConfigThemingConfig includes the requested fields of the GraphQL type ThemingConfig.
type GetThemeConfigThemingThemingQueryConfigThemingConfig struct {
	Theme       string `json:"theme"`
	Iconset     string `json:"iconset"`
	DarkMode    bool   `json:"darkMode"`
	TocPosition string `json:"tocPosition"`
	InjectCSS   string `json:"injectCSS"`
	InjectHead  string `json:"injectHead"`
	InjectBody  string `json:"injectBody"`
}

// GetTheme returns GetThemeConfigThemingThemingQueryConfigThemingConfig.Theme, and is useful for accessing the field via an interface.
func (v *GetThemeConfigThemingThemingQueryConfigThemingConfig) GetTheme() string { return v.Theme }

// GetIconset returns GetThemeConfigThemingThemingQueryConfigThemingConfig.Iconset, and is useful for accessing the field via an interface.
func (v *GetThemeConfigThemingThemingQueryConfigThemingConfig) GetIconset() string { return v.Iconset }

// GetDarkMode returns GetThemeConfigThemingThemingQueryConfigThemingConfig.DarkMode, and is useful for accessing the field via an interface.
func (v *GetThemeConfigThemingThemingQueryConfigThemingConfig) GetDarkMode() bool { return v.DarkMode }

// GetTocPosition returns GetThemeConfigThemingThemingQueryConfigThemingConfig.TocPosition, and is useful for accessing the field via an interface.
func (v *GetThemeConfigThemingThemingQueryConfigThemingConfig) GetTocPosition() string {
	return v.TocPosition
}

// GetInjectCSS returns GetThemeConfigThemingThemingQueryConfigThemingConfig.InjectCSS, and is useful for accessing the field via an interface.
func (v *GetThemeConfigThemingThemingQueryConfigThemingConfig) GetInjectCSS() string {
	return v.InjectCSS
}

// GetInjectHead returns GetThemeConfigThemingThemingQueryConfigThemingConfig.InjectHead, and is useful for accessing the field via an interface.
func (v *GetThemeConfigThemingThemingQueryConfigThemingConfig) GetInjectHead() string {
	return v.InjectHead
}

// GetInjectBody returns GetThemeConfigThemingThemingQueryConfigThemingConfig.InjectBody, and is useful for accessing the field via an interface.
func (v *GetThemeConfigThemingThemingQueryConfigThemingConfig) GetInjectBody() string {
	return v.InjectBody
}

// GetThemesResponse is returned by GetThemes on success.
type GetThemesResponse struct {
	Theming GetThemesThemingThemingQuery `json:"theming"`
}

// GetTheming returns GetThemesResponse.Theming, and is useful for accessing the field via an interface.
func (v *GetThemesResponse) GetTheming() GetThemesThemingThemingQuery { return v.Theming }

// GetThemesThemingThemingQuery includes the requested fields of the GraphQL type ThemingQuery.
type GetThemesThemingThemingQuery struct {
	Themes []GetThemesThemingThemingQueryThemesThemingTheme `json:"themes"`
}

// GetThemes returns GetThemesThemingThemingQuery.Themes, and is useful for accessing the field via an interface.
func (v *GetThemesThemingThemingQuery) GetThemes() []GetThemesThemingThemingQueryThemesThemingTheme {
	return v.Themes
}

// GetThemesThemingThemingQueryThemesThemingTheme includes the requested fields of the GraphQL type ThemingTheme.
type GetThemesThemingThemingQueryThemesThemingTheme struct {
	Key    string `json:"key"`
	Title  string `json:"title"`
	Author string `json:"author"`
}

// GetKey returns GetThemesThemingThemingQueryThemesThemingTheme.Key, and is useful for accessing the field via an interface.
func (v *GetThemesThemingThemingQueryThemesThemingTheme) GetKey() string { return v.Key }

// GetTitle returns GetThemesThemingThemingQueryThemesThemingTheme.Title, and is useful for accessing the field via an interface.
func (v *GetThemesThemingThemingQueryThemesThemingTheme) GetTitle() string { return v.Title }

// GetAuthor returns GetThemesThemingThemingQueryThemesThemingTheme.Author, and is useful for accessing the field via an interface.
func (v *GetThemesThemingThemingQueryThemesThemingTheme) GetAuthor() string { return v.Author }

// GroupAssignUserGroupsGroupMutation includes the requested fields of the GraphQL type GroupMutation.
type GroupAssignUserGroupsGroupMutation struct {
	AssignUser GroupAssignUserGroupsGroupMutationAssignUserDefaultResponse `json:"assignUser"`
}

// GetAssignUser returns GroupAssignUserGroupsGroupMutation.AssignUser, and is useful for accessing the field via an interface.
func (v *GroupAssignUserGroupsGroupMutation) GetAssignUser() GroupAssignUserGroupsGroupMutationAssignUserDefaultResponse {
	return v.AssignUser
}

// GroupAssignUserGroupsGroupMutationAssignUserDefaultResponse includes the requested fields of the GraphQL type DefaultResponse.
type GroupAssignUserGroupsGroupMutationAssignUserDefaultResponse struct {
	ResponseResult GroupAssignUserGroupsGroupMutationAssignUserDefaultResponseResponseResultResponseStatus `json:"responseResult"`
}

// GetResponseResult returns GroupAssignUserGroupsGroupMutationAssignUserDefaultResponse.ResponseResult, and is useful for accessing the field via an interface.
func (v *GroupAssignUserGroupsGroupMutationAssignUserDefaultResponse) GetResponseResult() GroupAssignUserGroupsGroupMutationAssignUserDefaultResponseResponseResultResponseStatus {
	return v.ResponseResult
}

// GroupAssignUserGroupsGroupMutationAssignUserDefaultResponseResponseResultResponseStatus includes the requested fields of the GraphQL type ResponseStatus.
type GroupAssignUserGroupsGroupMutationAssignUserDefaultResponseResponseResultResponseStatus struct {
	Succeeded bool   `json:"succeeded"`
	ErrorCode int    `json:"errorCode"`
	Slug      string `json:"slug"`
	Message   string `json:"message"`
}

// GetSucceeded returns GroupAssignUserGroupsGroupMutationAssignUserDefaultResponseResponseResultResponseStatus.Succeeded, and is useful for accessing the field via an interface.
func (v *GroupAssignUserGroupsGroupMutationAssignUserDefaultResponseResponseResultResponseStatus) GetSucceeded() bool {
	return v.Succeeded
}

// GetErrorCode returns GroupAssignUserGroupsGroupMutationAssignUserDefaultResponseResponseResultResponseStatus.ErrorCode, and is useful for accessing the field via an interface.
func (v *GroupAssignUserGroupsGroupMutationAssignUserDefaultResponseResponseResultResponseStatus) GetErrorCode() int {
	return v.ErrorCode
}

// GetSlug returns GroupAssignUserGroupsGroupMutationAssignUserDefaultResponseResponseResultResponseStatus.Slug, and is useful for accessing the field via an interface.
func (v *GroupAssignUserGroupsGroupMutationAssignUserDefaultResponseResponseResultResponseStatus) GetSlug() string {
	return v.Slug
}

// GetMessage returns GroupAssignUserGroupsGroupMutationAssignUserDefaultResponseResponseResultResponseStatus.Message, and is useful for accessing the field via an interface.
func (v *GroupAssignUserGroupsGroupMutationAssignUserDefaultResponseResponseResultResponseStatus) GetMessage() string {
	return v.Message
}

// GroupAssignUserResponse is returned by GroupAssignUser on success.
type GroupAssignUserResponse struct {
	Groups GroupAssignUserGroupsGroupMutation `json:"groups"`
}

// GetGroups returns GroupAssignUserResponse.Groups, and is useful for accessing the field via an interface.
func (v *GroupAssignUserResponse) GetGroups() GroupAssignUserGroupsGroupMutation { return v.Groups }

// GroupUnassignUserGroupsGroupMutation includes the requested fields of the GraphQL type GroupMutation.
type GroupUnassignUserGroupsGroupMutation struct {
	AssignUser GroupUnassignUserGroupsGroupMutationAssignUserDefaultResponse `json:"assignUser"`
}

// GetAssignUser returns GroupUnassignUserGroupsGroupMutation.AssignUser, and is useful for accessing the field via an interface.
func (v *GroupUnassignUserGroupsGroupMutation) GetAssignUser() GroupUnassignUserGroupsGroupMutationAssignUserDefaultResponse {
	return v.AssignUser
}

// GroupUnassignUserGroupsGroupMutationAssignUserDefaultResponse includes the requested fields of the GraphQL type DefaultResponse.
type GroupUnassignUserGroupsGroupMutationAssignUserDefaultResponse struct {
	ResponseResult GroupUnassignUserGroupsGroupMutationAssignUserDefaultResponseResponseResultResponseStatus `json:"responseResult"`
}

// GetResponseResult returns GroupUnassignUserGroupsGroupMutationAssignUserDefaultResponse.ResponseResult, and is useful for accessing the field via an interface.
func (v *GroupUnassignUserGroupsGroupMutationAssignUserDefaultResponse) GetResponseResult() GroupUnassignUserGroupsGroupMutationAssignUserDefaultResponseResponseResultResponseStatus {
	return v.ResponseResult
}

// GroupUnassignUserGroupsGroupMutationAssignUserDefaultResponseResponseResultResponseStatus includes the requested fields of the GraphQL type ResponseStatus.
type GroupUnassignUserGroupsGroupMutationAssignUserDefaultResponseResponseResultResponseStatus struct {
	Succeeded bool   `json:"succeeded"`
	ErrorCode int    `json:"errorCode"`
	Slug      string `json:"slug"`
	Message   string `json:"message"`
}

// GetSucceeded returns GroupUnassignUserGroupsGroupMutationAssignUserDefaultResponseResponseResultResponseStatus.Succeeded, and is useful for accessing the field via an interface.
func (v *GroupUnassignUserGroupsGroupMutationAssignUserDefaultResponseResponseResultResponseStatus) GetSucceeded() bool {
	return v.Succeeded
}

// GetErrorCode returns GroupUnassignUserGroupsGroupMutationAssignUserDefaultResponseResponseResultResponseStatus.ErrorCode, and is useful for accessing the field via an interface.
func (v *GroupUnassignUserGroupsGroupMutationAssignUserDefaultResponseResponseResultResponseStatus) GetErrorCode() int {
	return v.ErrorCode
}

// GetSlug returns GroupUnassignUserGroupsGroupMutationAssignUserDefaultResponseResponseResultResponseStatus.Slug, and is useful for accessing the field via an interface.
func (v *GroupUnassignUserGroupsGroupMutationAssignUserDefaultResponseResponseResultResponseStatus) GetSlug() string {
	return v.Slug
}

// GetMessage returns GroupUnassignUserGroupsGroupMutationAssignUserDefaultResponseResponseResultResponseStatus.Message, and is useful for accessing the field via an interface.
func (v *GroupUnassignUserGroupsGroupMutationAssignUserDefaultResponseResponseResultResponseStatus) GetMessage() string {
	return v.Message
}

// GroupUnassignUserResponse is returned by GroupUnassignUser on success.
type GroupUnassignUserResponse struct {
	Groups GroupUnassignUserGroupsGroupMutation `json:"groups"`
}

// GetGroups returns GroupUnassignUserResponse.Groups, and is useful for accessing the field via an interface.
func (v *GroupUnassignUserResponse) GetGroups() GroupUnassignUserGroupsGroupMutation { return v.Groups }

type KeyValuePairInput struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

// GetKey returns KeyValuePairInput.Key, and is useful for accessing the field via an interface.
func (v *KeyValuePairInput) GetKey() string { return v.Key }

// GetValue returns KeyValuePairInput.Value, and is useful for accessing the field via an interface.
func (v *KeyValuePairInput) GetValue() string { return v.Value }

// ListGroupsGroupsGroupQuery includes the requested fields of the GraphQL type GroupQuery.
type ListGroupsGroupsGroupQuery struct {
	List []ListGroupsGroupsGroupQueryListGroupMinimal `json:"list"`
}

// GetList returns ListGroupsGroupsGroupQuery.List, and is useful for accessing the field via an interface.
func (v *ListGroupsGroupsGroupQuery) GetList() []ListGroupsGroupsGroupQueryListGroupMinimal {
	return v.List
}

// ListGroupsGroupsGroupQueryListGroupMinimal includes the requested fields of the GraphQL type GroupMinimal.
type ListGroupsGroupsGroupQueryListGroupMinimal struct {
	Id        int    `json:"id"`
	Name      string `json:"name"`
	IsSystem  bool   `json:"isSystem"`
	UserCount int    `json:"userCount"`
	CreatedAt string `json:"createdAt"`
	UpdatedAt string `json:"updatedAt"`
}

// GetId returns ListGroupsGroupsGroupQueryListGroupMinimal.Id, and is useful for accessing the field via an interface.
func (v *ListGroupsGroupsGroupQueryListGroupMinimal) GetId() int { return v.Id }

// GetName returns ListGroupsGroupsGroupQueryListGroupMinimal.Name, and is useful for accessing the field via an interface.
func (v *ListGroupsGroupsGroupQueryListGroupMinimal) GetName() string { return v.Name }

// GetIsSystem returns ListGroupsGroupsGroupQueryListGroupMinimal.IsSystem, and is useful for accessing the field via an interface.
func (v *ListGroupsGroupsGroupQueryListGroupMinimal) GetIsSystem() bool { return v.IsSystem }

// GetUserCount returns ListGroupsGroupsGroupQueryListGroupMinimal.UserCount, and is useful for accessing the field via an interface.
func (v *ListGroupsGroupsGroupQueryListGroupMinimal) GetUserCount() int { return v.UserCount }

// GetCreatedAt returns ListGroupsGroupsGroupQueryListGroupMinimal.CreatedAt, and is useful for accessing the field via an interface.
func (v *ListGroupsGroupsGroupQueryListGroupMinimal) GetCreatedAt() string { return v.CreatedAt }

// GetUpdatedAt returns ListGroupsGroupsGroupQueryListGroupMinimal.UpdatedAt, and is useful for accessing the field via an interface.
func (v *ListGroupsGroupsGroupQueryListGroupMinimal) GetUpdatedAt() string { return v.UpdatedAt }

// ListGroupsResponse is returned by ListGroups on success.
type ListGroupsResponse struct {
	Groups ListGroupsGroupsGroupQuery `json:"groups"`
}

// GetGroups returns ListGroupsResponse.Groups, and is useful for accessing the field via an interface.
func (v *ListGroupsResponse) GetGroups() ListGroupsGroupsGroupQuery { return v.Groups }

// LoginAuthenticationAuthenticationMutation includes the requested fields of the GraphQL type AuthenticationMutation.
type LoginAuthenticationAuthenticationMutation struct {
	Login LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponse `json:"login"`
}

// GetLogin returns LoginAuthenticationAuthenticationMutation.Login, and is useful for accessing the field via an interface.
func (v *LoginAuthenticationAuthenticationMutation) GetLogin() LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponse {
	return v.Login
}

// LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponse includes the requested fields of the GraphQL type AuthenticationLoginResponse.
type LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponse struct {
	ResponseResult    LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponseResponseResultResponseStatus `json:"responseResult"`
	Jwt               string                                                                                                `json:"jwt"`
	MustChangePwd     bool                                                                                                  `json:"mustChangePwd"`
	MustProvideTFA    bool                                                                                                  `json:"mustProvideTFA"`
	MustSetupTFA      bool                                                                                                  `json:"mustSetupTFA"`
	ContinuationToken string                                                                                                `json:"continuationToken"`
	Redirect          string                                                                                                `json:"redirect"`
	TfaQRImage        string                                                                                                `json:"tfaQRImage"`
}

// GetResponseResult returns LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponse.ResponseResult, and is useful for accessing the field via an interface.
func (v *LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponse) GetResponseResult() LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponseResponseResultResponseStatus {
	return v.ResponseResult
}

// GetJwt returns LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponse.Jwt, and is useful for accessing the field via an interface.
func (v *LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponse) GetJwt() string {
	return v.Jwt
}

// GetMustChangePwd returns LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponse.MustChangePwd, and is useful for accessing the field via an interface.
func (v *LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponse) GetMustChangePwd() bool {
	return v.MustChangePwd
}

// GetMustProvideTFA returns LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponse.MustProvideTFA, and is useful for accessing the field via an interface.
func (v *LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponse) GetMustProvideTFA() bool {
	return v.MustProvideTFA
}

// GetMustSetupTFA returns LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponse.MustSetupTFA, and is useful for accessing the field via an interface.
func (v *LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponse) GetMustSetupTFA() bool {
	return v.MustSetupTFA
}

// GetContinuationToken returns LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponse.ContinuationToken, and is useful for accessing the field via an interface.
func (v *LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponse) GetContinuationToken() string {
	return v.ContinuationToken
}

// GetRedirect returns LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponse.Redirect, and is useful for accessing the field via an interface.
func (v *LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponse) GetRedirect() string {
	return v.Redirect
}

// GetTfaQRImage returns LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponse.TfaQRImage, and is useful for accessing the field via an interface.
func (v *LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponse) GetTfaQRImage() string {
	return v.TfaQRImage
}

// LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponseResponseResultResponseStatus includes the requested fields of the GraphQL type ResponseStatus.
type LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponseResponseResultResponseStatus struct {
	Succeeded bool   `json:"succeeded"`
	ErrorCode int    `json:"errorCode"`
	Slug      string `json:"slug"`
	Message   string `json:"message"`
}

// GetSucceeded returns LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponseResponseResultResponseStatus.Succeeded, and is useful for accessing the field via an interface.
func (v *LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponseResponseResultResponseStatus) GetSucceeded() bool {
	return v.Succeeded
}

// GetErrorCode returns LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponseResponseResultResponseStatus.ErrorCode, and is useful for accessing the field via an interface.
func (v *LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponseResponseResultResponseStatus) GetErrorCode() int {
	return v.ErrorCode
}

// GetSlug returns LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponseResponseResultResponseStatus.Slug, and is useful for accessing the field via an interface.
func (v *LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponseResponseResultResponseStatus) GetSlug() string {
	return v.Slug
}

// GetMessage returns LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponseResponseResultResponseStatus.Message, and is useful for accessing the field via an interface.
func (v *LoginAuthenticationAuthenticationMutationLoginAuthenticationLoginResponseResponseResultResponseStatus) GetMessage() string {
	return v.Message
}

// LoginResponse is returned by Login on success.
type LoginResponse struct {
	Authentication LoginAuthenticationAuthenticationMutation `json:"authentication"`
}

// GetAuthentication returns LoginResponse.Authentication, and is useful for accessing the field via an interface.
func (v *LoginResponse) GetAuthentication() LoginAuthenticationAuthenticationMutation {
	return v.Authentication
}

type PageRuleInput struct {
	Id      string        `json:"id"`
	Deny    bool          `json:"deny"`
	Match   PageRuleMatch `json:"match"`
	Roles   []string      `json:"roles"`
	Path    string        `json:"path"`
	Locales []string      `json:"locales"`
}

// GetId returns PageRuleInput.Id, and is useful for accessing the field via an interface.
func (v *PageRuleInput) GetId() string { return v.Id }

// GetDeny returns PageRuleInput.Deny, and is useful for accessing the field via an interface.
func (v *PageRuleInput) GetDeny() bool { return v.Deny }

// GetMatch returns PageRuleInput.Match, and is useful for accessing the field via an interface.
func (v *PageRuleInput) GetMatch() PageRuleMatch { return v.Match }

// GetRoles returns PageRuleInput.Roles, and is useful for accessing the field via an interface.
func (v *PageRuleInput) GetRoles() []string { return v.Roles }

// GetPath returns PageRuleInput.Path, and is useful for accessing the field via an interface.
func (v *PageRuleInput) GetPath() string { return v.Path }

// GetLocales returns PageRuleInput.Locales, and is useful for accessing the field via an interface.
func (v *PageRuleInput) GetLocales() []string { return v.Locales }

type PageRuleMatch string

const (
	PageRuleMatchStart PageRuleMatch = "START"
	PageRuleMatchExact PageRuleMatch = "EXACT"
	PageRuleMatchEnd   PageRuleMatch = "END"
	PageRuleMatchRegex PageRuleMatch = "REGEX"
	PageRuleMatchTag   PageRuleMatch = "TAG"
)

type RendererInput struct {
	IsEnabled bool                `json:"isEnabled"`
	Key       string              `json:"key"`
	Config    []KeyValuePairInput `json:"config"`
}

// GetIsEnabled returns RendererInput.IsEnabled, and is useful for accessing the field via an interface.
func (v *RendererInput) GetIsEnabled() bool { return v.IsEnabled }

// GetKey returns RendererInput.Key, and is useful for accessing the field via an interface.
func (v *RendererInput) GetKey() string { return v.Key }

// GetConfig returns RendererInput.Config, and is useful for accessing the field via an interface.
func (v *RendererInput) GetConfig() []KeyValuePairInput { return v.Config }

// RevokeApiKeyAuthenticationAuthenticationMutation includes the requested fields of the GraphQL type AuthenticationMutation.
type RevokeApiKeyAuthenticationAuthenticationMutation struct {
	RevokeApiKey RevokeApiKeyAuthenticationAuthenticationMutationRevokeApiKeyDefaultResponse `json:"revokeApiKey"`
}

// GetRevokeApiKey returns RevokeApiKeyAuthenticationAuthenticationMutation.RevokeApiKey, and is useful for accessing the field via an interface.
func (v *RevokeApiKeyAuthenticationAuthenticationMutation) GetRevokeApiKey() RevokeApiKeyAuthenticationAuthenticationMutationRevokeApiKeyDefaultResponse {
	return v.RevokeApiKey
}

// RevokeApiKeyAuthenticationAuthenticationMutationRevokeApiKeyDefaultResponse includes the requested fields of the GraphQL type DefaultResponse.
type RevokeApiKeyAuthenticationAuthenticationMutationRevokeApiKeyDefaultResponse struct {
	ResponseResult RevokeApiKeyAuthenticationAuthenticationMutationRevokeApiKeyDefaultResponseResponseResultResponseStatus `json:"responseResult"`
}

// GetResponseResult returns RevokeApiKeyAuthenticationAuthenticationMutationRevokeApiKeyDefaultResponse.ResponseResult, and is useful for accessing the field via an interface.
func (v *RevokeApiKeyAuthenticationAuthenticationMutationRevokeApiKeyDefaultResponse) GetResponseResult() RevokeApiKeyAuthenticationAuthenticationMutationRevokeApiKeyDefaultResponseResponseResultResponseStatus {
	return v.ResponseResult
}

// RevokeApiKeyAuthenticationAuthenticationMutationRevokeApiKeyDefaultResponseResponseResultResponseStatus includes the requested fields of the GraphQL type ResponseStatus.
type RevokeApiKeyAuthenticationAuthenticationMutationRevokeApiKeyDefaultResponseResponseResultResponseStatus struct {
	Succeeded bool   `json:"succeeded"`
	ErrorCode int    `json:"errorCode"`
	Slug      string `json:"slug"`
	Message   string `json:"message"`
}

// GetSucceeded returns RevokeApiKeyAuthenticationAuthenticationMutationRevokeApiKeyDefaultResponseResponseResultResponseStatus.Succeeded, and is useful for accessing the field via an interface.
func (v *RevokeApiKeyAuthenticationAuthenticationMutationRevokeApiKeyDefaultResponseResponseResultResponseStatus) GetSucceeded() bool {
	return v.Succeeded
}

// GetErrorCode returns RevokeApiKeyAuthenticationAuthenticationMutationRevokeApiKeyDefaultResponseResponseResultResponseStatus.ErrorCode, and is useful for accessing the field via an interface.
func (v *RevokeApiKeyAuthenticationAuthenticationMutationRevokeApiKeyDefaultResponseResponseResultResponseStatus) GetErrorCode() int {
	return v.ErrorCode
}

// GetSlug returns RevokeApiKeyAuthenticationAuthenticationMutationRevokeApiKeyDefaultResponseResponseResultResponseStatus.Slug, and is useful for accessing the field via an interface.
func (v *RevokeApiKeyAuthenticationAuthenticationMutationRevokeApiKeyDefaultResponseResponseResultResponseStatus) GetSlug() string {
	return v.Slug
}

// GetMessage returns RevokeApiKeyAuthenticationAuthenticationMutationRevokeApiKeyDefaultResponseResponseResultResponseStatus.Message, and is useful for accessing the field via an interface.
func (v *RevokeApiKeyAuthenticationAuthenticationMutationRevokeApiKeyDefaultResponseResponseResultResponseStatus) GetMessage() string {
	return v.Message
}

// RevokeApiKeyResponse is returned by RevokeApiKey on success.
type RevokeApiKeyResponse struct {
	Authentication RevokeApiKeyAuthenticationAuthenticationMutation `json:"authentication"`
}

// GetAuthentication returns RevokeApiKeyResponse.Authentication, and is useful for accessing the field via an interface.
func (v *RevokeApiKeyResponse) GetAuthentication() RevokeApiKeyAuthenticationAuthenticationMutation {
	return v.Authentication
}

type SearchEngineInput struct {
	IsEnabled bool                `json:"isEnabled"`
	Key       string              `json:"key"`
	Config    []KeyValuePairInput `json:"config"`
}

// GetIsEnabled returns SearchEngineInput.IsEnabled, and is useful for accessing the field via an interface.
func (v *SearchEngineInput) GetIsEnabled() bool { return v.IsEnabled }

// GetKey returns SearchEngineInput.Key, and is useful for accessing the field via an interface.
func (v *SearchEngineInput) GetKey() string { return v.Key }

// GetConfig returns SearchEngineInput.Config, and is useful for accessing the field via an interface.
func (v *SearchEngineInput) GetConfig() []KeyValuePairInput { return v.Config }

// SetApiStateAuthenticationAuthenticationMutation includes the requested fields of the GraphQL type AuthenticationMutation.
type SetApiStateAuthenticationAuthenticationMutation struct {
	SetApiState SetApiStateAuthenticationAuthenticationMutationSetApiStateDefaultResponse `json:"setApiState"`
}

// GetSetApiState returns SetApiStateAuthenticationAuthenticationMutation.SetApiState, and is useful for accessing the field via an interface.
func (v *SetApiStateAuthenticationAuthenticationMutation) GetSetApiState() SetApiStateAuthenticationAuthenticationMutationSetApiStateDefaultResponse {
	return v.SetApiState
}

// SetApiStateAuthenticationAuthenticationMutationSetApiStateDefaultResponse includes the requested fields of the GraphQL type DefaultResponse.
type SetApiStateAuthenticationAuthenticationMutationSetApiStateDefaultResponse struct {
	ResponseResult SetApiStateAuthenticationAuthenticationMutationSetApiStateDefaultResponseResponseResultResponseStatus `json:"responseResult"`
}

// GetResponseResult returns SetApiStateAuthenticationAuthenticationMutationSetApiStateDefaultResponse.ResponseResult, and is useful for accessing the field via an interface.
func (v *SetApiStateAuthenticationAuthenticationMutationSetApiStateDefaultResponse) GetResponseResult() SetApiStateAuthenticationAuthenticationMutationSetApiStateDefaultResponseResponseResultResponseStatus {
	return v.ResponseResult
}

// SetApiStateAuthenticationAuthenticationMutationSetApiStateDefaultResponseResponseResultResponseStatus includes the requested fields of the GraphQL type ResponseStatus.
type SetApiStateAuthenticationAuthenticationMutationSetApiStateDefaultResponseResponseResultResponseStatus struct {
	Succeeded bool   `json:"succeeded"`
	ErrorCode int    `json:"errorCode"`
	Slug      string `json:"slug"`
	Message   string `json:"message"`
}

// GetSucceeded returns SetApiStateAuthenticationAuthenticationMutationSetApiStateDefaultResponseResponseResultResponseStatus.Succeeded, and is useful for accessing the field via an interface.
func (v *SetApiStateAuthenticationAuthenticationMutationSetApiStateDefaultResponseResponseResultResponseStatus) GetSucceeded() bool {
	return v.Succeeded
}

// GetErrorCode returns SetApiStateAuthenticationAuthenticationMutationSetApiStateDefaultResponseResponseResultResponseStatus.ErrorCode, and is useful for accessing the field via an interface.
func (v *SetApiStateAuthenticationAuthenticationMutationSetApiStateDefaultResponseResponseResultResponseStatus) GetErrorCode() int {
	return v.ErrorCode
}

// GetSlug returns SetApiStateAuthenticationAuthenticationMutationSetApiStateDefaultResponseResponseResultResponseStatus.Slug, and is useful for accessing the field via an interface.
func (v *SetApiStateAuthenticationAuthenticationMutationSetApiStateDefaultResponseResponseResultResponseStatus) GetSlug() string {
	return v.Slug
}

// GetMessage returns SetApiStateAuthenticationAuthenticationMutationSetApiStateDefaultResponseResponseResultResponseStatus.Message, and is useful for accessing the field via an interface.
func (v *SetApiStateAuthenticationAuthenticationMutationSetApiStateDefaultResponseResponseResultResponseStatus) GetMessage() string {
	return v.Message
}

// SetApiStateResponse is returned by SetApiState on success.
type SetApiStateResponse struct {
	Authentication SetApiStateAuthenticationAuthenticationMutation `json:"authentication"`
}

// GetAuthentication returns SetApiStateResponse.Authentication, and is useful for accessing the field via an interface.
func (v *SetApiStateResponse) GetAuthentication() SetApiStateAuthenticationAuthenticationMutation {
	return v.Authentication
}

// SetAuthStrategiesAuthenticationAuthenticationMutation includes the requested fields of the GraphQL type AuthenticationMutation.
type SetAuthStrategiesAuthenticationAuthenticationMutation struct {
	UpdateStrategies SetAuthStrategiesAuthenticationAuthenticationMutationUpdateStrategiesDefaultResponse `json:"updateStrategies"`
}

// GetUpdateStrategies returns SetAuthStrategiesAuthenticationAuthenticationMutation.UpdateStrategies, and is useful for accessing the field via an interface.
func (v *SetAuthStrategiesAuthenticationAuthenticationMutation) GetUpdateStrategies() SetAuthStrategiesAuthenticationAuthenticationMutationUpdateStrategiesDefaultResponse {
	return v.UpdateStrategies
}

// SetAuthStrategiesAuthenticationAuthenticationMutationUpdateStrategiesDefaultResponse includes the requested fields of the GraphQL type DefaultResponse.
type SetAuthStrategiesAuthenticationAuthenticationMutationUpdateStrategiesDefaultResponse struct {
	ResponseResult SetAuthStrategiesAuthenticationAuthenticationMutationUpdateStrategiesDefaultResponseResponseResultResponseStatus `json:"responseResult"`
}

// GetResponseResult returns SetAuthStrategiesAuthenticationAuthenticationMutationUpdateStrategiesDefaultResponse.ResponseResult, and is useful for accessing the field via an interface.
func (v *SetAuthStrategiesAuthenticationAuthenticationMutationUpdateStrategiesDefaultResponse) GetResponseResult() SetAuthStrategiesAuthenticationAuthenticationMutationUpdateStrategiesDefaultResponseResponseResultResponseStatus {
	return v.ResponseResult
}

// SetAuthStrategiesAuthenticationAuthenticationMutationUpdateStrategiesDefaultResponseResponseResultResponseStatus includes the requested fields of the GraphQL type ResponseStatus.
type SetAuthStrategiesAuthenticationAuthenticationMutationUpdateStrategiesDefaultResponseResponseResultResponseStatus struct {
	Succeeded bool   `json:"succeeded"`
	ErrorCode int    `json:"errorCode"`
	Slug      string `json:"slug"`
	Message   string `json:"message"`
}

// GetSucceeded returns SetAuthStrategiesAuthenticationAuthenticationMutationUpdateStrategiesDefaultResponseResponseResultResponseStatus.Succeeded, and is useful for accessing the field via an interface.
func (v *SetAuthStrategiesAuthenticationAuthenticationMutationUpdateStrategiesDefaultResponseResponseResultResponseStatus) GetSucceeded() bool {
	return v.Succeeded
}

// GetErrorCode returns SetAuthStrategiesAuthenticationAuthenticationMutationUpdateStrategiesDefaultResponseResponseResultResponseStatus.ErrorCode, and is useful for accessing the field via an interface.
func (v *SetAuthStrategiesAuthenticationAuthenticationMutationUpdateStrategiesDefaultResponseResponseResultResponseStatus) GetErrorCode() int {
	return v.ErrorCode
}

// GetSlug returns SetAuthStrategiesAuthenticationAuthenticationMutationUpdateStrategiesDefaultResponseResponseResultResponseStatus.Slug, and is useful for accessing the field via an interface.
func (v *SetAuthStrategiesAuthenticationAuthenticationMutationUpdateStrategiesDefaultResponseResponseResultResponseStatus) GetSlug() string {
	return v.Slug
}

// GetMessage returns SetAuthStrategiesAuthenticationAuthenticationMutationUpdateStrategiesDefaultResponseResponseResultResponseStatus.Message, and is useful for accessing the field via an interface.
func (v *SetAuthStrategiesAuthenticationAuthenticationMutationUpdateStrategiesDefaultResponseResponseResultResponseStatus) GetMessage() string {
	return v.Message
}

// SetAuthStrategiesResponse is returned by SetAuthStrategies on success.
type SetAuthStrategiesResponse struct {
	Authentication SetAuthStrategiesAuthenticationAuthenticationMutation `json:"authentication"`
}

// GetAuthentication returns SetAuthStrategiesResponse.Authentication, and is useful for accessing the field via an interface.
func (v *SetAuthStrategiesResponse) GetAuthentication() SetAuthStrategiesAuthenticationAuthenticationMutation {
	return v.Authentication
}

// SetLocalizationLocalizationLocalizationMutation includes the requested fields of the GraphQL type LocalizationMutation.
type SetLocalizationLocalizationLocalizationMutation struct {
	UpdateLocale SetLocalizationLocalizationLocalizationMutationUpdateLocaleDefaultResponse `json:"updateLocale"`
}

// GetUpdateLocale returns SetLocalizationLocalizationLocalizationMutation.UpdateLocale, and is useful for accessing the field via an interface.
func (v *SetLocalizationLocalizationLocalizationMutation) GetUpdateLocale() SetLocalizationLocalizationLocalizationMutationUpdateLocaleDefaultResponse {
	return v.UpdateLocale
}

// SetLocalizationLocalizationLocalizationMutationUpdateLocaleDefaultResponse includes the requested fields of the GraphQL type DefaultResponse.
type SetLocalizationLocalizationLocalizationMutationUpdateLocaleDefaultResponse struct {
	ResponseResult SetLocalizationLocalizationLocalizationMutationUpdateLocaleDefaultResponseResponseResultResponseStatus `json:"responseResult"`
}

// GetResponseResult returns SetLocalizationLocalizationLocalizationMutationUpdateLocaleDefaultResponse.ResponseResult, and is useful for accessing the field via an interface.
func (v *SetLocalizationLocalizationLocalizationMutationUpdateLocaleDefaultResponse) GetResponseResult() SetLocalizationLocalizationLocalizationMutationUpdateLocaleDefaultResponseResponseResultResponseStatus {
	return v.ResponseResult
}

// SetLocalizationLocalizationLocalizationMutationUpdateLocaleDefaultResponseResponseResultResponseStatus includes the requested fields of the GraphQL type ResponseStatus.
type SetLocalizationLocalizationLocalizationMutationUpdateLocaleDefaultResponseResponseResultResponseStatus struct {
	Succeeded bool   `json:"succeeded"`
	ErrorCode int    `json:"errorCode"`
	Slug      string `json:"slug"`
	Message   string `json:"message"`
}

// GetSucceeded returns SetLocalizationLocalizationLocalizationMutationUpdateLocaleDefaultResponseResponseResultResponseStatus.Succeeded, and is useful for accessing the field via an interface.
func (v *SetLocalizationLocalizationLocalizationMutationUpdateLocaleDefaultResponseResponseResultResponseStatus) GetSucceeded() bool {
	return v.Succeeded
}

// GetErrorCode returns SetLocalizationLocalizationLocalizationMutationUpdateLocaleDefaultResponseResponseResultResponseStatus.ErrorCode, and is useful for accessing the field via an interface.
func (v *SetLocalizationLocalizationLocalizationMutationUpdateLocaleDefaultResponseResponseResultResponseStatus) GetErrorCode() int {
	return v.ErrorCode
}

// GetSlug returns SetLocalizationLocalizationLocalizationMutationUpdateLocaleDefaultResponseResponseResultResponseStatus.Slug, and is useful for accessing the field via an interface.
func (v *SetLocalizationLocalizationLocalizationMutationUpdateLocaleDefaultResponseResponseResultResponseStatus) GetSlug() string {
	return v.Slug
}

// GetMessage returns SetLocalizationLocalizationLocalizationMutationUpdateLocaleDefaultResponseResponseResultResponseStatus.Message, and is useful for accessing the field via an interface.
func (v *SetLocalizationLocalizationLocalizationMutationUpdateLocaleDefaultResponseResponseResultResponseStatus) GetMessage() string {
	return v.Message
}

// SetLocalizationResponse is returned by SetLocalization on success.
type SetLocalizationResponse struct {
	Localization SetLocalizationLocalizationLocalizationMutation `json:"localization"`
}

// GetLocalization returns SetLocalizationResponse.Localization, and is useful for accessing the field via an interface.
func (v *SetLocalizationResponse) GetLocalization() SetLocalizationLocalizationLocalizationMutation {
	return v.Localization
}

// SetRenderersRenderingRenderingMutation includes the requested fields of the GraphQL type RenderingMutation.
type SetRenderersRenderingRenderingMutation struct {
	UpdateRenderers SetRenderersRenderingRenderingMutationUpdateRenderersDefaultResponse `json:"updateRenderers"`
}

// GetUpdateRenderers returns SetRenderersRenderingRenderingMutation.UpdateRenderers, and is useful for accessing the field via an interface.
func (v *SetRenderersRenderingRenderingMutation) GetUpdateRenderers() SetRenderersRenderingRenderingMutationUpdateRenderersDefaultResponse {
	return v.UpdateRenderers
}

// SetRenderersRenderingRenderingMutationUpdateRenderersDefaultResponse includes the requested fields of the GraphQL type DefaultResponse.
type SetRenderersRenderingRenderingMutationUpdateRenderersDefaultResponse struct {
	ResponseResult SetRenderersRenderingRenderingMutationUpdateRenderersDefaultResponseResponseResultResponseStatus `json:"responseResult"`
}

// GetResponseResult returns SetRenderersRenderingRenderingMutationUpdateRenderersDefaultResponse.ResponseResult, and is useful for accessing the field via an interface.
func (v *SetRenderersRenderingRenderingMutationUpdateRenderersDefaultResponse) GetResponseResult() SetRenderersRenderingRenderingMutationUpdateRenderersDefaultResponseResponseResultResponseStatus {
	return v.ResponseResult
}

// SetRenderersRenderingRenderingMutationUpdateRenderersDefaultResponseResponseResultResponseStatus includes the requested fields of the GraphQL type ResponseStatus.
type SetRenderersRenderingRenderingMutationUpdateRenderersDefaultResponseResponseResultResponseStatus struct {
	Succeeded bool   `json:"succeeded"`
	ErrorCode int    `json:"errorCode"`
	Slug      string `json:"slug"`
	Message   string `json:"message"`
}

// GetSucceeded returns SetRenderersRenderingRenderingMutationUpdateRenderersDefaultResponseResponseResultResponseStatus.Succeeded, and is useful for accessing the field via an interface.
func (v *SetRenderersRenderingRenderingMutationUpdateRenderersDefaultResponseResponseResultResponseStatus) GetSucceeded() bool {
	return v.Succeeded
}

// GetErrorCode returns SetRenderersRenderingRenderingMutationUpdateRenderersDefaultResponseResponseResultResponseStatus.ErrorCode, and is useful for accessing the field via an interface.
func (v *SetRenderersRenderingRenderingMutationUpdateRenderersDefaultResponseResponseResultResponseStatus) GetErrorCode() int {
	return v.ErrorCode
}

// GetSlug returns SetRenderersRenderingRenderingMutationUpdateRenderersDefaultResponseResponseResultResponseStatus.Slug, and is useful for accessing the field via an interface.
func (v *SetRenderersRenderingRenderingMutationUpdateRenderersDefaultResponseResponseResultResponseStatus) GetSlug() string {
	return v.Slug
}

// GetMessage returns SetRenderersRenderingRenderingMutationUpdateRenderersDefaultResponseResponseResultResponseStatus.Message, and is useful for accessing the field via an interface.
func (v *SetRenderersRenderingRenderingMutationUpdateRenderersDefaultResponseResponseResultResponseStatus) GetMessage() string {
	return v.Message
}

// SetRenderersResponse is returned by SetRenderers on success.
type SetRenderersResponse struct {
	Rendering SetRenderersRenderingRenderingMutation `json:"rendering"`
}

// GetRendering returns SetRenderersResponse.Rendering, and is useful for accessing the field via an interface.
func (v *SetRenderersResponse) GetRendering() SetRenderersRenderingRenderingMutation {
	return v.Rendering
}

// SetSearchEnginesResponse is returned by SetSearchEngines on success.
type SetSearchEnginesResponse struct {
	Search SetSearchEnginesSearchSearchMutation `json:"search"`
}

// GetSearch returns SetSearchEnginesResponse.Search, and is useful for accessing the field via an interface.
func (v *SetSearchEnginesResponse) GetSearch() SetSearchEnginesSearchSearchMutation { return v.Search }

// SetSearchEnginesSearchSearchMutation includes the requested fields of the GraphQL type SearchMutation.
type SetSearchEnginesSearchSearchMutation struct {
	UpdateSearchEngines SetSearchEnginesSearchSearchMutationUpdateSearchEnginesDefaultResponse `json:"updateSearchEngines"`
}

// GetUpdateSearchEngines returns SetSearchEnginesSearchSearchMutation.UpdateSearchEngines, and is useful for accessing the field via an interface.
func (v *SetSearchEnginesSearchSearchMutation) GetUpdateSearchEngines() SetSearchEnginesSearchSearchMutationUpdateSearchEnginesDefaultResponse {
	return v.UpdateSearchEngines
}

// SetSearchEnginesSearchSearchMutationUpdateSearchEnginesDefaultResponse includes the requested fields of the GraphQL type DefaultResponse.
type SetSearchEnginesSearchSearchMutationUpdateSearchEnginesDefaultResponse struct {
	ResponseResult SetSearchEnginesSearchSearchMutationUpdateSearchEnginesDefaultResponseResponseResultResponseStatus `json:"responseResult"`
}

// GetResponseResult returns SetSearchEnginesSearchSearchMutationUpdateSearchEnginesDefaultResponse.ResponseResult, and is useful for accessing the field via an interface.
func (v *SetSearchEnginesSearchSearchMutationUpdateSearchEnginesDefaultResponse) GetResponseResult() SetSearchEnginesSearchSearchMutationUpdateSearchEnginesDefaultResponseResponseResultResponseStatus {
	return v.ResponseResult
}

// SetSearchEnginesSearchSearchMutationUpdateSearchEnginesDefaultResponseResponseResultResponseStatus includes the requested fields of the GraphQL type ResponseStatus.
type SetSearchEnginesSearchSearchMutationUpdateSearchEnginesDefaultResponseResponseResultResponseStatus struct {
	Succeeded bool   `json:"succeeded"`
	ErrorCode int    `json:"errorCode"`
	Slug      string `json:"slug"`
	Message   string `json:"message"`
}

// GetSucceeded returns SetSearchEnginesSearchSearchMutationUpdateSearchEnginesDefaultResponseResponseResultResponseStatus.Succeeded, and is useful for accessing the field via an interface.
func (v *SetSearchEnginesSearchSearchMutationUpdateSearchEnginesDefaultResponseResponseResultResponseStatus) GetSucceeded() bool {
	return v.Succeeded
}

// GetErrorCode returns SetSearchEnginesSearchSearchMutationUpdateSearchEnginesDefaultResponseResponseResultResponseStatus.ErrorCode, and is useful for accessing the field via an interface.
func (v *SetSearchEnginesSearchSearchMutationUpdateSearchEnginesDefaultResponseResponseResultResponseStatus) GetErrorCode() int {
	return v.ErrorCode
}

// GetSlug returns SetSearchEnginesSearchSearchMutationUpdateSearchEnginesDefaultResponseResponseResultResponseStatus.Slug, and is useful for accessing the field via an interface.
func (v *SetSearchEnginesSearchSearchMutationUpdateSearchEnginesDefaultResponseResponseResultResponseStatus) GetSlug() string {
	return v.Slug
}

// GetMessage returns SetSearchEnginesSearchSearchMutationUpdateSearchEnginesDefaultResponseResponseResultResponseStatus.Message, and is useful for accessing the field via an interface.
func (v *SetSearchEnginesSearchSearchMutationUpdateSearchEnginesDefaultResponseResponseResultResponseStatus) GetMessage() string {
	return v.Message
}

// SetThemeConfigResponse is returned by SetThemeConfig on success.
type SetThemeConfigResponse struct {
	Theming SetThemeConfigThemingThemingMutation `json:"theming"`
}

// GetTheming returns SetThemeConfigResponse.Theming, and is useful for accessing the field via an interface.
func (v *SetThemeConfigResponse) GetTheming() SetThemeConfigThemingThemingMutation { return v.Theming }

// SetThemeConfigThemingThemingMutation includes the requested fields of the GraphQL type ThemingMutation.
type SetThemeConfigThemingThemingMutation struct {
	SetConfig SetThemeConfigThemingThemingMutationSetConfigDefaultResponse `json:"setConfig"`
}

// GetSetConfig returns SetThemeConfigThemingThemingMutation.SetConfig, and is useful for accessing the field via an interface.
func (v *SetThemeConfigThemingThemingMutation) GetSetConfig() SetThemeConfigThemingThemingMutationSetConfigDefaultResponse {
	return v.SetConfig
}

// SetThemeConfigThemingThemingMutationSetConfigDefaultResponse includes the requested fields of the GraphQL type DefaultResponse.
type SetThemeConfigThemingThemingMutationSetConfigDefaultResponse struct {
	ResponseResult SetThemeConfigThemingThemingMutationSetConfigDefaultResponseResponseResultResponseStatus `json:"responseResult"`
}

// GetResponseResult returns SetThemeConfigThemingThemingMutationSetConfigDefaultResponse.ResponseResult, and is useful for accessing the field via an interface.
func (v *SetThemeConfigThemingThemingMutationSetConfigDefaultResponse) GetResponseResult() SetThemeConfigThemingThemingMutationSetConfigDefaultResponseResponseResultResponseStatus {
	return v.ResponseResult
}

// SetThemeConfigThemingThemingMutationSetConfigDefaultResponseResponseResultResponseStatus includes the requested fields of the GraphQL type ResponseStatus.
type SetThemeConfigThemingThemingMutationSetConfigDefaultResponseResponseResultResponseStatus struct {
	Succeeded bool   `json:"succeeded"`
	ErrorCode int    `json:"errorCode"`
	Slug      string `json:"slug"`
	Message   string `json:"message"`
}

// GetSucceeded returns SetThemeConfigThemingThemingMutationSetConfigDefaultResponseResponseResultResponseStatus.Succeeded, and is useful for accessing the field via an interface.
func (v *SetThemeConfigThemingThemingMutationSetConfigDefaultResponseResponseResultResponseStatus) GetSucceeded() bool {
	return v.Succeeded
}

// GetErrorCode returns SetThemeConfigThemingThemingMutationSetConfigDefaultResponseResponseResultResponseStatus.ErrorCode, and is useful for accessing the field via an interface.
func (v *SetThemeConfigThemingThemingMutationSetConfigDefaultResponseResponseResultResponseStatus) GetErrorCode() int {
	return v.ErrorCode
}

// GetSlug returns SetThemeConfigThemingThemingMutationSetConfigDefaultResponseResponseResultResponseStatus.Slug, and is useful for accessing the field via an interface.
func (v *SetThemeConfigThemingThemingMutationSetConfigDefaultResponseResponseResultResponseStatus) GetSlug() string {
	return v.Slug
}

// GetMessage returns SetThemeConfigThemingThemingMutationSetConfigDefaultResponseResponseResultResponseStatus.Message, and is useful for accessing the field via an interface.
func (v *SetThemeConfigThemingThemingMutationSetConfigDefaultResponseResponseResultResponseStatus) GetMessage() string {
	return v.Message
}

// UpdateGroupGroupsGroupMutation includes the requested fields of the GraphQL type GroupMutation.
type UpdateGroupGroupsGroupMutation struct {
	Update UpdateGroupGroupsGroupMutationUpdateDefaultResponse `json:"update"`
}

// GetUpdate returns UpdateGroupGroupsGroupMutation.Update, and is useful for accessing the field via an interface.
func (v *UpdateGroupGroupsGroupMutation) GetUpdate() UpdateGroupGroupsGroupMutationUpdateDefaultResponse {
	return v.Update
}

// UpdateGroupGroupsGroupMutationUpdateDefaultResponse includes the requested fields of the GraphQL type DefaultResponse.
type UpdateGroupGroupsGroupMutationUpdateDefaultResponse struct {
	ResponseResult UpdateGroupGroupsGroupMutationUpdateDefaultResponseResponseResultResponseStatus `json:"responseResult"`
}

// GetResponseResult returns UpdateGroupGroupsGroupMutationUpdateDefaultResponse.ResponseResult, and is useful for accessing the field via an interface.
func (v *UpdateGroupGroupsGroupMutationUpdateDefaultResponse) GetResponseResult() UpdateGroupGroupsGroupMutationUpdateDefaultResponseResponseResultResponseStatus {
	return v.ResponseResult
}

// UpdateGroupGroupsGroupMutationUpdateDefaultResponseResponseResultResponseStatus includes the requested fields of the GraphQL type ResponseStatus.
type UpdateGroupGroupsGroupMutationUpdateDefaultResponseResponseResultResponseStatus struct {
	Succeeded bool   `json:"succeeded"`
	ErrorCode int    `json:"errorCode"`
	Slug      string `json:"slug"`
	Message   string `json:"message"`
}

// GetSucceeded returns UpdateGroupGroupsGroupMutationUpdateDefaultResponseResponseResultResponseStatus.Succeeded, and is useful for accessing the field via an interface.
func (v *UpdateGroupGroupsGroupMutationUpdateDefaultResponseResponseResultResponseStatus) GetSucceeded() bool {
	return v.Succeeded
}

// GetErrorCode returns UpdateGroupGroupsGroupMutationUpdateDefaultResponseResponseResultResponseStatus.ErrorCode, and is useful for accessing the field via an interface.
func (v *UpdateGroupGroupsGroupMutationUpdateDefaultResponseResponseResultResponseStatus) GetErrorCode() int {
	return v.ErrorCode
}

// GetSlug returns UpdateGroupGroupsGroupMutationUpdateDefaultResponseResponseResultResponseStatus.Slug, and is useful for accessing the field via an interface.
func (v *UpdateGroupGroupsGroupMutationUpdateDefaultResponseResponseResultResponseStatus) GetSlug() string {
	return v.Slug
}

// GetMessage returns UpdateGroupGroupsGroupMutationUpdateDefaultResponseResponseResultResponseStatus.Message, and is useful for accessing the field via an interface.
func (v *UpdateGroupGroupsGroupMutationUpdateDefaultResponseResponseResultResponseStatus) GetMessage() string {
	return v.Message
}

// UpdateGroupResponse is returned by UpdateGroup on success.
type UpdateGroupResponse struct {
	Groups UpdateGroupGroupsGroupMutation `json:"groups"`
}

// GetGroups returns UpdateGroupResponse.Groups, and is useful for accessing the field via an interface.
func (v *UpdateGroupResponse) GetGroups() UpdateGroupGroupsGroupMutation { return v.Groups }

// UpdatePagePagesPageMutation includes the requested fields of the GraphQL type PageMutation.
type UpdatePagePagesPageMutation struct {
	Update UpdatePagePagesPageMutationUpdatePageResponse `json:"update"`
}

// GetUpdate returns UpdatePagePagesPageMutation.Update, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutation) GetUpdate() UpdatePagePagesPageMutationUpdatePageResponse {
	return v.Update
}

// UpdatePagePagesPageMutationUpdatePageResponse includes the requested fields of the GraphQL type PageResponse.
type UpdatePagePagesPageMutationUpdatePageResponse struct {
	ResponseResult UpdatePagePagesPageMutationUpdatePageResponseResponseResultResponseStatus `json:"responseResult"`
	Page           UpdatePagePagesPageMutationUpdatePageResponsePage                         `json:"page"`
}

// GetResponseResult returns UpdatePagePagesPageMutationUpdatePageResponse.ResponseResult, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponse) GetResponseResult() UpdatePagePagesPageMutationUpdatePageResponseResponseResultResponseStatus {
	return v.ResponseResult
}

// GetPage returns UpdatePagePagesPageMutationUpdatePageResponse.Page, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponse) GetPage() UpdatePagePagesPageMutationUpdatePageResponsePage {
	return v.Page
}

// UpdatePagePagesPageMutationUpdatePageResponsePage includes the requested fields of the GraphQL type Page.
type UpdatePagePagesPageMutationUpdatePageResponsePage struct {
	Id               int                                                            `json:"id"`
	Path             string                                                         `json:"path"`
	Hash             string                                                         `json:"hash"`
	Title            string                                                         `json:"title"`
	Description      string                                                         `json:"description"`
	IsPrivate        bool                                                           `json:"isPrivate"`
	IsPublished      bool                                                           `json:"isPublished"`
	PrivateNS        string                                                         `json:"privateNS"`
	PublishStartDate string                                                         `json:"publishStartDate"`
	PublishEndDate   string                                                         `json:"publishEndDate"`
	Tags             []UpdatePagePagesPageMutationUpdatePageResponsePageTagsPageTag `json:"tags"`
	Content          string                                                         `json:"content"`
	Render           string                                                         `json:"render"`
	ContentType      string                                                         `json:"contentType"`
	CreatedAt        string                                                         `json:"createdAt"`
	UpdatedAt        string                                                         `json:"updatedAt"`
	ScriptCss        string                                                         `json:"scriptCss"`
	ScriptJs         string                                                         `json:"scriptJs"`
	AuthorId         int                                                            `json:"authorId"`
	AuthorName       string                                                         `json:"authorName"`
	AuthorEmail      string                                                         `json:"authorEmail"`
	CreatorId        int                                                            `json:"creatorId"`
	CreatorName      string                                                         `json:"creatorName"`
	CreatorEmail     string                                                         `json:"creatorEmail"`
}

// GetId returns UpdatePagePagesPageMutationUpdatePageResponsePage.Id, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePage) GetId() int { return v.Id }

// GetPath returns UpdatePagePagesPageMutationUpdatePageResponsePage.Path, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePage) GetPath() string { return v.Path }

// GetHash returns UpdatePagePagesPageMutationUpdatePageResponsePage.Hash, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePage) GetHash() string { return v.Hash }

// GetTitle returns UpdatePagePagesPageMutationUpdatePageResponsePage.Title, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePage) GetTitle() string { return v.Title }

// GetDescription returns UpdatePagePagesPageMutationUpdatePageResponsePage.Description, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePage) GetDescription() string {
	return v.Description
}

// GetIsPrivate returns UpdatePagePagesPageMutationUpdatePageResponsePage.IsPrivate, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePage) GetIsPrivate() bool { return v.IsPrivate }

// GetIsPublished returns UpdatePagePagesPageMutationUpdatePageResponsePage.IsPublished, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePage) GetIsPublished() bool {
	return v.IsPublished
}

// GetPrivateNS returns UpdatePagePagesPageMutationUpdatePageResponsePage.PrivateNS, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePage) GetPrivateNS() string { return v.PrivateNS }

// GetPublishStartDate returns UpdatePagePagesPageMutationUpdatePageResponsePage.PublishStartDate, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePage) GetPublishStartDate() string {
	return v.PublishStartDate
}

// GetPublishEndDate returns UpdatePagePagesPageMutationUpdatePageResponsePage.PublishEndDate, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePage) GetPublishEndDate() string {
	return v.PublishEndDate
}

// GetTags returns UpdatePagePagesPageMutationUpdatePageResponsePage.Tags, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePage) GetTags() []UpdatePagePagesPageMutationUpdatePageResponsePageTagsPageTag {
	return v.Tags
}

// GetContent returns UpdatePagePagesPageMutationUpdatePageResponsePage.Content, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePage) GetContent() string { return v.Content }

// GetRender returns UpdatePagePagesPageMutationUpdatePageResponsePage.Render, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePage) GetRender() string { return v.Render }

// GetContentType returns UpdatePagePagesPageMutationUpdatePageResponsePage.ContentType, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePage) GetContentType() string {
	return v.ContentType
}

// GetCreatedAt returns UpdatePagePagesPageMutationUpdatePageResponsePage.CreatedAt, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePage) GetCreatedAt() string { return v.CreatedAt }

// GetUpdatedAt returns UpdatePagePagesPageMutationUpdatePageResponsePage.UpdatedAt, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePage) GetUpdatedAt() string { return v.UpdatedAt }

// GetScriptCss returns UpdatePagePagesPageMutationUpdatePageResponsePage.ScriptCss, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePage) GetScriptCss() string { return v.ScriptCss }

// GetScriptJs returns UpdatePagePagesPageMutationUpdatePageResponsePage.ScriptJs, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePage) GetScriptJs() string { return v.ScriptJs }

// GetAuthorId returns UpdatePagePagesPageMutationUpdatePageResponsePage.AuthorId, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePage) GetAuthorId() int { return v.AuthorId }

// GetAuthorName returns UpdatePagePagesPageMutationUpdatePageResponsePage.AuthorName, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePage) GetAuthorName() string {
	return v.AuthorName
}

// GetAuthorEmail returns UpdatePagePagesPageMutationUpdatePageResponsePage.AuthorEmail, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePage) GetAuthorEmail() string {
	return v.AuthorEmail
}

// GetCreatorId returns UpdatePagePagesPageMutationUpdatePageResponsePage.CreatorId, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePage) GetCreatorId() int { return v.CreatorId }

// GetCreatorName returns UpdatePagePagesPageMutationUpdatePageResponsePage.CreatorName, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePage) GetCreatorName() string {
	return v.CreatorName
}

// GetCreatorEmail returns UpdatePagePagesPageMutationUpdatePageResponsePage.CreatorEmail, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePage) GetCreatorEmail() string {
	return v.CreatorEmail
}

// UpdatePagePagesPageMutationUpdatePageResponsePageTagsPageTag includes the requested fields of the GraphQL type PageTag.
type UpdatePagePagesPageMutationUpdatePageResponsePageTagsPageTag struct {
	Id        int    `json:"id"`
	Tag       string `json:"tag"`
	Title     string `json:"title"`
	CreatedAt string `json:"createdAt"`
	UpdatedAt string `json:"updatedAt"`
}

// GetId returns UpdatePagePagesPageMutationUpdatePageResponsePageTagsPageTag.Id, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePageTagsPageTag) GetId() int { return v.Id }

// GetTag returns UpdatePagePagesPageMutationUpdatePageResponsePageTagsPageTag.Tag, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePageTagsPageTag) GetTag() string { return v.Tag }

// GetTitle returns UpdatePagePagesPageMutationUpdatePageResponsePageTagsPageTag.Title, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePageTagsPageTag) GetTitle() string {
	return v.Title
}

// GetCreatedAt returns UpdatePagePagesPageMutationUpdatePageResponsePageTagsPageTag.CreatedAt, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePageTagsPageTag) GetCreatedAt() string {
	return v.CreatedAt
}

// GetUpdatedAt returns UpdatePagePagesPageMutationUpdatePageResponsePageTagsPageTag.UpdatedAt, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponsePageTagsPageTag) GetUpdatedAt() string {
	return v.UpdatedAt
}

// UpdatePagePagesPageMutationUpdatePageResponseResponseResultResponseStatus includes the requested fields of the GraphQL type ResponseStatus.
type UpdatePagePagesPageMutationUpdatePageResponseResponseResultResponseStatus struct {
	Succeeded bool   `json:"succeeded"`
	ErrorCode int    `json:"errorCode"`
	Slug      string `json:"slug"`
	Message   string `json:"message"`
}

// GetSucceeded returns UpdatePagePagesPageMutationUpdatePageResponseResponseResultResponseStatus.Succeeded, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponseResponseResultResponseStatus) GetSucceeded() bool {
	return v.Succeeded
}

// GetErrorCode returns UpdatePagePagesPageMutationUpdatePageResponseResponseResultResponseStatus.ErrorCode, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponseResponseResultResponseStatus) GetErrorCode() int {
	return v.ErrorCode
}

// GetSlug returns UpdatePagePagesPageMutationUpdatePageResponseResponseResultResponseStatus.Slug, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponseResponseResultResponseStatus) GetSlug() string {
	return v.Slug
}

// GetMessage returns UpdatePagePagesPageMutationUpdatePageResponseResponseResultResponseStatus.Message, and is useful for accessing the field via an interface.
func (v *UpdatePagePagesPageMutationUpdatePageResponseResponseResultResponseStatus) GetMessage() string {
	return v.Message
}

// UpdatePageResponse is returned by UpdatePage on success.
type UpdatePageResponse struct {
	Pages UpdatePagePagesPageMutation `json:"pages"`
}

// GetPages returns UpdatePageResponse.Pages, and is useful for accessing the field via an interface.
func (v *UpdatePageResponse) GetPages() UpdatePagePagesPageMutation { return v.Pages }

// UpdateSiteConfigResponse is returned by UpdateSiteConfig on success.
type UpdateSiteConfigResponse struct {
	Site UpdateSiteConfigSiteSiteMutation `json:"site"`
}

// GetSite returns UpdateSiteConfigResponse.Site, and is useful for accessing the field via an interface.
func (v *UpdateSiteConfigResponse) GetSite() UpdateSiteConfigSiteSiteMutation { return v.Site }

// UpdateSiteConfigSiteSiteMutation includes the requested fields of the GraphQL type SiteMutation.
type UpdateSiteConfigSiteSiteMutation struct {
	UpdateConfig UpdateSiteConfigSiteSiteMutationUpdateConfigDefaultResponse `json:"updateConfig"`
}

// GetUpdateConfig returns UpdateSiteConfigSiteSiteMutation.UpdateConfig, and is useful for accessing the field via an interface.
func (v *UpdateSiteConfigSiteSiteMutation) GetUpdateConfig() UpdateSiteConfigSiteSiteMutationUpdateConfigDefaultResponse {
	return v.UpdateConfig
}

// UpdateSiteConfigSiteSiteMutationUpdateConfigDefaultResponse includes the requested fields of the GraphQL type DefaultResponse.
type UpdateSiteConfigSiteSiteMutationUpdateConfigDefaultResponse struct {
	ResponseResult UpdateSiteConfigSiteSiteMutationUpdateConfigDefaultResponseResponseResultResponseStatus `json:"responseResult"`
}

// GetResponseResult returns UpdateSiteConfigSiteSiteMutationUpdateConfigDefaultResponse.ResponseResult, and is useful for accessing the field via an interface.
func (v *UpdateSiteConfigSiteSiteMutationUpdateConfigDefaultResponse) GetResponseResult() UpdateSiteConfigSiteSiteMutationUpdateConfigDefaultResponseResponseResultResponseStatus {
	return v.ResponseResult
}

// UpdateSiteConfigSiteSiteMutationUpdateConfigDefaultResponseResponseResultResponseStatus includes the requested fields of the GraphQL type ResponseStatus.
type UpdateSiteConfigSiteSiteMutationUpdateConfigDefaultResponseResponseResultResponseStatus struct {
	Succeeded bool   `json:"succeeded"`
	ErrorCode int    `json:"errorCode"`
	Slug      string `json:"slug"`
	Message   string `json:"message"`
}

// GetSucceeded returns UpdateSiteConfigSiteSiteMutationUpdateConfigDefaultResponseResponseResultResponseStatus.Succeeded, and is useful for accessing the field via an interface.
func (v *UpdateSiteConfigSiteSiteMutationUpdateConfigDefaultResponseResponseResultResponseStatus) GetSucceeded() bool {
	return v.Succeeded
}

// GetErrorCode returns UpdateSiteConfigSiteSiteMutationUpdateConfigDefaultResponseResponseResultResponseStatus.ErrorCode, and is useful for accessing the field via an interface.
func (v *UpdateSiteConfigSiteSiteMutationUpdateConfigDefaultResponseResponseResultResponseStatus) GetErrorCode() int {
	return v.ErrorCode
}

// GetSlug returns UpdateSiteConfigSiteSiteMutationUpdateConfigDefaultResponseResponseResultResponseStatus.Slug, and is useful for accessing the field via an interface.
func (v *UpdateSiteConfigSiteSiteMutationUpdateConfigDefaultResponseResponseResultResponseStatus) GetSlug() string {
	return v.Slug
}

// GetMessage returns UpdateSiteConfigSiteSiteMutationUpdateConfigDefaultResponseResponseResultResponseStatus.Message, and is useful for accessing the field via an interface.
func (v *UpdateSiteConfigSiteSiteMutationUpdateConfigDefaultResponseResponseResultResponseStatus) GetMessage() string {
	return v.Message
}

// __CreateApiKeyInput is used internally by genqlient
type __CreateApiKeyInput struct {
	Name       string `json:"name"`
	Expiration string `json:"expiration"`
	FullAccess bool   `json:"fullAccess"`
	Group      int    `json:"group"`
}

// GetName returns __CreateApiKeyInput.Name, and is useful for accessing the field via an interface.
func (v *__CreateApiKeyInput) GetName() string { return v.Name }

// GetExpiration returns __CreateApiKeyInput.Expiration, and is useful for accessing the field via an interface.
func (v *__CreateApiKeyInput) GetExpiration() string { return v.Expiration }

// GetFullAccess returns __CreateApiKeyInput.FullAccess, and is useful for accessing the field via an interface.
func (v *__CreateApiKeyInput) GetFullAccess() bool { return v.FullAccess }

// GetGroup returns __CreateApiKeyInput.Group, and is useful for accessing the field via an interface.
func (v *__CreateApiKeyInput) GetGroup() int { return v.Group }

// __CreateGroupInput is used internally by genqlient
type __CreateGroupInput struct {
	Name string `json:"name"`
}

// GetName returns __CreateGroupInput.Name, and is useful for accessing the field via an interface.
func (v *__CreateGroupInput) GetName() string { return v.Name }

// __CreatePageInput is used internally by genqlient
type __CreatePageInput struct {
	Content          string   `json:"content"`
	Description      string   `json:"description"`
	Editor           string   `json:"editor"`
	IsPublished      bool     `json:"isPublished"`
	IsPrivate        bool     `json:"isPrivate"`
	Locale           string   `json:"locale"`
	Path             string   `json:"path"`
	PublishEndDate   string   `json:"publishEndDate"`
	PublishStartDate string   `json:"publishStartDate"`
	ScriptCss        string   `json:"scriptCss"`
	ScriptJs         string   `json:"scriptJs"`
	Tags             []string `json:"tags"`
	Title            string   `json:"title"`
}

// GetContent returns __CreatePageInput.Content, and is useful for accessing the field via an interface.
func (v *__CreatePageInput) GetContent() string { return v.Content }

// GetDescription returns __CreatePageInput.Description, and is useful for accessing the field via an interface.
func (v *__CreatePageInput) GetDescription() string { return v.Description }

// GetEditor returns __CreatePageInput.Editor, and is useful for accessing the field via an interface.
func (v *__CreatePageInput) GetEditor() string { return v.Editor }

// GetIsPublished returns __CreatePageInput.IsPublished, and is useful for accessing the field via an interface.
func (v *__CreatePageInput) GetIsPublished() bool { return v.IsPublished }

// GetIsPrivate returns __CreatePageInput.IsPrivate, and is useful for accessing the field via an interface.
func (v *__CreatePageInput) GetIsPrivate() bool { return v.IsPrivate }

// GetLocale returns __CreatePageInput.Locale, and is useful for accessing the field via an interface.
func (v *__CreatePageInput) GetLocale() string { return v.Locale }

// GetPath returns __CreatePageInput.Path, and is useful for accessing the field via an interface.
func (v *__CreatePageInput) GetPath() string { return v.Path }

// GetPublishEndDate returns __CreatePageInput.PublishEndDate, and is useful for accessing the field via an interface.
func (v *__CreatePageInput) GetPublishEndDate() string { return v.PublishEndDate }

// GetPublishStartDate returns __CreatePageInput.PublishStartDate, and is useful for accessing the field via an interface.
func (v *__CreatePageInput) GetPublishStartDate() string { return v.PublishStartDate }

// GetScriptCss returns __CreatePageInput.ScriptCss, and is useful for accessing the field via an interface.
func (v *__CreatePageInput) GetScriptCss() string { return v.ScriptCss }

// GetScriptJs returns __CreatePageInput.ScriptJs, and is useful for accessing the field via an interface.
func (v *__CreatePageInput) GetScriptJs() string { return v.ScriptJs }

// GetTags returns __CreatePageInput.Tags, and is useful for accessing the field via an interface.
func (v *__CreatePageInput) GetTags() []string { return v.Tags }

// GetTitle returns __CreatePageInput.Title, and is useful for accessing the field via an interface.
func (v *__CreatePageInput) GetTitle() string { return v.Title }

// __DeleteGroupInput is used internally by genqlient
type __DeleteGroupInput struct {
	Id int `json:"id"`
}

// GetId returns __DeleteGroupInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteGroupInput) GetId() int { return v.Id }

// __DeletePageInput is used internally by genqlient
type __DeletePageInput struct {
	Id int `json:"id"`
}

// GetId returns __DeletePageInput.Id, and is useful for accessing the field via an interface.
func (v *__DeletePageInput) GetId() int { return v.Id }

// __DownloadLocaleInput is used internally by genqlient
type __DownloadLocaleInput struct {
	Locale string `json:"locale"`
}

// GetLocale returns __DownloadLocaleInput.Locale, and is useful for accessing the field via an interface.
func (v *__DownloadLocaleInput) GetLocale() string { return v.Locale }

// __GetAuthStrategiesInput is used internally by genqlient
type __GetAuthStrategiesInput struct {
	EnabledOnly bool `json:"enabledOnly"`
}

// GetEnabledOnly returns __GetAuthStrategiesInput.EnabledOnly, and is useful for accessing the field via an interface.
func (v *__GetAuthStrategiesInput) GetEnabledOnly() bool { return v.EnabledOnly }

// __GetGroupInput is used internally by genqlient
type __GetGroupInput struct {
	Id int `json:"id"`
}

// GetId returns __GetGroupInput.Id, and is useful for accessing the field via an interface.
func (v *__GetGroupInput) GetId() int { return v.Id }

// __GetGroupsInput is used internally by genqlient
type __GetGroupsInput struct {
	Filter  string `json:"filter"`
	OrderBy string `json:"orderBy"`
}

// GetFilter returns __GetGroupsInput.Filter, and is useful for accessing the field via an interface.
func (v *__GetGroupsInput) GetFilter() string { return v.Filter }

// GetOrderBy returns __GetGroupsInput.OrderBy, and is useful for accessing the field via an interface.
func (v *__GetGroupsInput) GetOrderBy() string { return v.OrderBy }

// __GetPageByPathInput is used internally by genqlient
type __GetPageByPathInput struct {
	Path   string `json:"path"`
	Locale string `json:"locale"`
}

// GetPath returns __GetPageByPathInput.Path, and is useful for accessing the field via an interface.
func (v *__GetPageByPathInput) GetPath() string { return v.Path }

// GetLocale returns __GetPageByPathInput.Locale, and is useful for accessing the field via an interface.
func (v *__GetPageByPathInput) GetLocale() string { return v.Locale }

// __GetPageInput is used internally by genqlient
type __GetPageInput struct {
	Id int `json:"id"`
}

// GetId returns __GetPageInput.Id, and is useful for accessing the field via an interface.
func (v *__GetPageInput) GetId() int { return v.Id }

// __GetRenderersInput is used internally by genqlient
type __GetRenderersInput struct {
	Filter  string `json:"filter,omitempty"`
	OrderBy string `json:"orderBy,omitempty"`
}

// GetFilter returns __GetRenderersInput.Filter, and is useful for accessing the field via an interface.
func (v *__GetRenderersInput) GetFilter() string { return v.Filter }

// GetOrderBy returns __GetRenderersInput.OrderBy, and is useful for accessing the field via an interface.
func (v *__GetRenderersInput) GetOrderBy() string { return v.OrderBy }

// __GetSearchEnginesInput is used internally by genqlient
type __GetSearchEnginesInput struct {
	Filter  string `json:"filter,omitempty"`
	OrderBy string `json:"orderBy,omitempty"`
}

// GetFilter returns __GetSearchEnginesInput.Filter, and is useful for accessing the field via an interface.
func (v *__GetSearchEnginesInput) GetFilter() string { return v.Filter }

// GetOrderBy returns __GetSearchEnginesInput.OrderBy, and is useful for accessing the field via an interface.
func (v *__GetSearchEnginesInput) GetOrderBy() string { return v.OrderBy }

// __GroupAssignUserInput is used internally by genqlient
type __GroupAssignUserInput struct {
	GroupId int `json:"groupId"`
	UserId  int `json:"userId"`
}

// GetGroupId returns __GroupAssignUserInput.GroupId, and is useful for accessing the field via an interface.
func (v *__GroupAssignUserInput) GetGroupId() int { return v.GroupId }

// GetUserId returns __GroupAssignUserInput.UserId, and is useful for accessing the field via an interface.
func (v *__GroupAssignUserInput) GetUserId() int { return v.UserId }

// __GroupUnassignUserInput is used internally by genqlient
type __GroupUnassignUserInput struct {
	GroupId int `json:"groupId"`
	UserId  int `json:"userId"`
}

// GetGroupId returns __GroupUnassignUserInput.GroupId, and is useful for accessing the field via an interface.
func (v *__GroupUnassignUserInput) GetGroupId() int { return v.GroupId }

// GetUserId returns __GroupUnassignUserInput.UserId, and is useful for accessing the field via an interface.
func (v *__GroupUnassignUserInput) GetUserId() int { return v.UserId }

// __ListGroupsInput is used internally by genqlient
type __ListGroupsInput struct {
	Filter  string `json:"filter"`
	OrderBy string `json:"orderBy"`
}

// GetFilter returns __ListGroupsInput.Filter, and is useful for accessing the field via an interface.
func (v *__ListGroupsInput) GetFilter() string { return v.Filter }

// GetOrderBy returns __ListGroupsInput.OrderBy, and is useful for accessing the field via an interface.
func (v *__ListGroupsInput) GetOrderBy() string { return v.OrderBy }

// __LoginInput is used internally by genqlient
type __LoginInput struct {
	Username string `json:"username"`
	Password string `json:"password"`
	Strategy string `json:"strategy"`
}

// GetUsername returns __LoginInput.Username, and is useful for accessing the field via an interface.
func (v *__LoginInput) GetUsername() string { return v.Username }

// GetPassword returns __LoginInput.Password, and is useful for accessing the field via an interface.
func (v *__LoginInput) GetPassword() string { return v.Password }

// GetStrategy returns __LoginInput.Strategy, and is useful for accessing the field via an interface.
func (v *__LoginInput) GetStrategy() string { return v.Strategy }

// __RevokeApiKeyInput is used internally by genqlient
type __RevokeApiKeyInput struct {
	Id int `json:"id"`
}

// GetId returns __RevokeApiKeyInput.Id, and is useful for accessing the field via an interface.
func (v *__RevokeApiKeyInput) GetId() int { return v.Id }

// __SetApiStateInput is used internally by genqlient
type __SetApiStateInput struct {
	Enabled bool `json:"enabled"`
}

// GetEnabled returns __SetApiStateInput.Enabled, and is useful for accessing the field via an interface.
func (v *__SetApiStateInput) GetEnabled() bool { return v.Enabled }

// __SetAuthStrategiesInput is used internally by genqlient
type __SetAuthStrategiesInput struct {
	Strategies []AuthenticationStrategyInput `json:"strategies"`
}

// GetStrategies returns __SetAuthStrategiesInput.Strategies, and is useful for accessing the field via an interface.
func (v *__SetAuthStrategiesInput) GetStrategies() []AuthenticationStrategyInput { return v.Strategies }

// __SetLocalizationInput is used internally by genqlient
type __SetLocalizationInput struct {
	Locale      string   `json:"locale"`
	AutoUpdate  bool     `json:"autoUpdate"`
	Namespacing bool     `json:"namespacing"`
	Namespaces  []string `json:"namespaces"`
}

// GetLocale returns __SetLocalizationInput.Locale, and is useful for accessing the field via an interface.
func (v *__SetLocalizationInput) GetLocale() string { return v.Locale }

// GetAutoUpdate returns __SetLocalizationInput.AutoUpdate, and is useful for accessing the field via an interface.
func (v *__SetLocalizationInput) GetAutoUpdate() bool { return v.AutoUpdate }

// GetNamespacing returns __SetLocalizationInput.Namespacing, and is useful for accessing the field via an interface.
func (v *__SetLocalizationInput) GetNamespacing() bool { return v.Namespacing }

// GetNamespaces returns __SetLocalizationInput.Namespaces, and is useful for accessing the field via an interface.
func (v *__SetLocalizationInput) GetNamespaces() []string { return v.Namespaces }

// __SetRenderersInput is used internally by genqlient
type __SetRenderersInput struct {
	Renderers []RendererInput `json:"renderers"`
}

// GetRenderers returns __SetRenderersInput.Renderers, and is useful for accessing the field via an interface.
func (v *__SetRenderersInput) GetRenderers() []RendererInput { return v.Renderers }

// __SetSearchEnginesInput is used internally by genqlient
type __SetSearchEnginesInput struct {
	Engines []SearchEngineInput `json:"engines"`
}

// GetEngines returns __SetSearchEnginesInput.Engines, and is useful for accessing the field via an interface.
func (v *__SetSearchEnginesInput) GetEngines() []SearchEngineInput { return v.Engines }

// __SetThemeConfigInput is used internally by genqlient
type __SetThemeConfigInput struct {
	Theme       string `json:"theme"`
	Iconset     string `json:"iconset"`
	DarkMode    bool   `json:"darkMode"`
	TocPosition string `json:"tocPosition"`
	InjectCSS   string `json:"injectCSS"`
	InjectHead  string `json:"injectHead"`
	InjectBody  string `json:"injectBody"`
}

// GetTheme returns __SetThemeConfigInput.Theme, and is useful for accessing the field via an interface.
func (v *__SetThemeConfigInput) GetTheme() string { return v.Theme }

// GetIconset returns __SetThemeConfigInput.Iconset, and is useful for accessing the field via an interface.
func (v *__SetThemeConfigInput) GetIconset() string { return v.Iconset }

// GetDarkMode returns __SetThemeConfigInput.DarkMode, and is useful for accessing the field via an interface.
func (v *__SetThemeConfigInput) GetDarkMode() bool { return v.DarkMode }

// GetTocPosition returns __SetThemeConfigInput.TocPosition, and is useful for accessing the field via an interface.
func (v *__SetThemeConfigInput) GetTocPosition() string { return v.TocPosition }

// GetInjectCSS returns __SetThemeConfigInput.InjectCSS, and is useful for accessing the field via an interface.
func (v *__SetThemeConfigInput) GetInjectCSS() string { return v.InjectCSS }

// GetInjectHead returns __SetThemeConfigInput.InjectHead, and is useful for accessing the field via an interface.
func (v *__SetThemeConfigInput) GetInjectHead() string { return v.InjectHead }

// GetInjectBody returns __SetThemeConfigInput.InjectBody, and is useful for accessing the field via an interface.
func (v *__SetThemeConfigInput) GetInjectBody() string { return v.InjectBody }

// __UpdateGroupInput is used internally by genqlient
type __UpdateGroupInput struct {
	Id              int             `json:"id"`
	Name            string          `json:"name"`
	RedirectOnLogin string          `json:"redirectOnLogin"`
	Permissions     []string        `json:"permissions"`
	PageRules       []PageRuleInput `json:"pageRules"`
}

// GetId returns __UpdateGroupInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateGroupInput) GetId() int { return v.Id }

// GetName returns __UpdateGroupInput.Name, and is useful for accessing the field via an interface.
func (v *__UpdateGroupInput) GetName() string { return v.Name }

// GetRedirectOnLogin returns __UpdateGroupInput.RedirectOnLogin, and is useful for accessing the field via an interface.
func (v *__UpdateGroupInput) GetRedirectOnLogin() string { return v.RedirectOnLogin }

// GetPermissions returns __UpdateGroupInput.Permissions, and is useful for accessing the field via an interface.
func (v *__UpdateGroupInput) GetPermissions() []string { return v.Permissions }

// GetPageRules returns __UpdateGroupInput.PageRules, and is useful for accessing the field via an interface.
func (v *__UpdateGroupInput) GetPageRules() []PageRuleInput { return v.PageRules }

// __UpdatePageInput is used internally by genqlient
type __UpdatePageInput struct {
	Id               int      `json:"id"`
	Content          string   `json:"content"`
	Description      string   `json:"description"`
	Editor           string   `json:"editor"`
	IsPublished      bool     `json:"isPublished"`
	IsPrivate        bool     `json:"isPrivate"`
	Locale           string   `json:"locale"`
	Path             string   `json:"path"`
	PublishEndDate   string   `json:"publishEndDate"`
	PublishStartDate string   `json:"publishStartDate"`
	ScriptCss        string   `json:"scriptCss"`
	ScriptJs         string   `json:"scriptJs"`
	Tags             []string `json:"tags"`
	Title            string   `json:"title"`
}

// GetId returns __UpdatePageInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdatePageInput) GetId() int { return v.Id }

// GetContent returns __UpdatePageInput.Content, and is useful for accessing the field via an interface.
func (v *__UpdatePageInput) GetContent() string { return v.Content }

// GetDescription returns __UpdatePageInput.Description, and is useful for accessing the field via an interface.
func (v *__UpdatePageInput) GetDescription() string { return v.Description }

// GetEditor returns __UpdatePageInput.Editor, and is useful for accessing the field via an interface.
func (v *__UpdatePageInput) GetEditor() string { return v.Editor }

// GetIsPublished returns __UpdatePageInput.IsPublished, and is useful for accessing the field via an interface.
func (v *__UpdatePageInput) GetIsPublished() bool { return v.IsPublished }

// GetIsPrivate returns __UpdatePageInput.IsPrivate, and is useful for accessing the field via an interface.
func (v *__UpdatePageInput) GetIsPrivate() bool { return v.IsPrivate }

// GetLocale returns __UpdatePageInput.Locale, and is useful for accessing the field via an interface.
func (v *__UpdatePageInput) GetLocale() string { return v.Locale }

// GetPath returns __UpdatePageInput.Path, and is useful for accessing the field via an interface.
func (v *__UpdatePageInput) GetPath() string { return v.Path }

// GetPublishEndDate returns __UpdatePageInput.PublishEndDate, and is useful for accessing the field via an interface.
func (v *__UpdatePageInput) GetPublishEndDate() string { return v.PublishEndDate }

// GetPublishStartDate returns __UpdatePageInput.PublishStartDate, and is useful for accessing the field via an interface.
func (v *__UpdatePageInput) GetPublishStartDate() string { return v.PublishStartDate }

// GetScriptCss returns __UpdatePageInput.ScriptCss, and is useful for accessing the field via an interface.
func (v *__UpdatePageInput) GetScriptCss() string { return v.ScriptCss }

// GetScriptJs returns __UpdatePageInput.ScriptJs, and is useful for accessing the field via an interface.
func (v *__UpdatePageInput) GetScriptJs() string { return v.ScriptJs }

// GetTags returns __UpdatePageInput.Tags, and is useful for accessing the field via an interface.
func (v *__UpdatePageInput) GetTags() []string { return v.Tags }

// GetTitle returns __UpdatePageInput.Title, and is useful for accessing the field via an interface.
func (v *__UpdatePageInput) GetTitle() string { return v.Title }

// __UpdateSiteConfigInput is used internally by genqlient
type __UpdateSiteConfigInput struct {
	Host                   string   `json:"host"`
	Title                  string   `json:"title"`
	Description            string   `json:"description"`
	Robots                 []string `json:"robots"`
	AnalyticsService       string   `json:"analyticsService"`
	AnalyticsId            string   `json:"analyticsId"`
	Company                string   `json:"company"`
	ContentLicense         string   `json:"contentLicense"`
	FooterOverride         string   `json:"footerOverride"`
	LogoUrl                string   `json:"logoUrl"`
	PageExtensions         string   `json:"pageExtensions"`
	AuthAutoLogin          bool     `json:"authAutoLogin"`
	AuthEnforce2FA         bool     `json:"authEnforce2FA"`
	AuthHideLocal          bool     `json:"authHideLocal"`
	AuthLoginBgUrl         string   `json:"authLoginBgUrl"`
	AuthJwtAudience        string   `json:"authJwtAudience"`
	AuthJwtExpiration      string   `json:"authJwtExpiration"`
	AuthJwtRenewablePeriod string   `json:"authJwtRenewablePeriod"`
	EditFab                bool     `json:"editFab"`
	EditMenuBar            bool     `json:"editMenuBar"`
	EditMenuBtn            bool     `json:"editMenuBtn"`
	EditMenuExternalBtn    bool     `json:"editMenuExternalBtn"`
	EditMenuExternalName   string   `json:"editMenuExternalName"`
	EditMenuExternalIcon   string   `json:"editMenuExternalIcon"`
	EditMenuExternalUrl    string   `json:"editMenuExternalUrl"`
	FeaturePageRatings     bool     `json:"featurePageRatings"`
	FeaturePageComments    bool     `json:"featurePageComments"`
	FeaturePersonalWikis   bool     `json:"featurePersonalWikis"`
	SecurityOpenRedirect   bool     `json:"securityOpenRedirect"`
	SecurityIframe         bool     `json:"securityIframe"`
	SecurityReferrerPolicy bool     `json:"securityReferrerPolicy"`
	SecurityTrustProxy     bool     `json:"securityTrustProxy"`
	SecuritySRI            bool     `json:"securitySRI"`
	SecurityHSTS           bool     `json:"securityHSTS"`
	SecurityHSTSDuration   int      `json:"securityHSTSDuration"`
	SecurityCSP            bool     `json:"securityCSP"`
	SecurityCSPDirectives  string   `json:"securityCSPDirectives"`
	UploadMaxFileSize      int      `json:"uploadMaxFileSize"`
	UploadMaxFiles         int      `json:"uploadMaxFiles"`
	UploadScanSVG          bool     `json:"uploadScanSVG"`
	UploadForceDownload    bool     `json:"uploadForceDownload"`
}

// GetHost returns __UpdateSiteConfigInput.Host, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetHost() string { return v.Host }

// GetTitle returns __UpdateSiteConfigInput.Title, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetTitle() string { return v.Title }

// GetDescription returns __UpdateSiteConfigInput.Description, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetDescription() string { return v.Description }

// GetRobots returns __UpdateSiteConfigInput.Robots, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetRobots() []string { return v.Robots }

// GetAnalyticsService returns __UpdateSiteConfigInput.AnalyticsService, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetAnalyticsService() string { return v.AnalyticsService }

// GetAnalyticsId returns __UpdateSiteConfigInput.AnalyticsId, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetAnalyticsId() string { return v.AnalyticsId }

// GetCompany returns __UpdateSiteConfigInput.Company, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetCompany() string { return v.Company }

// GetContentLicense returns __UpdateSiteConfigInput.ContentLicense, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetContentLicense() string { return v.ContentLicense }

// GetFooterOverride returns __UpdateSiteConfigInput.FooterOverride, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetFooterOverride() string { return v.FooterOverride }

// GetLogoUrl returns __UpdateSiteConfigInput.LogoUrl, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetLogoUrl() string { return v.LogoUrl }

// GetPageExtensions returns __UpdateSiteConfigInput.PageExtensions, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetPageExtensions() string { return v.PageExtensions }

// GetAuthAutoLogin returns __UpdateSiteConfigInput.AuthAutoLogin, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetAuthAutoLogin() bool { return v.AuthAutoLogin }

// GetAuthEnforce2FA returns __UpdateSiteConfigInput.AuthEnforce2FA, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetAuthEnforce2FA() bool { return v.AuthEnforce2FA }

// GetAuthHideLocal returns __UpdateSiteConfigInput.AuthHideLocal, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetAuthHideLocal() bool { return v.AuthHideLocal }

// GetAuthLoginBgUrl returns __UpdateSiteConfigInput.AuthLoginBgUrl, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetAuthLoginBgUrl() string { return v.AuthLoginBgUrl }

// GetAuthJwtAudience returns __UpdateSiteConfigInput.AuthJwtAudience, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetAuthJwtAudience() string { return v.AuthJwtAudience }

// GetAuthJwtExpiration returns __UpdateSiteConfigInput.AuthJwtExpiration, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetAuthJwtExpiration() string { return v.AuthJwtExpiration }

// GetAuthJwtRenewablePeriod returns __UpdateSiteConfigInput.AuthJwtRenewablePeriod, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetAuthJwtRenewablePeriod() string { return v.AuthJwtRenewablePeriod }

// GetEditFab returns __UpdateSiteConfigInput.EditFab, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetEditFab() bool { return v.EditFab }

// GetEditMenuBar returns __UpdateSiteConfigInput.EditMenuBar, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetEditMenuBar() bool { return v.EditMenuBar }

// GetEditMenuBtn returns __UpdateSiteConfigInput.EditMenuBtn, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetEditMenuBtn() bool { return v.EditMenuBtn }

// GetEditMenuExternalBtn returns __UpdateSiteConfigInput.EditMenuExternalBtn, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetEditMenuExternalBtn() bool { return v.EditMenuExternalBtn }

// GetEditMenuExternalName returns __UpdateSiteConfigInput.EditMenuExternalName, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetEditMenuExternalName() string { return v.EditMenuExternalName }

// GetEditMenuExternalIcon returns __UpdateSiteConfigInput.EditMenuExternalIcon, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetEditMenuExternalIcon() string { return v.EditMenuExternalIcon }

// GetEditMenuExternalUrl returns __UpdateSiteConfigInput.EditMenuExternalUrl, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetEditMenuExternalUrl() string { return v.EditMenuExternalUrl }

// GetFeaturePageRatings returns __UpdateSiteConfigInput.FeaturePageRatings, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetFeaturePageRatings() bool { return v.FeaturePageRatings }

// GetFeaturePageComments returns __UpdateSiteConfigInput.FeaturePageComments, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetFeaturePageComments() bool { return v.FeaturePageComments }

// GetFeaturePersonalWikis returns __UpdateSiteConfigInput.FeaturePersonalWikis, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetFeaturePersonalWikis() bool { return v.FeaturePersonalWikis }

// GetSecurityOpenRedirect returns __UpdateSiteConfigInput.SecurityOpenRedirect, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetSecurityOpenRedirect() bool { return v.SecurityOpenRedirect }

// GetSecurityIframe returns __UpdateSiteConfigInput.SecurityIframe, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetSecurityIframe() bool { return v.SecurityIframe }

// GetSecurityReferrerPolicy returns __UpdateSiteConfigInput.SecurityReferrerPolicy, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetSecurityReferrerPolicy() bool { return v.SecurityReferrerPolicy }

// GetSecurityTrustProxy returns __UpdateSiteConfigInput.SecurityTrustProxy, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetSecurityTrustProxy() bool { return v.SecurityTrustProxy }

// GetSecuritySRI returns __UpdateSiteConfigInput.SecuritySRI, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetSecuritySRI() bool { return v.SecuritySRI }

// GetSecurityHSTS returns __UpdateSiteConfigInput.SecurityHSTS, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetSecurityHSTS() bool { return v.SecurityHSTS }

// GetSecurityHSTSDuration returns __UpdateSiteConfigInput.SecurityHSTSDuration, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetSecurityHSTSDuration() int { return v.SecurityHSTSDuration }

// GetSecurityCSP returns __UpdateSiteConfigInput.SecurityCSP, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetSecurityCSP() bool { return v.SecurityCSP }

// GetSecurityCSPDirectives returns __UpdateSiteConfigInput.SecurityCSPDirectives, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetSecurityCSPDirectives() string { return v.SecurityCSPDirectives }

// GetUploadMaxFileSize returns __UpdateSiteConfigInput.UploadMaxFileSize, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetUploadMaxFileSize() int { return v.UploadMaxFileSize }

// GetUploadMaxFiles returns __UpdateSiteConfigInput.UploadMaxFiles, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetUploadMaxFiles() int { return v.UploadMaxFiles }

// GetUploadScanSVG returns __UpdateSiteConfigInput.UploadScanSVG, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetUploadScanSVG() bool { return v.UploadScanSVG }

// GetUploadForceDownload returns __UpdateSiteConfigInput.UploadForceDownload, and is useful for accessing the field via an interface.
func (v *__UpdateSiteConfigInput) GetUploadForceDownload() bool { return v.UploadForceDownload }

// The query or mutation executed by CreateApiKey.
const CreateApiKey_Operation = `
mutation CreateApiKey ($name: String!, $expiration: String!, $fullAccess: Boolean!, $group: Int) {
	authentication {
		createApiKey(name: $name, expiration: $expiration, fullAccess: $fullAccess, group: $group) {
			responseResult {
				succeeded
				errorCode
				slug
				message
			}
			key
		}
	}
}
`

func CreateApiKey(
	ctx context.Context,
	client graphql.Client,
	name string,
	expiration string,
	fullAccess bool,
	group int,
) (*CreateApiKeyResponse, error) {
	req := &graphql.Request{
		OpName: "CreateApiKey",
		Query:  CreateApiKey_Operation,
		Variables: &__CreateApiKeyInput{
			Name:       name,
			Expiration: expiration,
			FullAccess: fullAccess,
			Group:      group,
		},
	}
	var err error

	var data CreateApiKeyResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CreateGroup.
const CreateGroup_Operation = `
mutation CreateGroup ($name: String!) {
	groups {
		create(name: $name) {
			responseResult {
				succeeded
				errorCode
				slug
				message
			}
			group {
				id
				name
				isSystem
				redirectOnLogin
				permissions
				pageRules {
					id
					deny
					match
					roles
					path
					locales
				}
				users {
					id
					name
					email
					providerKey
					isSystem
					isActive
					createdAt
					lastLoginAt
				}
				createdAt
				updatedAt
			}
		}
	}
}
`

func CreateGroup(
	ctx context.Context,
	client graphql.Client,
	name string,
) (*CreateGroupResponse, error) {
	req := &graphql.Request{
		OpName: "CreateGroup",
		Query:  CreateGroup_Operation,
		Variables: &__CreateGroupInput{
			Name: name,
		},
	}
	var err error

	var data CreateGroupResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CreatePage.
const CreatePage_Operation = `
mutation CreatePage ($content: String!, $description: String!, $editor: String!, $isPublished: Boolean!, $isPrivate: Boolean!, $locale: String!, $path: String!, $publishEndDate: Date, $publishStartDate: Date, $scriptCss: String, $scriptJs: String, $tags: [String]!, $title: String!) {
	pages {
		create(content: $content, description: $description, editor: $editor, isPublished: $isPublished, isPrivate: $isPrivate, locale: $locale, path: $path, publishEndDate: $publishEndDate, publishStartDate: $publishStartDate, scriptCss: $scriptCss, scriptJs: $scriptJs, tags: $tags, title: $title) {
			responseResult {
				succeeded
				errorCode
				slug
				message
			}
			page {
				id
				path
				hash
				title
				description
				isPrivate
				isPublished
				privateNS
				publishStartDate
				publishEndDate
				tags {
					id
					tag
					title
					createdAt
					updatedAt
				}
				content
				render
				contentType
				createdAt
				updatedAt
				scriptCss
				scriptJs
				authorId
				authorName
				authorEmail
				creatorId
				creatorName
				creatorEmail
			}
		}
	}
}
`

func CreatePage(
	ctx context.Context,
	client graphql.Client,
	content string,
	description string,
	editor string,
	isPublished bool,
	isPrivate bool,
	locale string,
	path string,
	publishEndDate string,
	publishStartDate string,
	scriptCss string,
	scriptJs string,
	tags []string,
	title string,
) (*CreatePageResponse, error) {
	req := &graphql.Request{
		OpName: "CreatePage",
		Query:  CreatePage_Operation,
		Variables: &__CreatePageInput{
			Content:          content,
			Description:      description,
			Editor:           editor,
			IsPublished:      isPublished,
			IsPrivate:        isPrivate,
			Locale:           locale,
			Path:             path,
			PublishEndDate:   publishEndDate,
			PublishStartDate: publishStartDate,
			ScriptCss:        scriptCss,
			ScriptJs:         scriptJs,
			Tags:             tags,
			Title:            title,
		},
	}
	var err error

	var data CreatePageResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DeleteGroup.
const DeleteGroup_Operation = `
mutation DeleteGroup ($id: Int!) {
	groups {
		delete(id: $id) {
			responseResult {
				succeeded
				errorCode
				slug
				message
			}
		}
	}
}
`

func DeleteGroup(
	ctx context.Context,
	client graphql.Client,
	id int,
) (*DeleteGroupResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteGroup",
		Query:  DeleteGroup_Operation,
		Variables: &__DeleteGroupInput{
			Id: id,
		},
	}
	var err error

	var data DeleteGroupResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DeletePage.
const DeletePage_Operation = `
mutation DeletePage ($id: Int!) {
	pages {
		delete(id: $id) {
			responseResult {
				succeeded
				errorCode
				slug
				message
			}
		}
	}
}
`

func DeletePage(
	ctx context.Context,
	client graphql.Client,
	id int,
) (*DeletePageResponse, error) {
	req := &graphql.Request{
		OpName: "DeletePage",
		Query:  DeletePage_Operation,
		Variables: &__DeletePageInput{
			Id: id,
		},
	}
	var err error

	var data DeletePageResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DownloadLocale.
const DownloadLocale_Operation = `
mutation DownloadLocale ($locale: String!) {
	localization {
		downloadLocale(locale: $locale) {
			responseResult {
				succeeded
				errorCode
				slug
				message
			}
		}
	}
}
`

func DownloadLocale(
	ctx context.Context,
	client graphql.Client,
	locale string,
) (*DownloadLocaleResponse, error) {
	req := &graphql.Request{
		OpName: "DownloadLocale",
		Query:  DownloadLocale_Operation,
		Variables: &__DownloadLocaleInput{
			Locale: locale,
		},
	}
	var err error

	var data DownloadLocaleResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by FlushPageCache.
const FlushPageCache_Operation = `
mutation FlushPageCache {
	pages {
		flushCache {
			responseResult {
				succeeded
				errorCode
				slug
				message
			}
		}
	}
}
`

func FlushPageCache(
	ctx context.Context,
	client graphql.Client,
) (*FlushPageCacheResponse, error) {
	req := &graphql.Request{
		OpName: "FlushPageCache",
		Query:  FlushPageCache_Operation,
	}
	var err error

	var data FlushPageCacheResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetApiKeys.
const GetApiKeys_Operation = `
query GetApiKeys {
	authentication {
		apiKeys {
			id
			name
			keyShort
			expiration
			createdAt
			updatedAt
			isRevoked
		}
	}
}
`

func GetApiKeys(
	ctx context.Context,
	client graphql.Client,
) (*GetApiKeysResponse, error) {
	req := &graphql.Request{
		OpName: "GetApiKeys",
		Query:  GetApiKeys_Operation,
	}
	var err error

	var data GetApiKeysResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetApiState.
const GetApiState_Operation = `
query GetApiState {
	authentication {
		apiState
	}
}
`

func GetApiState(
	ctx context.Context,
	client graphql.Client,
) (*GetApiStateResponse, error) {
	req := &graphql.Request{
		OpName: "GetApiState",
		Query:  GetApiState_Operation,
	}
	var err error

	var data GetApiStateResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetAuthStrategies.
const GetAuthStrategies_Operation = `
query GetAuthStrategies ($enabledOnly: Boolean) {
	authentication {
		activeStrategies(enabledOnly: $enabledOnly) {
			key
			strategy {
				key
				title
				description
				isAvailable
				useForm
				usernameType
				logo
				color
				website
				icon
			}
			displayName
			order
			isEnabled
			config {
				key
				value
			}
			selfRegistration
			domainWhitelist
			autoEnrollGroups
		}
	}
}
`

func GetAuthStrategies(
	ctx context.Context,
	client graphql.Client,
	enabledOnly bool,
) (*GetAuthStrategiesResponse, error) {
	req := &graphql.Request{
		OpName: "GetAuthStrategies",
		Query:  GetAuthStrategies_Operation,
		Variables: &__GetAuthStrategiesInput{
			EnabledOnly: enabledOnly,
		},
	}
	var err error

	var data GetAuthStrategiesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetGroup.
const GetGroup_Operation = `
query GetGroup ($id: Int!) {
	groups {
		single(id: $id) {
			id
			name
			isSystem
			redirectOnLogin
			permissions
			pageRules {
				id
				deny
				match
				roles
				path
				locales
			}
			users {
				id
				name
				email
				providerKey
				isSystem
				isActive
				createdAt
				lastLoginAt
			}
			createdAt
			updatedAt
		}
	}
}
`

func GetGroup(
	ctx context.Context,
	client graphql.Client,
	id int,
) (*GetGroupResponse, error) {
	req := &graphql.Request{
		OpName: "GetGroup",
		Query:  GetGroup_Operation,
		Variables: &__GetGroupInput{
			Id: id,
		},
	}
	var err error

	var data GetGroupResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetGroups.
const GetGroups_Operation = `
query GetGroups ($filter: String, $orderBy: String) {
	groups {
		list(filter: $filter, orderBy: $orderBy) {
			id
			name
			isSystem
			userCount
			createdAt
			updatedAt
		}
	}
}
`

func GetGroups(
	ctx context.Context,
	client graphql.Client,
	filter string,
	orderBy string,
) (*GetGroupsResponse, error) {
	req := &graphql.Request{
		OpName: "GetGroups",
		Query:  GetGroups_Operation,
		Variables: &__GetGroupsInput{
			Filter:  filter,
			OrderBy: orderBy,
		},
	}
	var err error

	var data GetGroupsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetLocales.
const GetLocales_Operation = `
query GetLocales {
	localization {
		locales {
			availability
			code
			createdAt
			installDate
			isInstalled
			isRTL
			name
			nativeName
			updatedAt
		}
	}
}
`

func GetLocales(
	ctx context.Context,
	client graphql.Client,
) (*GetLocalesResponse, error) {
	req := &graphql.Request{
		OpName: "GetLocales",
		Query:  GetLocales_Operation,
	}
	var err error

	var data GetLocalesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetLocalization.
const GetLocalization_Operation = `
query GetLocalization {
	localization {
		config {
			locale
			autoUpdate
			namespacing
			namespaces
		}
	}
}
`

func GetLocalization(
	ctx context.Context,
	client graphql.Client,
) (*GetLocalizationResponse, error) {
	req := &graphql.Request{
		OpName: "GetLocalization",
		Query:  GetLocalization_Operation,
	}
	var err error

	var data GetLocalizationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetPage.
const GetPage_Operation = `
query GetPage ($id: Int!) {
	pages {
		single(id: $id) {
			id
			path
			hash
			title
			description
			isPrivate
			isPublished
			privateNS
			publishStartDate
			publishEndDate
			tags {
				id
				tag
				title
				createdAt
				updatedAt
			}
			content
			render
			contentType
			createdAt
			updatedAt
			editor
			locale
			scriptCss
			scriptJs
			authorId
			authorName
			authorEmail
			creatorId
			creatorName
			creatorEmail
		}
	}
}
`

func GetPage(
	ctx context.Context,
	client graphql.Client,
	id int,
) (*GetPageResponse, error) {
	req := &graphql.Request{
		OpName: "GetPage",
		Query:  GetPage_Operation,
		Variables: &__GetPageInput{
			Id: id,
		},
	}
	var err error

	var data GetPageResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetPageByPath.
const GetPageByPath_Operation = `
query GetPageByPath ($path: String!, $locale: String!) {
	pages {
		singleByPath(path: $path, locale: $locale) {
			id
			path
			hash
			title
			description
			isPrivate
			isPublished
			privateNS
			publishStartDate
			publishEndDate
			tags {
				id
				tag
				title
				createdAt
				updatedAt
			}
			content
			render
			contentType
			createdAt
			updatedAt
			editor
			locale
			scriptCss
			scriptJs
			authorId
			authorName
			authorEmail
			creatorId
			creatorName
			creatorEmail
		}
	}
}
`

func GetPageByPath(
	ctx context.Context,
	client graphql.Client,
	path string,
	locale string,
) (*GetPageByPathResponse, error) {
	req := &graphql.Request{
		OpName: "GetPageByPath",
		Query:  GetPageByPath_Operation,
		Variables: &__GetPageByPathInput{
			Path:   path,
			Locale: locale,
		},
	}
	var err error

	var data GetPageByPathResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetRenderers.
const GetRenderers_Operation = `
query GetRenderers (# @genqlient(omitempty: true)
$filter: String, # @genqlient(omitempty: true)
$orderBy: String) {
	rendering {
		renderers(filter: $filter, orderBy: $orderBy) {
			isEnabled
			key
			title
			description
			icon
			dependsOn
			input
			output
			config {
				key
				value
			}
		}
	}
}
`

func GetRenderers(
	ctx context.Context,
	client graphql.Client,
	filter string,
	orderBy string,
) (*GetRenderersResponse, error) {
	req := &graphql.Request{
		OpName: "GetRenderers",
		Query:  GetRenderers_Operation,
		Variables: &__GetRenderersInput{
			Filter:  filter,
			OrderBy: orderBy,
		},
	}
	var err error

	var data GetRenderersResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetSearchEngines.
const GetSearchEngines_Operation = `
query GetSearchEngines (# @genqlient(omitempty: true)
$filter: String, # @genqlient(omitempty: true)
$orderBy: String) {
	search {
		searchEngines(filter: $filter, orderBy: $orderBy) {
			isEnabled
			key
			title
			description
			logo
			website
			isAvailable
			config {
				key
				value
			}
		}
	}
}
`

func GetSearchEngines(
	ctx context.Context,
	client graphql.Client,
	filter string,
	orderBy string,
) (*GetSearchEnginesResponse, error) {
	req := &graphql.Request{
		OpName: "GetSearchEngines",
		Query:  GetSearchEngines_Operation,
		Variables: &__GetSearchEnginesInput{
			Filter:  filter,
			OrderBy: orderBy,
		},
	}
	var err error

	var data GetSearchEnginesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetSiteConfig.
const GetSiteConfig_Operation = `
query GetSiteConfig {
	site {
		config {
			host
			title
			description
			robots
			analyticsService
			analyticsId
			company
			contentLicense
			footerOverride
			logoUrl
			pageExtensions
			authAutoLogin
			authEnforce2FA
			authHideLocal
			authLoginBgUrl
			authJwtAudience
			authJwtExpiration
			authJwtRenewablePeriod
			editFab
			editMenuBar
			editMenuBtn
			editMenuExternalBtn
			editMenuExternalName
			editMenuExternalIcon
			editMenuExternalUrl
			featurePageRatings
			featurePageComments
			featurePersonalWikis
			securityOpenRedirect
			securityIframe
			securityReferrerPolicy
			securityTrustProxy
			securitySRI
			securityHSTS
			securityHSTSDuration
			securityCSP
			securityCSPDirectives
			uploadMaxFileSize
			uploadMaxFiles
			uploadScanSVG
			uploadForceDownload
		}
	}
}
`

func GetSiteConfig(
	ctx context.Context,
	client graphql.Client,
) (*GetSiteConfigResponse, error) {
	req := &graphql.Request{
		OpName: "GetSiteConfig",
		Query:  GetSiteConfig_Operation,
	}
	var err error

	var data GetSiteConfigResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetThemeConfig.
const GetThemeConfig_Operation = `
query GetThemeConfig {
	theming {
		config {
			theme
			iconset
			darkMode
			tocPosition
			injectCSS
			injectHead
			injectBody
		}
	}
}
`

func GetThemeConfig(
	ctx context.Context,
	client graphql.Client,
) (*GetThemeConfigResponse, error) {
	req := &graphql.Request{
		OpName: "GetThemeConfig",
		Query:  GetThemeConfig_Operation,
	}
	var err error

	var data GetThemeConfigResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetThemes.
const GetThemes_Operation = `
query GetThemes {
	theming {
		themes {
			key
			title
			author
		}
	}
}
`

func GetThemes(
	ctx context.Context,
	client graphql.Client,
) (*GetThemesResponse, error) {
	req := &graphql.Request{
		OpName: "GetThemes",
		Query:  GetThemes_Operation,
	}
	var err error

	var data GetThemesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GroupAssignUser.
const GroupAssignUser_Operation = `
mutation GroupAssignUser ($groupId: Int!, $userId: Int!) {
	groups {
		assignUser(groupId: $groupId, userId: $userId) {
			responseResult {
				succeeded
				errorCode
				slug
				message
			}
		}
	}
}
`

func GroupAssignUser(
	ctx context.Context,
	client graphql.Client,
	groupId int,
	userId int,
) (*GroupAssignUserResponse, error) {
	req := &graphql.Request{
		OpName: "GroupAssignUser",
		Query:  GroupAssignUser_Operation,
		Variables: &__GroupAssignUserInput{
			GroupId: groupId,
			UserId:  userId,
		},
	}
	var err error

	var data GroupAssignUserResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GroupUnassignUser.
const GroupUnassignUser_Operation = `
mutation GroupUnassignUser ($groupId: Int!, $userId: Int!) {
	groups {
		assignUser(groupId: $groupId, userId: $userId) {
			responseResult {
				succeeded
				errorCode
				slug
				message
			}
		}
	}
}
`

func GroupUnassignUser(
	ctx context.Context,
	client graphql.Client,
	groupId int,
	userId int,
) (*GroupUnassignUserResponse, error) {
	req := &graphql.Request{
		OpName: "GroupUnassignUser",
		Query:  GroupUnassignUser_Operation,
		Variables: &__GroupUnassignUserInput{
			GroupId: groupId,
			UserId:  userId,
		},
	}
	var err error

	var data GroupUnassignUserResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by ListGroups.
const ListGroups_Operation = `
query ListGroups ($filter: String, $orderBy: String) {
	groups {
		list(filter: $filter, orderBy: $orderBy) {
			id
			name
			isSystem
			userCount
			createdAt
			updatedAt
		}
	}
}
`

func ListGroups(
	ctx context.Context,
	client graphql.Client,
	filter string,
	orderBy string,
) (*ListGroupsResponse, error) {
	req := &graphql.Request{
		OpName: "ListGroups",
		Query:  ListGroups_Operation,
		Variables: &__ListGroupsInput{
			Filter:  filter,
			OrderBy: orderBy,
		},
	}
	var err error

	var data ListGroupsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by Login.
const Login_Operation = `
mutation Login ($username: String!, $password: String!, $strategy: String!) {
	authentication {
		login(username: $username, password: $password, strategy: $strategy) {
			responseResult {
				succeeded
				errorCode
				slug
				message
			}
			jwt
			mustChangePwd
			mustProvideTFA
			mustSetupTFA
			continuationToken
			redirect
			tfaQRImage
		}
	}
}
`

func Login(
	ctx context.Context,
	client graphql.Client,
	username string,
	password string,
	strategy string,
) (*LoginResponse, error) {
	req := &graphql.Request{
		OpName: "Login",
		Query:  Login_Operation,
		Variables: &__LoginInput{
			Username: username,
			Password: password,
			Strategy: strategy,
		},
	}
	var err error

	var data LoginResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by RevokeApiKey.
const RevokeApiKey_Operation = `
mutation RevokeApiKey ($id: Int!) {
	authentication {
		revokeApiKey(id: $id) {
			responseResult {
				succeeded
				errorCode
				slug
				message
			}
		}
	}
}
`

func RevokeApiKey(
	ctx context.Context,
	client graphql.Client,
	id int,
) (*RevokeApiKeyResponse, error) {
	req := &graphql.Request{
		OpName: "RevokeApiKey",
		Query:  RevokeApiKey_Operation,
		Variables: &__RevokeApiKeyInput{
			Id: id,
		},
	}
	var err error

	var data RevokeApiKeyResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by SetApiState.
const SetApiState_Operation = `
mutation SetApiState ($enabled: Boolean!) {
	authentication {
		setApiState(enabled: $enabled) {
			responseResult {
				succeeded
				errorCode
				slug
				message
			}
		}
	}
}
`

func SetApiState(
	ctx context.Context,
	client graphql.Client,
	enabled bool,
) (*SetApiStateResponse, error) {
	req := &graphql.Request{
		OpName: "SetApiState",
		Query:  SetApiState_Operation,
		Variables: &__SetApiStateInput{
			Enabled: enabled,
		},
	}
	var err error

	var data SetApiStateResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by SetAuthStrategies.
const SetAuthStrategies_Operation = `
mutation SetAuthStrategies ($strategies: [AuthenticationStrategyInput]!) {
	authentication {
		updateStrategies(strategies: $strategies) {
			responseResult {
				succeeded
				errorCode
				slug
				message
			}
		}
	}
}
`

func SetAuthStrategies(
	ctx context.Context,
	client graphql.Client,
	strategies []AuthenticationStrategyInput,
) (*SetAuthStrategiesResponse, error) {
	req := &graphql.Request{
		OpName: "SetAuthStrategies",
		Query:  SetAuthStrategies_Operation,
		Variables: &__SetAuthStrategiesInput{
			Strategies: strategies,
		},
	}
	var err error

	var data SetAuthStrategiesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by SetLocalization.
const SetLocalization_Operation = `
mutation SetLocalization ($locale: String!, $autoUpdate: Boolean!, $namespacing: Boolean!, $namespaces: [String]!) {
	localization {
		updateLocale(locale: $locale, autoUpdate: $autoUpdate, namespacing: $namespacing, namespaces: $namespaces) {
			responseResult {
				succeeded
				errorCode
				slug
				message
			}
		}
	}
}
`

func SetLocalization(
	ctx context.Context,
	client graphql.Client,
	locale string,
	autoUpdate bool,
	namespacing bool,
	namespaces []string,
) (*SetLocalizationResponse, error) {
	req := &graphql.Request{
		OpName: "SetLocalization",
		Query:  SetLocalization_Operation,
		Variables: &__SetLocalizationInput{
			Locale:      locale,
			AutoUpdate:  autoUpdate,
			Namespacing: namespacing,
			Namespaces:  namespaces,
		},
	}
	var err error

	var data SetLocalizationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by SetRenderers.
const SetRenderers_Operation = `
mutation SetRenderers ($renderers: [RendererInput]) {
	rendering {
		updateRenderers(renderers: $renderers) {
			responseResult {
				succeeded
				errorCode
				slug
				message
			}
		}
	}
}
`

func SetRenderers(
	ctx context.Context,
	client graphql.Client,
	renderers []RendererInput,
) (*SetRenderersResponse, error) {
	req := &graphql.Request{
		OpName: "SetRenderers",
		Query:  SetRenderers_Operation,
		Variables: &__SetRenderersInput{
			Renderers: renderers,
		},
	}
	var err error

	var data SetRenderersResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by SetSearchEngines.
const SetSearchEngines_Operation = `
mutation SetSearchEngines ($engines: [SearchEngineInput]) {
	search {
		updateSearchEngines(engines: $engines) {
			responseResult {
				succeeded
				errorCode
				slug
				message
			}
		}
	}
}
`

func SetSearchEngines(
	ctx context.Context,
	client graphql.Client,
	engines []SearchEngineInput,
) (*SetSearchEnginesResponse, error) {
	req := &graphql.Request{
		OpName: "SetSearchEngines",
		Query:  SetSearchEngines_Operation,
		Variables: &__SetSearchEnginesInput{
			Engines: engines,
		},
	}
	var err error

	var data SetSearchEnginesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by SetThemeConfig.
const SetThemeConfig_Operation = `
mutation SetThemeConfig ($theme: String!, $iconset: String!, $darkMode: Boolean!, $tocPosition: String, $injectCSS: String, $injectHead: String, $injectBody: String) {
	theming {
		setConfig(theme: $theme, iconset: $iconset, darkMode: $darkMode, tocPosition: $tocPosition, injectCSS: $injectCSS, injectHead: $injectHead, injectBody: $injectBody) {
			responseResult {
				succeeded
				errorCode
				slug
				message
			}
		}
	}
}
`

func SetThemeConfig(
	ctx context.Context,
	client graphql.Client,
	theme string,
	iconset string,
	darkMode bool,
	tocPosition string,
	injectCSS string,
	injectHead string,
	injectBody string,
) (*SetThemeConfigResponse, error) {
	req := &graphql.Request{
		OpName: "SetThemeConfig",
		Query:  SetThemeConfig_Operation,
		Variables: &__SetThemeConfigInput{
			Theme:       theme,
			Iconset:     iconset,
			DarkMode:    darkMode,
			TocPosition: tocPosition,
			InjectCSS:   injectCSS,
			InjectHead:  injectHead,
			InjectBody:  injectBody,
		},
	}
	var err error

	var data SetThemeConfigResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by UpdateGroup.
const UpdateGroup_Operation = `
mutation UpdateGroup ($id: Int!, $name: String!, $redirectOnLogin: String!, $permissions: [String]!, $pageRules: [PageRuleInput]!) {
	groups {
		update(id: $id, name: $name, redirectOnLogin: $redirectOnLogin, permissions: $permissions, pageRules: $pageRules) {
			responseResult {
				succeeded
				errorCode
				slug
				message
			}
		}
	}
}
`

func UpdateGroup(
	ctx context.Context,
	client graphql.Client,
	id int,
	name string,
	redirectOnLogin string,
	permissions []string,
	pageRules []PageRuleInput,
) (*UpdateGroupResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateGroup",
		Query:  UpdateGroup_Operation,
		Variables: &__UpdateGroupInput{
			Id:              id,
			Name:            name,
			RedirectOnLogin: redirectOnLogin,
			Permissions:     permissions,
			PageRules:       pageRules,
		},
	}
	var err error

	var data UpdateGroupResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by UpdatePage.
const UpdatePage_Operation = `
mutation UpdatePage ($id: Int!, $content: String!, $description: String!, $editor: String!, $isPublished: Boolean!, $isPrivate: Boolean!, $locale: String!, $path: String!, $publishEndDate: Date, $publishStartDate: Date, $scriptCss: String, $scriptJs: String, $tags: [String]!, $title: String!) {
	pages {
		update(id: $id, content: $content, description: $description, editor: $editor, isPublished: $isPublished, isPrivate: $isPrivate, locale: $locale, path: $path, publishEndDate: $publishEndDate, publishStartDate: $publishStartDate, scriptCss: $scriptCss, scriptJs: $scriptJs, tags: $tags, title: $title) {
			responseResult {
				succeeded
				errorCode
				slug
				message
			}
			page {
				id
				path
				hash
				title
				description
				isPrivate
				isPublished
				privateNS
				publishStartDate
				publishEndDate
				tags {
					id
					tag
					title
					createdAt
					updatedAt
				}
				content
				render
				contentType
				createdAt
				updatedAt
				scriptCss
				scriptJs
				authorId
				authorName
				authorEmail
				creatorId
				creatorName
				creatorEmail
			}
		}
	}
}
`

func UpdatePage(
	ctx context.Context,
	client graphql.Client,
	id int,
	content string,
	description string,
	editor string,
	isPublished bool,
	isPrivate bool,
	locale string,
	path string,
	publishEndDate string,
	publishStartDate string,
	scriptCss string,
	scriptJs string,
	tags []string,
	title string,
) (*UpdatePageResponse, error) {
	req := &graphql.Request{
		OpName: "UpdatePage",
		Query:  UpdatePage_Operation,
		Variables: &__UpdatePageInput{
			Id:               id,
			Content:          content,
			Description:      description,
			Editor:           editor,
			IsPublished:      isPublished,
			IsPrivate:        isPrivate,
			Locale:           locale,
			Path:             path,
			PublishEndDate:   publishEndDate,
			PublishStartDate: publishStartDate,
			ScriptCss:        scriptCss,
			ScriptJs:         scriptJs,
			Tags:             tags,
			Title:            title,
		},
	}
	var err error

	var data UpdatePageResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by UpdateSiteConfig.
const UpdateSiteConfig_Operation = `
mutation UpdateSiteConfig ($host: String, $title: String, $description: String, $robots: [String], $analyticsService: String, $analyticsId: String, $company: String, $contentLicense: String, $footerOverride: String, $logoUrl: String, $pageExtensions: String, $authAutoLogin: Boolean, $authEnforce2FA: Boolean, $authHideLocal: Boolean, $authLoginBgUrl: String, $authJwtAudience: String, $authJwtExpiration: String, $authJwtRenewablePeriod: String, $editFab: Boolean, $editMenuBar: Boolean, $editMenuBtn: Boolean, $editMenuExternalBtn: Boolean, $editMenuExternalName: String, $editMenuExternalIcon: String, $editMenuExternalUrl: String, $featurePageRatings: Boolean, $featurePageComments: Boolean, $featurePersonalWikis: Boolean, $securityOpenRedirect: Boolean, $securityIframe: Boolean, $securityReferrerPolicy: Boolean, $securityTrustProxy: Boolean, $securitySRI: Boolean, $securityHSTS: Boolean, $securityHSTSDuration: Int, $securityCSP: Boolean, $securityCSPDirectives: String, $uploadMaxFileSize: Int, $uploadMaxFiles: Int, $uploadScanSVG: Boolean, $uploadForceDownload: Boolean) {
	site {
		updateConfig(host: $host, title: $title, description: $description, robots: $robots, analyticsService: $analyticsService, analyticsId: $analyticsId, company: $company, contentLicense: $contentLicense, footerOverride: $footerOverride, logoUrl: $logoUrl, pageExtensions: $pageExtensions, authAutoLogin: $authAutoLogin, authEnforce2FA: $authEnforce2FA, authHideLocal: $authHideLocal, authLoginBgUrl: $authLoginBgUrl, authJwtAudience: $authJwtAudience, authJwtExpiration: $authJwtExpiration, authJwtRenewablePeriod: $authJwtRenewablePeriod, editFab: $editFab, editMenuBar: $editMenuBar, editMenuBtn: $editMenuBtn, editMenuExternalBtn: $editMenuExternalBtn, editMenuExternalName: $editMenuExternalName, editMenuExternalIcon: $editMenuExternalIcon, editMenuExternalUrl: $editMenuExternalUrl, featurePageRatings: $featurePageRatings, featurePageComments: $featurePageComments, featurePersonalWikis: $featurePersonalWikis, securityOpenRedirect: $securityOpenRedirect, securityIframe: $securityIframe, securityReferrerPolicy: $securityReferrerPolicy, securityTrustProxy: $securityTrustProxy, securitySRI: $securitySRI, securityHSTS: $securityHSTS, securityHSTSDuration: $securityHSTSDuration, securityCSP: $securityCSP, securityCSPDirectives: $securityCSPDirectives, uploadMaxFileSize: $uploadMaxFileSize, uploadMaxFiles: $uploadMaxFiles, uploadScanSVG: $uploadScanSVG, uploadForceDownload: $uploadForceDownload) {
			responseResult {
				succeeded
				errorCode
				slug
				message
			}
		}
	}
}
`

func UpdateSiteConfig(
	ctx context.Context,
	client graphql.Client,
	host string,
	title string,
	description string,
	robots []string,
	analyticsService string,
	analyticsId string,
	company string,
	contentLicense string,
	footerOverride string,
	logoUrl string,
	pageExtensions string,
	authAutoLogin bool,
	authEnforce2FA bool,
	authHideLocal bool,
	authLoginBgUrl string,
	authJwtAudience string,
	authJwtExpiration string,
	authJwtRenewablePeriod string,
	editFab bool,
	editMenuBar bool,
	editMenuBtn bool,
	editMenuExternalBtn bool,
	editMenuExternalName string,
	editMenuExternalIcon string,
	editMenuExternalUrl string,
	featurePageRatings bool,
	featurePageComments bool,
	featurePersonalWikis bool,
	securityOpenRedirect bool,
	securityIframe bool,
	securityReferrerPolicy bool,
	securityTrustProxy bool,
	securitySRI bool,
	securityHSTS bool,
	securityHSTSDuration int,
	securityCSP bool,
	securityCSPDirectives string,
	uploadMaxFileSize int,
	uploadMaxFiles int,
	uploadScanSVG bool,
	uploadForceDownload bool,
) (*UpdateSiteConfigResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateSiteConfig",
		Query:  UpdateSiteConfig_Operation,
		Variables: &__UpdateSiteConfigInput{
			Host:                   host,
			Title:                  title,
			Description:            description,
			Robots:                 robots,
			AnalyticsService:       analyticsService,
			AnalyticsId:            analyticsId,
			Company:                company,
			ContentLicense:         contentLicense,
			FooterOverride:         footerOverride,
			LogoUrl:                logoUrl,
			PageExtensions:         pageExtensions,
			AuthAutoLogin:          authAutoLogin,
			AuthEnforce2FA:         authEnforce2FA,
			AuthHideLocal:          authHideLocal,
			AuthLoginBgUrl:         authLoginBgUrl,
			AuthJwtAudience:        authJwtAudience,
			AuthJwtExpiration:      authJwtExpiration,
			AuthJwtRenewablePeriod: authJwtRenewablePeriod,
			EditFab:                editFab,
			EditMenuBar:            editMenuBar,
			EditMenuBtn:            editMenuBtn,
			EditMenuExternalBtn:    editMenuExternalBtn,
			EditMenuExternalName:   editMenuExternalName,
			EditMenuExternalIcon:   editMenuExternalIcon,
			EditMenuExternalUrl:    editMenuExternalUrl,
			FeaturePageRatings:     featurePageRatings,
			FeaturePageComments:    featurePageComments,
			FeaturePersonalWikis:   featurePersonalWikis,
			SecurityOpenRedirect:   securityOpenRedirect,
			SecurityIframe:         securityIframe,
			SecurityReferrerPolicy: securityReferrerPolicy,
			SecurityTrustProxy:     securityTrustProxy,
			SecuritySRI:            securitySRI,
			SecurityHSTS:           securityHSTS,
			SecurityHSTSDuration:   securityHSTSDuration,
			SecurityCSP:            securityCSP,
			SecurityCSPDirectives:  securityCSPDirectives,
			UploadMaxFileSize:      uploadMaxFileSize,
			UploadMaxFiles:         uploadMaxFiles,
			UploadScanSVG:          uploadScanSVG,
			UploadForceDownload:    uploadForceDownload,
		},
	}
	var err error

	var data UpdateSiteConfigResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
